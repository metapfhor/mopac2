      SUBROUTINE STEPSCAN
      INCLUDE 'SIZES'
      COMMON /SCANR / ISCAN,NSCAN,STEPS,STARTS,LIMS,NDIM,IVALS,REDSCN
      INTEGER ISCAN,NSCAN,IVALS(2,3*NUMATM),NDIM
      DOUBLE PRECISION STEPS(3*NUMATM),STARTS(3*NUMATM),LIMS(3*NUMATM)
      COMMON /ALTCON / TRLB, ROTB, ROTD, ATMS, ICONXN, APPLIED,
     1                  VALS, NVALS
      COMMON /GEOM  / GEO
      INTEGER TRLB, ROTB, ROTD, ATMS, ICONXN(6,NUMATM),NVALS,MAXLIM
      LOGICAL APPLIED,REDSCN
      DOUBLE PRECISION VALS(3*NUMATM),ATOT(3,3),GEO(3,NUMATM)
      IF(NDIM.GT.0)THEN
      GEO(IVALS(2,1),IVALS(1,1))=GEO(IVALS(2,1),IVALS(1,1))+STEPS(1)
      IF(ABS(GEO(IVALS(2,1),IVALS(2,1))-STARTS(1)).LT.
     1 ABS(STEPS(1)/2.0D0).OR.ABS(GEO(IVALS(2,1),IVALS(1,1))-LIMS(1))
     2.LT.ABS(STEPS(1)/2.D0))THEN
      DO I=1,NDIM
      IF(ABS(GEO(IVALS(2,I),IVALS(1,I))-STARTS(I)).LT.
     1 ABS(STEPS(I)/2.0D0).OR.ABS(GEO(IVALS(2,I),IVALS(1,I))-LIMS(I))
     2.LT.ABS(STEPS(I)/2.D0))THEN

          MAXLIM=I
      ENDIF
      END DO
      DO I=MAXLIM,1,-1
        STEPS(I)=-STEPS(I)
      END DO
      MAXLIM=MAXLIM+1
      GEO(IVALS(2,MAXLIM),IVALS(1,MAXLIM))=GEO(IVALS(2,MAXLIM),
     1                                    IVALS(1,MAXLIM))+STEPS(MAXLIM)
      ELSE
      ENDIF
      ENDIF
      ISCAN=ISCAN+1
      RETURN
      END


      SUBROUTINE ADDSCAN(START,STEP,NUM,ATM,COORD)
**************************************************************************
*
*       MUST BE CALLED IMMEDIATELY AFTER ADDTRLB/BANGLE/DIHDR
*
**************************************************************************
      INCLUDE 'SIZES'
      COMMON /SCANR / ISCAN,NSCAN,STEPS,STARTS,LIMS,NDIM,IVALS,REDSCN
      INTEGER ISCAN,NSCAN,IVALS(2,3*NUMATM),NDIM
      DOUBLE PRECISION STEPS(3*NUMATM),STARTS(3*NUMATM),LIMS(3*NUMATM)
      COMMON /ALTCON / TRLB, ROTB, ROTD, ATMS, ICONXN, APPLIED,
     1                  VALS, NVALS
      INTEGER TRLB, ROTB, ROTD, ATMS, ICONXN(6,NUMATM),NVALS,MAXLIM,
     1          ATM,COORD
      LOGICAL APPLIED,REDSCN
      DOUBLE PRECISION VALS(3*NUMATM),ATOT(3,3),START,STEP
      NDIM=NDIM+1
      IVALS(1,NDIM)=ATM
      IVALS(2,NDIM)=COORD
      STARTS(NDIM)=START
      LIMS(NDIM)=START+(NUM)*STEP
      STEPS(NDIM)=STEP
      NSCAN=NSCAN*(NUM+1)
      END

      SUBROUTINE READSCANSTATE()
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
      INCLUDE 'SIZES'
      COMMON /ATOMTX/ LTXT, TXTATM(NUMATM)
      COMMON /KEYWRD/ KEYWRD
      COMMON /TITLES/ KOMENT,TITLE
      COMMON /GEOKST/ NATOMS,LABELS(NUMATM),
     1NA(NUMATM),NB(NUMATM),NC(NUMATM)
      COMMON /GEOVAR/ NVAR, LOC(2,MAXPAR), IDUMY, XPARAM(MAXPAR)
      COMMON /ALTCON / TRLB, ROTB, ROTD, ATMS, ICONXN, APPLIED,
     1                  VALS, NVALS
      COMMON /PERMUTE /PR,PRT
      COMMON /GEOM  / GEO(3,NUMATM)
      COMMON /AXES / XHAT(3),YHAT(3),ZHAT(3),OFF(3),ATOT
      COMMON /SCANR / ISCAN,NSCAN,STEPS,STARTS,LIMS,NDIM,IVALS,REDSCN
      INTEGER ISCAN,NSCAN,IVALS(2,3*NUMATM),NDIM
      DOUBLE PRECISION STEPS(3*NUMATM),STARTS(3*NUMATM),LIMS(3*NUMATM)
      INTEGER PR(NUMATM),PRT(NUMATM),GETSIZE
      INTEGER TRLB, ROTB, ROTD, ATMS, ICONXN(6,NUMATM),NVALS
     1          ,FILEI,FILEN,LENGTH(80),ANGLES(80),DIHDRL(80),ATOMS(80)
      LOGICAL APPLIED,PRMTD,REDSCN
      DOUBLE PRECISION VALS(3*NUMATM),ATOT(3,3)
      CHARACTER KEYWRD*241, KOMENT*81, TITLE*81,GETNAM*80,TXTATM*8,
     1           LTXT*1
      POINTER(LENG,LENGTH),(ANGL,ANGLES),(DIH,DIHDRL),(ATM,ATOMS)
      REDSCN=.TRUE.
      OPEN(UNIT=26,FILE=GETNAM('FOR005'),STATUS='OLD')
      READ(26,'(2I16)')ISCAN,NSCAN
      IF(ISCAN.GE.NSCAN)STOP
      READ(26,'(I6)')NATOMS
      READ(26,'(A)')KEYWRD(:),KOMENT(:),TITLE(:)
      READ(26,'(I3)')(LABELS(I),I=1,NATOMS)
      READ(26,'(3I3)')(NA(I),NB(I),NC(I),I=1,NATOMS)
      READ(26,'(3ES20.12)')((GEO(J,I),J=1,3),I=1,NATOMS)
      READ(26,'(I6)')NVAR
      READ(26,'(2I3)')(LOC(1,I),LOC(2,I),I=1,NVAR)
      READ(26,'(ES20.12)')(XPARAM(I),I=1,NVAR)
C       PERMUTE
      READ(26,'(I3)')(PR(I),I=1,NATOMS)
      READ(26,'(I3)')(PRT(I),I=1,NATOMS)
C       ALTCON
!      LENG=TRLB
!      ANGL=ROTB
!      DIH=ROTD
!      ATM=ATMS
!      READ(26,'(I3)')LENG
!      TRLB=NEWARR(LENG)
!      LENG=TRLB
!      IF(GETSIZE(TRLB).NE.0)
!     1READ(26,'(5I3)')(LENGTH(I),I=1,GETSIZE(TRLB))
!      READ(26,'(I3)')ANGL
!      ROTB=NEWARR(ANGL)
!      ANGL=TRLB
!      IF(GETSIZE(ROTB).NE.0)
!     1 READ(26,'(6I3)')(ANGLES(I),I=1,GETSIZE(ROTB))
!      READ(26,'(I3)')DIH
!      ROTD=NEWARR(DIH)
!      DIH=ROTD
!      IF(GETSIZE(ROTD).NE.0)
!     1 READ(26,'(7I3)')(DIHDRL(I),I=1,GETSIZE(ROTD))
!      READ(26,'(I3)')ATM
!      ATMS=NEWARR(ATM)
!      ATM=ATMS
!      IF(GETSIZE(ATMS).NE.0)
!     1 READ(26,'(I3)')(ATOMS(I),I=1,GETSIZE(ATMS))
!      READ(26,'(6I3)')((ICONXN(I,J),I=1,6),J=1,NATOMS)
!      READ(26,'(I3)')NVALS
!      READ(26,'(ES20.12)')(VALS(I),I=1,NVALS)
C       SCANR
      READ(26,'(I3)')NDIM
      READ(26,'(3ES20.12,2I3)')
     1 (STARTS(I),STEPS(I),LIMS(I),IVALS(1,I),IVALS(2,I),I=1,NDIM)
C       AXES
      READ(26,'(3ES20.12)')(XHAT(I),I=1,3)
      READ(26,'(3ES20.12)')(YHAT(I),I=1,3)
      READ(26,'(3ES20.12)')(ZHAT(I),I=1,3)
      READ(26,'(3ES20.12)')(OFF(I),I=1,3)
      READ(26,'(3ES20.12)')((ATOT(I,J),J=1,3),I=1,3)
      CLOSE(26)
  403 CONTINUE
      DO I=1,NUMATM
      TXTATM(I)=""
      END DO
      END


      SUBROUTINE WRITESCANSTATE()
      IMPLICIT DOUBLE PRECISION (A-H, O-Z)
      INCLUDE 'SIZES'

      COMMON /KEYWRD/ KEYWRD
      COMMON /TITLES/ KOMENT,TITLE
      COMMON /GEOKST/ NATOMS,LABELS(NUMATM),
     1NA(NUMATM),NB(NUMATM),NC(NUMATM)
      COMMON /GEOVAR/ NVAR, LOC(2,MAXPAR), IDUMY, XPARAM(MAXPAR)
      COMMON /ALTCON / TRLB, ROTB, ROTD, ATMS, ICONXN, APPLIED,
     1                  VALS, NVALS
      COMMON /PERMUTE /PR,PRT
      COMMON /GEOM  / GEO(3,NUMATM)
      COMMON /AXES / XHAT(3),YHAT(3),ZHAT(3),OFF(3),ATOT
      COMMON /SCANR / ISCAN,NSCAN,STEPS,STARTS,LIMS,NDIM,IVALS,REDSCN
      INTEGER ISCAN,NSCAN,IVALS(2,3*NUMATM),NDIM
      DOUBLE PRECISION STEPS(3*NUMATM),STARTS(3*NUMATM),LIMS(3*NUMATM)
      INTEGER PR(NUMATM),PRT(NUMATM),GETLENGTH
      INTEGER TRLB, ROTB, ROTD, ATMS, ICONXN(6,NUMATM),NVALS
     1          ,FILEI,FILEN,LENGTH(80),ANGLES(80),DIHDRL(80),ATOMS(80)
      LOGICAL APPLIED,PRMTD,REDSCN
      DOUBLE PRECISION VALS(3*NUMATM),ATOT(3,3)
      CHARACTER KEYWRD*241, KOMENT*81, TITLE*81,GETNAM*80
      POINTER(LENG,LENGTH),(ANGL,ANGLES),(DIH,DIHDRL),(ATM,ATOMS)
      IF(REDSCN)THEN
      OPEN(UNIT=26,FILE=GETNAM('FOR005'),STATUS='REPLACE')
      ELSE
      OPEN(UNIT=26,FILE=GETNAM('FOR026'),STATUS='REPLACE')
      ENDIF
      WRITE(26,'(2I16)')ISCAN,NSCAN
      WRITE(26,'(I6)')NATOMS
      WRITE(26,'(A)')KEYWRD(:),KOMENT(:),TITLE(:)
      WRITE(26,'(I3)')(LABELS(I),I=1,NATOMS)
      WRITE(26,'(3I3)')(NA(I),NB(I),NC(I),I=1,NATOMS)
      WRITE(26,'(3ES20.12)')((GEO(J,I),J=1,3),I=1,NATOMS)
      WRITE(26,'(I6)')NVAR
      WRITE(26,'(2I3)')(LOC(1,I),LOC(2,I),I=1,NVAR)
      WRITE(26,'(ES20.10)')(XPARAM(I),I=1,NVAR)
C       PERMUTE
      WRITE(26,'(I3)')(PR(I),I=1,NATOMS)
      WRITE(26,'(I3)')(PRT(I),I=1,NATOMS)
C       ALTCON
!      LENG=TRLB
!      ANGL=ROTB
!      DIH=ROTD
!      ATM=ATMS
!      WRITE(26,'(I3)')GETLENGTH(TRLB)
!      IF(GETLENGTH(TRLB).NE.0)
!     1WRITE(26,'(5I3)')(LENGTH(I),I=1,GETLENGTH(TRLB))
!      WRITE(26,'(I3)')GETLENGTH(ROTB)
!      IF(GETLENGTH(ROTB).NE.0)
!     1 WRITE(26,'(6I3)')(ANGLES(I),I=1,GETLENGTH(ROTB))
!      WRITE(26,'(I3)')GETLENGTH(ROTD)
!      IF(GETLENGTH(ROTD).NE.0)
!     1 WRITE(26,'(7I3)')(DIHDRL(I),I=1,GETLENGTH(ROTD))
!      WRITE(26,'(I3)')GETLENGTH(ATMS)
!      IF(GETLENGTH(ATMS).NE.0)
!     1 WRITE(26,'(I3)')(ATOMS(I),I=1,GETLENGTH(ATMS))
!      WRITE(26,'(6I3)')((ICONXN(I,J),I=1,6),J=1,NATOMS)
!      WRITE(26,'(I3)')NVALS
!      WRITE(26,'(ES20.12)')(VALS(I),I=1,NVALS)
C       SCANR
      WRITE(26,'(I3)')NDIM
      WRITE(26,'(3ES20.12,2I3)')
     1 (STARTS(I),STEPS(I),LIMS(I),IVALS(1,I),IVALS(2,I),I=1,NDIM)
C       AXES
      WRITE(26,'(3ES20.12)')(XHAT(I),I=1,3)
      WRITE(26,'(3ES20.12)')(YHAT(I),I=1,3)
      WRITE(26,'(3ES20.12)')(ZHAT(I),I=1,3)
      WRITE(26,'(3ES20.12)')(OFF(I),I=1,3)
      WRITE(26,'(3ES20.12)')((ATOT(I,J),J=1,3),I=1,3)
      CLOSE(26)
      END


