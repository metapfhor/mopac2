      FUNCTION ANORM(A)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3)
      ANORM = SQRT(A(1)**2 + A(2)**2 + A(3)**2)
      RETURN
      END
      SUBROUTINE BPRINT
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*6      IAO2S,IAO2P,IAO3S,IAO3P
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,AOS,SHLADF
C
C     COMMON/DATBAS/NTYBAS,NUMG,NTYPOL,NTYGD,NTYSPD,NBAMOD
      COMMON/B/EXX(360),C1(360),C2(360),C3(360),X(90),Y(90),Z(90),
     1         JAN(90),SHELLA(90),SHELLN(90),SHELLT(90),SHELLC(90),
     2         AOS(90),NSHELL,MAXTYP
      COMMON/BX/ AON(90)
      COMMON /CHANEL/ IFILES(30)
      DIMENSION SHLADF(90),C4(90)
      EQUIVALENCE(C4(1),C3(91)),(SHLADF(1),C3(181))
      EQUIVALENCE (ITAB,IFILES(18))
      CHARACTER*10 IATOM(37), AP*1, PST*1, AON*6, SKIP1*1, STAR*1,
     1 SKIP2*1, STAR2*1
      COMMON /JOBNAM/ JOBNAM
      CHARACTER*80 JOBNAM
C
C     COMMON/IO/IN,IOUT,IPUNCH
C
      COMMON/SCALE/SCALE(90)
C     COMMON/IFBP/IFBP
C
      DIMENSION INCR(4,3)
C
      DATA IAO2S/'    2S'/,IAO2P/'    2P'/
      DATA IAO3S/'    3S'/,IAO3P/'    3P'/
      DATA THR1/1.0E-08/
      DATA INCR/4*0,0,1,4,10,2*0,4,10/
      DATA IATOM/
     1'  HYDROGEN','    HELIUM','   LITHIUM',' BERYLLIUM','     BORON',
     2'    CARBON','  NITROGEN','    OXYGEN','  FLUORINE','      NEON',
     3'    SODIUM',' MAGNESIUM',' ALUMINIUM','   SILICON','PHOSPHORUS',
     4'    SULFUR','  CHLORINE','     ARGON',' POTASSIUM','   CALCIUM',
     5'  SCANDIUM','  TITANIUM','  VANADIUM','  CHROMIUM',' MANGANESE',
     6'      IRON','    COBALT','    NICKEL','    COPPER','      ZINC',
     7'   GALLIUM',' GERMANIUM','   ARSENIC','  SELENIUM','   BROMINE',
     8'   KRYPTON','     BANQUO'/
      DATA ZERO/0.0E0/,AP/' '/,PST/'*'/
C
   10 FORMAT(2H *,129(1H-),1H*)
   20 FORMAT(2H *,A10,3F9.5,92X,1H*)
   30 FORMAT(2A1,45X,I3,3X,A6,5X,F5.2,62X,A1)
   40 FORMAT(2A1,41X,I3,1H-,I3,3X,A6,5X,F5.2,62X,A1)
   50 FORMAT(2A1,69X,5E12.6,A1)
   60 FORMAT(1X,131(1H*))
   70 FORMAT(2H *,13X,13HATOMIC CENTER,13X,1H*,8X,14HATOMIC ORBITAL,
     1 7X,1H*,21X,18HGAUSSIAN FUNCTIONS,20X,1H*)
   80 FORMAT(2H *,39X,1H*,1X,8HFUNCTION,4X,5HSHELL,4X,5HSCALE,2X,1H*,59X
     1,1H*)
   90 FORMAT(2H *,4X,4HATOM,3X,7HX-COORD,2X,7HY-COORD,2X,7HZ-COORD,
     1 3X,1H*,2X,6HNUMBER,5X,4HTYPE,5X,6HFACTOR,1X,1H*,2X,8HEXPONENT,
     2 4X,6HS-COEF,6X,6HP-COEF,6X,6HD-COEF,6X,6HF-COEF,3X,1H*)
  100 FORMAT(2H *,129X,1H*)
  110 FORMAT(11H0THERE ARE ,I4,21H PRIMITIVE GAUSSIANS./)
C
C     TEST FOR PRINTING OF B-TABLE.
C     IF( (KOP.EQ.2)
C    $  .OR. (KOP.EQ.0.AND.IFBP.EQ.0) )
C    $  GO TO 140
               I=INDEX(JOBNAM,' ')-1
               OPEN(UNIT=ITAB,FILE=JOBNAM(:I)//'.tab',
     1        STATUS='UNKNOWN')
      REWIND ITAB
      WRITE(ITAB,60)
      WRITE(ITAB,70)
      WRITE(ITAB,60)
      WRITE(ITAB,80)
      WRITE(ITAB,90)
      WRITE(ITAB,60)
C
      NPRIMS=0
C
C     COMMENCE LOOP OVER SHELLS.
      DO 270 ISHELL=1,NSHELL
C
C     TEST FOR FIRST PASS THROUGH LOOP.  IN THE FIRST PASS,
C     WE MUST PROCESS THE FIRST ATOM.
         IF(ISHELL-1)120,130,120
C
C     NOT FIRST PASS, COMPUTE DIFF AND TEST FOR STEP TO NEW ATOM.
  120    DIFF= ABS(X1-X(ISHELL))+ ABS(X2-Y(ISHELL))+ ABS(X3-Z(ISHELL))
         IF(DIFF-THR1)190,190,130
C
C     STEP TO NEW ATOM.
C     OBTAIN ATOMIC NUMBER AND TEST FOR BANQUO ATOM.
  130    IA=JAN(ISHELL)
C     IF (NTYBAS.LT.5.OR.NTYBAS.GE.7) GOTO 27
         IF (AON(ISHELL).EQ.IAO2S) IA=JAN(ISHELL)+2
         IF (AON(ISHELL).EQ.IAO2P) IA=JAN(ISHELL)+2
         IF (AON(ISHELL).EQ.IAO3S) IA=JAN(ISHELL)+10
         IF (AON(ISHELL).EQ.IAO3P) IA=JAN(ISHELL)+10
  140    IF(IA)160,150,160
  150    IA=37
C     OBTAIN COORDINATES.
  160    X1=X(ISHELL)
         X2=Y(ISHELL)
         X3=Z(ISHELL)
C     DO NOT PRINT MINUS LINE IF ISHELL=1.
         IF(ISHELL-1)180,180,170
  170    WRITE(ITAB,10)
C     PRINT ATOM NAME AND COORDINATES.
  180    WRITE(ITAB,20)IATOM(IA),X1,X2,X3
C     SET SKIP1 TO SUPPRESS LINE SKIPPING LATER ON.
         SKIP1=AP
         STAR=PST
         ISKIP=0
C
C     PROCESSING FOR SHELL INFORMATION LINE.
C     OBTAIN INDICES FOR NSTART INCREMENT.
  190    I=SHELLT(ISHELL)+1
         J=SHELLC(ISHELL)+1
         IP=SHELLT(ISHELL+1)+1
         JP=SHELLC(ISHELL+1)+1
C
C     OBTAIN NSTART AND NEND.
C     NOTE THAT NSTART IS INCREMENTED ACCORDING TO THE SHELL TYPE AND
C     SHELL CONSTRAINT.
         NSTART=AOS(ISHELL)+INCR(I,J)
         NEND=AOS(ISHELL+1)-1+INCR(IP,JP)
         NDIFF=NEND-NSTART+1
C     PRINT OF SHELL INFORMATION LINE DEPENDS ON WHETHER
C     NSTART=NEND.
         SCALEI=SCALE(ISHELL)
         IF(NSTART-NEND)210,200,210
  200    WRITE(ITAB,30)SKIP1,STAR,NSTART,AON(ISHELL),SCALEI,STAR
         GO TO 220
  210    WRITE(ITAB,40)SKIP1,STAR,NSTART,NEND,AON(ISHELL),SCALEI,STAR
  220    SKIP1=AP
         STAR=PST
         ISKIP=1
C
C     OUTPUT THE GAUSSIAN FUNCTION INFORMATION.
         NGAUSS=SHELLN(ISHELL)
         I=SHELLA(ISHELL)-1
         J=SHLADF(ISHELL)
         DO 260 IGAUSS=1,NGAUSS
            SKIP2=AP
            STAR2=PST
            IF(IGAUSS-1)240,230,240
  230       SKIP2=AP
            STAR2=PST
C     CORRECT PRINTED EXPONENT.
  240       EXXI=EXX(IGAUSS+I)/(SCALEI**2)
            C3A=ZERO
            C4A=ZERO
            IF(J)260,260,250
  250       C3A=C3(J)
            C4A=C4(J)
            J=J+1
  260    WRITE(ITAB,50)SKIP2,STAR2,EXXI,C1(IGAUSS+I),C2(IGAUSS+I),C3A,
     1 C4A,STAR2
C
  270 NPRIMS=NPRIMS+NDIFF*NGAUSS
      WRITE(ITAB,60)
      WRITE(ITAB,110) NPRIMS
      WRITE(ITAB,60)
C     GO TO 160
C
C     IN NO-PRINT MODE, MERELY DETERMINE THE NUMBER OF PRIMITIVE
C     GAUSSIANS.
C 140 NPRIMS=0
C     DO 150 ISHELL=1,NSHELL
C     I=SHELLT(ISHELL)+1
C     J=SHELLC(ISHELL)+1
C     IP=SHELLT(ISHELL+1)+1
C     JP=SHELLC(ISHELL+1)+1
C 150 NPRIMS=NPRIMS+((AOS(ISHELL+1)-1+INCR(IP,JP))
C    $             -(AOS(ISHELL)+INCR(I,J))+1)*SHELLN(ISHELL)
C
  280 RETURN
      END
      SUBROUTINE CADIMA
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'SIZES'
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,SHLADF,AOS
      INTEGER SCONA,SCONB
      INTEGER UBOUND,ULPURE
      INTEGER SHELLX
      CHARACTER*214 KEYWRD
      COMMON /KEYWRD/ KEYWRD
      COMMON /MOLKST/ NUMAT,NAT(NUMATM),NFIRST(NUMATM),NMIDLE(NUMATM),
     1  NLAST(NUMATM),NORBS,NELECS,NALPHA,NBETA,NCLOSE,NOPEN
      COMMON /VECTOR/ C(MORB2),EIGS(MAXORB),VECS(MORB2),EIGB(MAXORB)
      COMMON /SCRACH/ RXYZ(MPACK)
      COMMON /HMATRX/ H(MPACK)
      COMMON /FOKMAT/ F(MPACK)
      COMMON CXYZ(NUMATM,3),NATOMS,ICHARG,MULTIP,IAN(NUMATM),NAE,NBE,NE,
     1NBASIS
      COMMON/B/EXX(360),C1(360),C2(360),C3(360),X(90),Y(90),Z(90),
     1         JAN(90),SHELLA(90),SHELLN(90),SHELLT(90),SHELLC(90),
     2         AOS(90),NSHELL,MAXTYP
      COMMON/MAX/LAMAX,LBMAX,LPMAX
      COMMON/LIMIT/IMJ,ISTART,JSTART,IEND,JEND,IRANGE,JRANGE,LENTQ
      COMMON/TYPE/ITYPE,JTYPE
      COMMON/IA/LIND(151)
      COMMON/CONST/ZERO
C      COMMON/CONST/ZERO,HALF,ONE,ONEPT5,TWO,THREE,FOUR,TEN,F42
      COMMON/TWOP/TWOPT2,EPI
      COMMON/CFACT/PT5,R3OV2,ROOT3,ROOT5,ROOT15,R1,R2,R4,Z1,Z2,Z3
      COMMON/CONTR/CA(20),CB(20)
      COMMON/TWOC/TWOCX(9),TWOCY(9),TWOCZ(9)
      COMMON/THREEC/XIP(16),YIP(16),ZIP(16),SX(36),SY(36),SZ(36)
      COMMON/INTK/ZERO1,XINT(12)
      COMMON/NEW/INEW,JNEW
      COMMON/ORDER/NORDR(20),N6ORD(10),N5ORD(9),N10ORD(10),N7ORD(7),
     1             LBOUND(4,3),UBOUND(4),ULPURE(4)
      COMMON/BLOCK/SS(100),EEK(100),EEP(200)
      COMMON/IPURE/IPURD,IPURF
      COMMON/RYS/IOP1,IOP2
      COMMON/T2W21E/LENT(4),LINDT(4),IADR(4),S(4),
     1YCUT(4),T2(1030),W2(1030)
      COMMON/INTCON/F6I,F20I,F100
      COMMON/CC/CCX(112),CCY(112),CCZ(112)
      COMMON/CSS/CSS(396)
      COMMON/A/A(49)
      COMMON/SDIM/IDIM,INC
      COMMON/PDIM/INCP,IDIM2C,IDIMAA
      COMMON/XYZ/XV(55,65),YV(55,65),ZV(55,65)
      COMMON/BB/VALV(55,65),NPP,NY,IPR
      COMMON/DEORT/SHELLX(90)
C
      DIMENSION SHLADF(90),C4(90)
      DIMENSION TP(4),WP(4),FOC(150)
      DIMENSION INDIX(20),INDIY(20),INDIZ(20),INDJX(20),INDJY(20),
     1          INDJZ(20)
      DIMENSION INDSX(20),INDSY(20),INDSZ(20)
      DIMENSION IFPRT(8)
      DIMENSION DA(11325),D(150,150),V(150,150)
C
      EQUIVALENCE(C4(1),C3(91)),(SHLADF(1),C3(181))
      EQUIVALENCE (DA(1),D(1,1))
C
      DATA CUT1/-100.0E0/
      DATA INDJX/1,2,1,1,3,1,1,2,2,1,4,1,1,2,3,3,2,1,1,2/
      DATA INDJY/1,1,2,1,1,3,1,2,1,2,1,4,1,3,2,1,1,2,3,2/
      DATA INDJZ/1,1,1,2,1,1,3,1,2,2,1,1,4,1,1,2,3,3,2,2/
      DATA F15/15.0E0/
      DATA IFPRT/0,1,2,0,0,1,1,2/
C
C     ASSIGN VALUES TO SEVERAL VARIABLES
C
      IPURD=0
      IPURF=0
      CCX(1)=1.E0
      CCY(1)=1.E0
      CCZ(1)=1.E0
      ZERO1=0.E0
      INCP=0
      IDIM2C=7
      IDIMAA=49
      IDIM=6
      INC=2
      ZERO=0.E0
      ONEPT5=1.5E0
      TWO=2.E0
      THREE=3.E0
      TEN=10.E0
      F42=42.E0
      FOUR=4.E0
      DO 10 I=1,12
   10 XINT(I)=FLOAT(I)
      F100=100.E0
      F20=20.E0
      PT5=0.5E0
      IF (IPR.GT.1) GOTO 70
C
C     THE DENSITY MATRIX IS BUILT UP
C
      NMO=NE/2
      DO 20 I=1,NMO
   20 FOC(I)=TWO
C
C     EIGENVECTORS ARE DEORTHOGONALIZED AND STORED IN ARRAY V
C     DEPENDING ON HT METHOD USED TO COMPUTE THE MEP
C
      CALL MULLIK (C,H,F,NORBS,VECS,RXYZ)
      DO 30 I=1,NMO
         DO 30 J=1,NORBS
            IF (INDEX(KEYWRD,'ORT').NE.0) THEN
               V(J,I)=C(J+NORBS*I-NORBS)
            ELSE
               V(J,I)=VECS(J+NORBS*I-NORBS)
            END IF
   30 CONTINUE
      DO 50 I=1,NBASIS
         DO 50 J=1,I
            D(I,J)=ZERO
            DO 40 K=1,NMO
   40       D(I,J)=D(I,J)+FOC(K)*V(I,K)*V(J,K)
            IF(I.NE.J)D(I,J)=TWO*D(I,J)
   50 D(J,I)=D(I,J)
C
C     PLACES SYMMETRIC SQUARE ARRAY IN LINEAR FORM
C
C
      K=1
      DO 60 J=1,NBASIS
         DO 60 I=1,J
            DA(K)=D(I,J)
   60 K=K+1
   70 CONTINUE
C
C    *******************************************************************
C     INITIALIZE THIS OVERLAY.
C    *******************************************************************
C
      KOP1=6
      KOP2=0
      IOP1=KOP1
      IOP2=KOP2
      S(1)=0.25E0
      S(2)=0.367006838E0
      S(3)=0.180984215E0
      S(4)=0.116432928E0
      PI=FOUR* ATAN(1.D0)
      TWOPI=PI+PI
      ROOTPI= SQRT(PI)
      PI3HAF=PI*ROOTPI
C     /INTCON/ VARIABLES TO RPOLA.
      F6I=1.D0/XINT(6)
      F20I=1.D0/F20
C
      NTT=NBASIS*(NBASIS+1)/2
C
C     INITIALIZE /CFACT/.
      ROOT3= SQRT(XINT(3))
      R3OV2=0.5D0*ROOT3
      ROOT5= SQRT(XINT(5))
      ROOT15= SQRT(F15)
      R1=PT5* SQRT(XINT(5)/XINT(2))
      R2=XINT(3)/(XINT(2)*ROOT5)
      R4=PT5* SQRT(XINT(3)/XINT(2))
      Z1=XINT(4)/ROOT5
      Z2=XINT(1)/ROOT5
      Z3=XINT(3)/ROOT5
C
C     FILL INDS AND INDI.
      DO 80 I=1,20
         INDIX(I)=4*(INDJX(I)-1)
         INDIY(I)=4*(INDJY(I)-1)
         INDIZ(I)=4*(INDJZ(I)-1)
         INDSX(I)=6*(INDJX(I)-1)
         INDSY(I)=6*(INDJY(I)-1)
         INDSZ(I)=6*(INDJZ(I)-1)
   80 CONTINUE
C
C     CLEAR /TWOC/.
      DO 90 I=1,9
         TWOCZ(I)=ZERO
         TWOCY(I)=ZERO
   90 TWOCX(I)=ZERO
C
C     CLEAR /A/.
      DO 100 I=1,49
  100 A(I)=ZERO
C
C     CLEAR /CSS/.
      ZERO2=ZERO
      CSS(1)=1.D0
      DO 110 I=2,396
  110 CSS(I)=ZERO
C
C     CLEAR /THREEC/.
      DO 120 I=1,16
         ZIP(I)=ZERO
         YIP(I)=ZERO
  120 XIP(I)=ZERO
      DO 130 I=1,36
         SX(I)=ZERO
         SY(I)=ZERO
  130 SZ(I)=ZERO
C
C     CLEAR /CC/.
      WORD=ZERO
      DO 140 I=1,112
         CCZ(I)=ZERO
         CCY(I)=ZERO
  140 CCX(I)=ZERO
      CCX(1)=1.D0
      CCY(1)=1.D0
      CCZ(1)=1.D0
C
C     CLEAR /CONTR/.
      DO 150 I=1,20
         CA(I)=ZERO
  150 CB(I)=ZERO
C
C     FILL COMMON /ORDER/
C
      UBOUND(1)=1
      UBOUND(2)=4
      UBOUND(3)=10
      UBOUND(4)=20
      ULPURE(1)=1
      ULPURE(2)=4
      ULPURE(3)=9
      ULPURE(4)=17
      LBOUND(1,1)=1
      LBOUND(2,1)=1
      LBOUND(3,1)=1
      LBOUND(4,1)=1
      LBOUND(1,2)=1
      LBOUND(2,2)=2
      LBOUND(3,2)=5
      LBOUND(4,2)=11
      LBOUND(1,3)=1
      LBOUND(2,3)=1
      LBOUND(3,3)=5
      LBOUND(4,3)=11
      DO 160 I=1,10
  160 N6ORD(I)=I
      DO 170 I=1,9
  170 N5ORD(I)=I
      DO 180 I=1,10
  180 N10ORD(I)=I+10
      DO 190 I=1,7
  190 N7ORD(I)=I+10
C
C     INITIALIZE THE ORDERING VARIABLES USED BY FILMAT.
C     THIS PIECE OF CODE MAY LOOK REDUNDANT, BUT HANG ON TO IT.
C     ONE CAN USE THIS LOGIC TO ALTER THE ORDER OF THE BASIS FUNCTIONS.
C     (IE. CHANGE THE ORDER OF THE SIX D-FUNCTIONES, ETC.)
      IF(IPURD)220,200,220
  200 DO 210 I=1,9
  210 NORDR(I)=N5ORD(I)
      GO TO 240
  220 DO 230 I=1,10
  230 NORDR(I)=N6ORD(I)
  240 IF(IPURF)270,250,270
  250 DO 260 I=1,7
  260 NORDR(I+10)=N7ORD(I)
      GO TO 290
  270 DO 280 I=1,10
  280 NORDR(I+10)=N10ORD(I)
  290 CONTINUE
C
C     FILL INDEXING ARRAY FOR FILMAT AND LINOUT.
C
      NBASP=NBASIS+1
      DO 300 I=1,NBASP
  300 LIND(I)=(I*(I-1))/2
C
C    *******************************************************************
C     LOOP OVER SHELLS.
C    *******************************************************************
C
C     LOOP OVER ISHELL
C
      DO 390 ISHELL=1,NSHELL
         INEW=ISHELL
         XA=X(ISHELL)
         YA=Y(ISHELL)
         ZA=Z(ISHELL)
         IGBEGN=SHELLA(ISHELL)
         IGEND=IGBEGN+SHELLN(ISHELL)-1
         NA=SHELLN(ISHELL)
         ITYPE=SHELLT(ISHELL)
         LAMAX=ITYPE+1
         SCONA=SHELLC(ISHELL)
         IEND=UBOUND(LAMAX)
         ISTART=LBOUND(LAMAX,SCONA+1)
         IRANGE=IEND-ISTART+1
         IGDF=SHLADF(INEW)
C
C     LOOP OVER JSHELL.
C
         DO 390 JSHELL=1,ISHELL
            JNEW=JSHELL
            XB=X(JSHELL)
            YB=Y(JSHELL)
            ZB=Z(JSHELL)
            JGBEGN=SHELLA(JSHELL)
            JGEND=JGBEGN+SHELLN(JSHELL)-1
            NB=SHELLN(JSHELL)
            JTYPE=SHELLT(JSHELL)
            LBMAX=JTYPE+1
            SCONB=SHELLC(JSHELL)
            JSTART=LBOUND(LBMAX,SCONB+1)
            JEND=UBOUND(LBMAX)
            JRANGE=JEND-JSTART+1
            JGDF=SHLADF(JNEW)
C
C     OPTION TO COMPUTE MEP FOLLOWING REYNOLDS'S METHOD
C
            IF(INDEX(KEYWRD,'ORT').NE.0) THEN
               IF(SHELLX(ISHELL).NE.SHELLX(JSHELL)) GOTO 390
            END IF
C
            LPMAX=LAMAX+LBMAX-1
            LENTQ=IRANGE*JRANGE
            LIM1=LENTQ+100
            IMJ=IABS(ISHELL-JSHELL)
            NZERO=(ITYPE+JTYPE)/2+1
            ABX=XB-XA
            ABY=YB-YA
            ABZ=ZB-ZA
            RABSQ=ABX*ABX+ABY*ABY+ABZ*ABZ
  310       CONTINUE
C
C    *******************************************************************
C     LOOP OVER PRIMITIVE GAUSSIANS.
C    *******************************************************************
C
            DO 380 IRET=1,NPP
               DO 380 JRET=1,NY
                  DO 320 I=1,LENTQ
  320             EEP(I)=ZERO
                  DO 370 IGAUSS=IGBEGN,IGEND
                     AS=EXX(IGAUSS)
                     ASXA=AS*XA
                     ASYA=AS*YA
                     ASZA=AS*ZA
                     ARABSQ=AS*RABSQ
                     CALL FILLC(ITYPE,IGBEGN,IGAUSS,IGDF,CA)
C
                     DO 370 JGAUSS=JGBEGN,JGEND
                        BS=EXX(JGAUSS)
                        CALL FILLC(JTYPE,JGBEGN,JGAUSS,JGDF,CB)
C
                        EP=AS+BS
                        EPI=1.D0/EP
                        TWOP=EP+EP
                        ARG=-BS*ARABSQ*EPI
                        PEXP=ZERO
                        IF(ARG.GT.CUT1) PEXP=EXP(ARG)
                        ZTEMP=TWOPI*EPI*PEXP
                        PX=(ASXA+BS*XB)*EPI
                        PY=(ASYA+BS*YB)*EPI
                        PZ=(ASZA+BS*ZB)*EPI
C
                        XAP=PX-XA
                        XBP=PX-XB
                        YAP=PY-YA
                        YBP=PY-YB
                        ZAP=PZ-ZA
                        ZBP=PZ-ZB
C
                        CALL GETCC1(CCX,XAP,XBP)
                        CALL GETCC1(CCY,YAP,YBP)
                        CALL GETCC1(CCZ,ZAP,ZBP)
C
C     ZERO ACCUMULATION AREA.
C
                        DO 330 I=100,LIM1
  330                   EEP(I)=ZERO
C
C    *******************************************************************
C     LOOP OVER ATOMS.
C    *******************************************************************
C
C
                        XC=XV(IRET,JRET)
                        YC=YV(IRET,JRET)
                        ZC=ZV(IRET,JRET)
                        CIA= 1.D0
                        ZT=ZTEMP*CIA
                        PCX=XC-PX
                        PCY=YC-PY
                        PCZ=ZC-PZ
                        RPCSQ=PCX*PCX+PCY*PCY+PCZ*PCZ
                        ARG=EP*RPCSQ
                        CALL RPOL1(NZERO,ARG,TP,WP)
                        CALL GETA1(A)
C
C    *******************************************************************
C     LOOP OVER ZEROES OF RYS POLYNOMIAL.
C    *******************************************************************
C
                        DO 350 IZERO=1,NZERO
C
                           TWOPT2=TWOP*TP(IZERO)
                           ZCONST=ZT*WP(IZERO)
C
                           CALL GET2C(TWOCX,PCX,1.D0,A)
                           CALL GET2C(TWOCY,PCY,1.D0,A)
                           CALL GET2C(TWOCZ,PCZ,ZCONST,A)
C
                           CALL GET3C(XIP,TWOCX,CCX)
                           CALL GET3C(YIP,TWOCY,CCY)
                           CALL GET3C(ZIP,TWOCZ,CCZ)
C
C    *******************************************************************
C     LOOP OVER ATOMIC ORBITALS.
C    *******************************************************************
C
                           INTC=100
                           DO 340 I=ISTART,IEND
C
                              IX=INDIX(I)
                              IY=INDIY(I)
                              IZ=INDIZ(I)
C
                              DO 340 J=JSTART,JEND
                                 JX=INDJX(J)
                                 JY=INDJY(J)
                                 JZ=INDJZ(J)
C
                                 INTC=INTC+1
                                 EEP(INTC)=EEP(INTC)+XIP(IX+JX)*YIP(IY+J
     1Y)*ZIP(IZ+JZ)
C
  340                      CONTINUE
C     ... END OF AO LOOP.
C
  350                   CONTINUE
C     ... END OF LOOP OVER RYS ZEROES.
C
                        INTC=0
                        DO 360 I=ISTART,IEND
                           IX=INDSX(I)
                           IY=INDSY(I)
                           IZ=INDSZ(I)
                           DO 360 J=JSTART,JEND
                              JX=INDJX(J)
                              JY=INDJY(J)
                              JZ=INDJZ(J)
                              INTC=INTC+1
C
                              COEF=CA(I)*CB(J)
  360                   EEP(INTC)=EEP(INTC)+EEP(INTC+100)*COEF
C
  370             CONTINUE
C     ... END OF LOOP OVER GAUSSIANS.
C
C     FILMAT TAKES THE INTEGRALS IN EEP, EEK, AND SS, AND STORES THEM
C     IN THE PROPER PLACES IN S, T, AND V.
C
                  CALL FILMAT(EEP,DA)
  380       VALV(IRET,JRET)=VALV(IRET,JRET)-EEP(1)
  390 CONTINUE
C........ END OF LOOP OVER SHELLS.
      RETURN
      END
      SUBROUTINE CAT(A,B)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3,3)
      DIMENSION B(3,3)
      DIMENSION TEMP(3,3)
      DO 20 I = 1,3
         DO 10 J = 1,3
            TEMP(I,J) = A(I,1)*B(1,J) + A(I,2)*B(2,J) + A(I,3)*B(3,J)
   10    CONTINUE
   20 CONTINUE
      DO 40 I = 1,3
         DO 30 J = 1,3
            A(I,J) = TEMP(I,J)
   30    CONTINUE
   40 CONTINUE
      RETURN
      END
      SUBROUTINE CCI(A,B,RA,RB,PERP,BASE,VECT,TRI)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     ---- CIRCLE-CIRCLE INTERSECTION ----
C
      DIMENSION A(3), B(3)
      DIMENSION PERP(3)
      DIMENSION BASE(3)
      DIMENSION VECT(3)
      LOGICAL TRI
      DIMENSION C(3),CU(3),C1V(3)
      DO 10 K = 1,3
         C(K) = B(K) - A(K)
   10 CONTINUE
      DAB = ANORM(C)
C
C     ----- IS IT A TRIANGLE? ----
C
      TRI = .TRUE.
      IF (RA + RB .LE. DAB) TRI = .FALSE.
      IF (RA + DAB .LE. RB) TRI = .FALSE.
      IF (DAB + RB .LE. RA) TRI = .FALSE.
      IF (.NOT. TRI) RETURN
      CALL VNORM(C,CU)
      C1 = 0.5 * (DAB + (RA**2 - RB**2)/DAB)
      DO 20 K = 1,3
         C1V(K) = C(K) * (C1/DAB)
         BASE(K) = A(K) + C1V(K)
   20 CONTINUE
      V = SQRT(RA**2 - C1**2)
      CALL CROSS(C,PERP,VECT)
      CALL VNORM(VECT,VECT)
      DO 30 K = 1,3
         VECT(K) = VECT(K) * V
   30 CONTINUE
      RETURN
      END
      LOGICAL FUNCTION COLLI1(CW,RW,CNBR,RNBR,MNBR,NNBR,ISHAPE,
     1JNBR,KNBR)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     ----- COLLISION CHECK OF PROBE WITH NEIGHBORING ATOMS ---
C
      DIMENSION CW(3)
      DIMENSION CNBR(3,200)
      DIMENSION RNBR(200)
      LOGICAL MNBR(200)
      IF (NNBR .LE. 0) GO TO 20
C
C     ---- CHECK WHETHER PROBE IS TOO CLOSE TO ANY NEIGHBOR ----
C
      DO 10 I = 1, NNBR
         IF (ISHAPE .GT. 1 .AND. I .EQ. JNBR) GO TO 10
         IF (ISHAPE .EQ. 3 .AND. (I .EQ. KNBR .OR. .NOT. MNBR(I)))
     1GO TO 10
         SUMRAD = RW + RNBR(I)
         VECT1 = ABS(CW(1) - CNBR(1,I))
         IF (VECT1 .GE. SUMRAD) GO TO 10
         VECT2 = ABS(CW(2) - CNBR(2,I))
         IF (VECT2 .GE. SUMRAD) GO TO 10
         VECT3 = ABS(CW(3) - CNBR(3,I))
         IF (VECT3 .GE. SUMRAD) GO TO 10
         SR2 = SUMRAD ** 2
         DD2 = VECT1 ** 2 + VECT2 ** 2 + VECT3 ** 2
         IF (DD2 .LT. SR2) GO TO 30
   10 CONTINUE
   20 CONTINUE
      COLLI1 = .FALSE.
      GO TO 40
   30 CONTINUE
      COLLI1 = .TRUE.
   40 CONTINUE
      RETURN
      END
      SUBROUTINE CONJ(H,G,GHGT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION G(3,3)
      DIMENSION H(3,3)
      DIMENSION GHGT(3,3)
      DIMENSION GT(3,3)
C
C     ----- INITIALIZE GHGT MATRIX TO IDENTITY
C     CONCATENATE G H GT ----
C
      CALL IMATX(GHGT)
      CALL CAT(GHGT,G)
      CALL CAT(GHGT,H)
      DO 20 K = 1,3
         DO 10 L = 1,3
            GT(K,L) = G(L,K)
   10    CONTINUE
   20 CONTINUE
      CALL CAT(GHGT,GT)
      RETURN
      END
      SUBROUTINE CROSS(A,B,C)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3)
      DIMENSION B(3)
      DIMENSION C(3)
      C(1) = A(2) * B(3) - A(3) * B(2)
      C(2) = A(3) * B(1) - A(1) * B(3)
      C(3) = A(1) * B(2) - A(2) * B(1)
      RETURN
      END
      FUNCTION DET(A,B,C)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3)
      DIMENSION B(3)
      DIMENSION C(3)
      DIMENSION AB(3)
      CALL CROSS(A,B,AB)
      DET = DOT1(AB,C)
      RETURN
      END
      FUNCTION DINTRP(TABLE)
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
C
C***********************************************************************
C     ROUTINE TO PERFORM EVERETT INTERPOLATION WITH THROW-BACK TO
C     FOURTH ORDER USING TABLE.
C***********************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION TABLE(M+6)
C
      COMMON/MTPC/  AT,BT,AP,BP,CM1,C0,C1,C2,M
      EQUIVALENCE(CM2,BP),(C3,BT)
C
      X     =CM2*TABLE(M+1)+CM1*TABLE(M+2)+C0*TABLE(M+3)+C1*TABLE(M+4)+
     1       C2*TABLE(M+5)+C3*TABLE(M+6)
      DINTRP=X
C
      RETURN
      END
      FUNCTION DIST(A,B)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3)
      DIMENSION B(3)
      DIST = SQRT((A(1)-B(1))**2 + (A(2)-B(2))**2 + (A(3)-B(3))**2)
      RETURN
      END
      FUNCTION DOT1(A,B)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3)
      DIMENSION B(3)
      DOT1 = A(1)*B(1) + A(2)*B(2) + A(3)*B(3)
      RETURN
      END
      SUBROUTINE ERROR(NUMBER,INT,FLOAT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON/IO/IN,IOUT,IPUNCH
      DIMENSION LIST(15)
      DATA LIST/110,120,130,140,150,160,170,
     1210,320,440,480,720,760,830,850/
C
      DO 10 I = 1,15
         IF (LIST(I) .EQ. NUMBER) GO TO 30
   10 CONTINUE
      WRITE (IOUT,20)
   20 FORMAT('ERROR OF UNIDENTIFIABLE TYPE')
      CALL MOPEND
   30 CONTINUE
C
      GO TO (40,60,80,100,120,140,160,180,200,220,240,
     1260,280,300,320) I
C
   40 WRITE (IOUT,50) NUMBER,FLOAT
   50 FORMAT('ERROR',I5,2X,'NEGATIVE SURFACE POINT DENSITY: ',F10.5)
      CALL MOPEND
   60 WRITE (IOUT,70) NUMBER,FLOAT
   70 FORMAT('ERROR',I5,2X,'NEGATIVE PROBE RADIUS:',F10.5)
      CALL MOPEND
   80 WRITE (IOUT,90) NUMBER,INT
   90 FORMAT('ERROR',I5,2X,'TOO FEW OR TOO MANY ATOM TYPES:',I5)
      CALL MOPEND
  100 WRITE (IOUT,110) NUMBER,FLOAT,INT
  110 FORMAT('ERROR',I5,2X,'NEGATIVE ATOM RADIUS:',F10.5,' ATOM',I5)
      CALL MOPEND
  120 WRITE (IOUT,130) NUMBER,INT
  130 FORMAT('ERROR',I5,2X,'TOO MANY ATOMS:',I5)
      CALL MOPEND
  140 WRITE (IOUT,150) NUMBER,INT
  150 FORMAT('ERROR',I5,2X,
     1'INVALID SURFACE REQUEST NUMBER FOR ATOM:',I5)
      CALL MOPEND
  160 WRITE (IOUT,170) NUMBER,INT
  170 FORMAT('ERROR',I5,2X,'INVALID ATOM TYPE FOR ATOM:',I5)
      CALL MOPEND
  180 WRITE (IOUT,190) NUMBER,INT
  190 FORMAT('ERROR',I5,2X,'TOO MANY NEIGHBORS:',I5)
      CALL MOPEND
  200 WRITE (IOUT,210) NUMBER,INT
  210 FORMAT('ERROR',I5,2X,'TOO MANY POINTS FOR REENTRANT PROBE:',I5)
      CALL MOPEND
  220 WRITE (IOUT,230) NUMBER,INT
  230 FORMAT('ERROR',I5,2X,'TOO MANY POINTS FOR ARC:',I5)
      CALL MOPEND
  240 WRITE (IOUT,250) NUMBER,INT
  250 FORMAT('ERROR',I5,2X,'TOO MANY POINTS FOR REENTRANT PROBE:',I5)
      CALL MOPEND
  260 WRITE (IOUT,270) NUMBER,INT
  270 FORMAT('ERROR',I5,2X,'TOO MANY YON WATERS:',I5)
      CALL MOPEND
  280 WRITE (IOUT,290) NUMBER,INT
  290 FORMAT('ERROR',I5,2X,'TOO MANY VICTIM WATERS:',I5)
      CALL MOPEND
  300 WRITE (IOUT,310) NUMBER,INT
  310 FORMAT('ERROR',I5,2X,'TOO MANY EATERS:',I5)
      CALL MOPEND
  320 WRITE (IOUT,330) NUMBER,INT
  330 FORMAT('ERROR',I5,2X,'TOO MANY EATERS:',I5)
      CALL MOPEND
      END
      SUBROUTINE FILLC(IT,IGBEG,IGSP,IGDF,CA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,SHLADF,AOS
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
C
C***********************************************************************
C     ROUTINE TO OBTAIN S, P, D, AND F COEFFICIENTS FOR /B/.
C***********************************************************************
C
      DIMENSION CA(20)
      COMMON/B/EXX(360),C1(360),C2(360),C3(360),X(90),Y(90),Z(90),
     1         JAN(90),SHELLA(90),SHELLN(90),SHELLT(90),SHELLC(90),
     2         AOS(90),NSHELL,MAXTYP
      DIMENSION C4(90),SHLADF(90)
      EQUIVALENCE(C4(1),C3(91)),(SHLADF(1),C3(181))
      COMMON/CFACT/PT5,R3OV2,ROOT3,ROOT5,ROOT15,R1,R2,R4,Z1,Z2,Z3
C
C     TEST FOR F-FUNCTIONS.
      IF(IT-3)10,40,40
C
C     NO F-FUNCTIONS ARE INVOLVED, FILL ONLY THE FIRST 10 LOCATIONS
C     IN CA.
   10 CA(1)=C1(IGSP)
C
C     TEST FOR BEYOND S.
      IF(IT)50,50,20
C
C     FILL P-PART.
   20 CA(2)=C2(IGSP)
      CA(3)=C2(IGSP)
      CA(4)=C2(IGSP)
C
C     TEST FOR BEYOND P.
      IF(IT-1)50,50,30
C
C     FILL D-PART, AND WATCH OUT FOR NORMALIZATION.
C     INDDF PROVIDES INDEXING WHEN ADDED TO IGDF.
   30 INDDF=IGDF+(IGSP-IGBEG)
      CA( 5)=C3(INDDF)
      CA( 6)=C3(INDDF)
      CA( 7)=C3(INDDF)
      TEMP=C3(INDDF)*ROOT3
      CA( 8)=TEMP
      CA( 9)=TEMP
      CA(10)=TEMP
      GO TO 50
C
C     FILL F-PART.
C     INDDF PROVIDES INDEXING INTO C4.
   40 INDDF=IGDF+(IGSP-IGBEG)
      CA(11)=C4(INDDF)
      CA(12)=C4(INDDF)
      CA(13)=C4(INDDF)
      TEMP=C4(INDDF)*ROOT5
      CA(14)=TEMP
      CA(15)=TEMP
      CA(16)=TEMP
      CA(17)=TEMP
      CA(18)=TEMP
      CA(19)=TEMP
      CA(20)=C4(INDDF)*ROOT15
C
   50 RETURN
      END
      SUBROUTINE FILMAT(F,A)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INTEGER AOS,SHELLA,SHELLN,SHELLT,SHELLC
      INTEGER UBOUND,ULPURE
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
      DIMENSION F(*),A(*)
      COMMON/IPURE/IPURD,IPURF
      COMMON/MAX/LAMAX,LBMAX,LPMAX
      COMMON/LIMIT/IMJ,ISTART,JSTART,IEND,JEND,IRANGE,JRANGE,LENTQ
      COMMON/NEW/INEW,JNEW
      COMMON/B/EXX(360),C1(360),C2(360),C3(360),X(90),Y(90),Z(90),
     1         JAN(90),SHELLA(90),SHELLN(90),SHELLT(90),SHELLC(90),
     2         AOS(90),NSHELL,MAXTYP
      COMMON/ORDER/NORDR(20),N6ORD(10),N5ORD(9),N10ORD(10),N7ORD(7),
     1             LBOUND(4,3),UBOUND(4),ULPURE(4)
      COMMON/IA/LIND(151)
C
C
C***********************************************************************
C     THIS ROUTINE FILLS THE LOWER TRIANGULAR MATRIX A (IN LINEAR FORM)
C     THIS ROUTINE RECEIVES AS INPUT THE SHELL NUMBERS (INEW,JNEW),
C     SHELL DUPLICATE TEST VARIABLE (IMJ), LIMITING INFORMATION (VIA
C     /LIMIT/), AND ADDRESSES OF SHELLS VIA /B/, AND PERFORMS MATRIX
C     BUILDING.
C     IF NECESSARY, PURDF1 IS CALLED TO TRANSFORM TO PURE D OR PURE F.
C***********************************************************************
C
C
C     NOTE THAT IEND, JEND, IRANGE AND JRANGE MAY BE MODIFIED BY PURDF1.
      CALL PURDF1(F)
      SUM=0.E0
C
C     COMMENCE MAIN PROCESSING LOOP.
C     HERE, THE CORRECT INDICES ARE OBTAINED, REFERRED TO LOWER
C     TRIANGULAR FORM, AND THE MATRIX ELEMENTS ARE PLANTED IN A.
C     ALSO, SHELL DUPLICATE ELIMINATION IS PERFORMED HERE.
C     ORDERING IS ACHIEVED THROUGH NORDR.
C
C     OBTAIN CORRECT BIAS FOR J-LOOP.
   10 INDX1=0
C     OBTAIN CORRECT ATOMIC ORBITAL STARTING VALUES.
      IST=AOS(INEW)-1
      JST=AOS(JNEW)-1
C     COMMENCE LOOP.
      DO 90 I=ISTART,IEND
         IX=NORDR(I)
         IF(IMJ)30,20,30
   20    JEND=I
   30    INTC=INDX1
         DO 80 J=JSTART,JEND
            INTC=INTC+1
            JX=NORDR(J)
C     OBTAIN RAW INDICES.
            II=IX+IST
            JJ=JX+JST
C     OBTAIN FULL MATRIX INDEX.
            IF(II-JJ)60,40,50
C     EQUAL.
   40       INDFM=LIND(II+1)
            GO TO 70
C     II GREATER.
   50       INDFM=LIND(II)+JJ
            GO TO 70
C     JJ GREATER.
   60       INDFM=LIND(JJ)+II
C
C     PLANT THE VALUE.
   70       SUM=A(INDFM)*F(INTC)+SUM
   80    CONTINUE
   90 INDX1=INDX1+JRANGE
C
C
C     RESTORE IEND, JEND, IRANGE, AND JRANGE.
      IEND=UBOUND(LAMAX)
      JEND=UBOUND(LBMAX)
      IRANGE=IEND-ISTART+1
      JRANGE=JEND-JSTART+1
      F(1)=SUM
      RETURN
      END
      SUBROUTINE GENUNT(U,N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C     ---- GENERATE UNIT VECTORS OVER SPHERE ----
C
      DIMENSION U(3,N)
      NEQUAT = SQRT(N * 3.14159)
      NVERT = 0.5 * NEQUAT
      NU = 0
      DO 20 I = 1,NVERT+1
         FI = (3.14159 * (I-1)) / NVERT
         Z = COS(FI)
         XY = SIN(FI)
         NHOR = NEQUAT * XY
         IF (NHOR .LT. 1) NHOR = 1
         DO 10 J = 1,NHOR
            FJ = (2 * 3.14159 * (J-1)) / NHOR
            X = COS(FJ) * XY
            Y = SIN(FJ) * XY
            IF (NU .GE. N) GO TO 30
            NU = NU + 1
            U(1,NU) = X
            U(2,NU) = Y
            U(3,NU) = Z
   10    CONTINUE
   20 CONTINUE
   30 CONTINUE
      N = NU
      RETURN
      END
      SUBROUTINE GET2C(TWOC,X,CONST,A)
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
C
C    *******************************************************************
C
C          THIS SUBROUTINE FORMS THE TWO CENTER INTEGRALS IN TWOC.  THE
C     FUNCTIONS G ARE FORMED FROM X AND CONST USING G(1) = CONST, AND
C     THE RECURSION FORMULA0
C
C          G(IV) = TWOPT2*(X*G(IV-1) - (IV-2)*G(IV-2))
C
C     THE TWO CENTER INTEGRALS ARE THEN FORMED USING THE COEFFICIENTS
C     IN A, WHICH WERE FORMED IN SUBROUTINE GETA1.
C
C    *******************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/INTK/ZERO,XINT(12)
      COMMON/MAX/LAMAX,LBMAX,LPMAX
      COMMON/TWOP/TWOPT2,EPI
      COMMON/PDIM/INCP,IDIM2C,IDIMAA
C
      DIMENSION TWOC(*),A(*)
      DIMENSION G(9)
C
C     CALCULATE THE G FUNCTIONS.
C
      LPNEW=LPMAX+INCP
      G(1)=CONST
      G(2)=TWOPT2*X*G(1)
      DO 10 I=3,9
   10 G(I)=ZERO
      IF(LPNEW.LE.2) GO TO 30
      DO 20 IV=3,LPNEW
C
   20 G(IV)=TWOPT2*(X*G(IV-1)-XINT(IV-2)*G(IV-2))
C
C     NOW EVALUATE THE TWO CENTER INTEGRALS USING G AND A.
C
   30 DO 50 LP=1,LPNEW
         INDA=IDIM2C*(LP-1)
         Y=ZERO
         DO 40 IV=1,LP
   40    Y=Y+A(INDA+IV)*G(IV)
   50 TWOC(LP)=Y
C
      RETURN
      END
      SUBROUTINE GET3C(VALIP,TWOC,CC)
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
C
C    *******************************************************************
C
C          THIS SUBROUTINE TRANSFORMS THE INTEGRALS OVER FUNCTIONS AT
C     CENTER P, WHICH ARE NOW STORED IN TWOC, INTO THE INTEGRALS
C     OVER FUNCTIONS CENTERED AT A AND B.  THESE ARE TO BE STORED IN
C     VALIP.  THE COEFFICIENTS CC WERE FORMED IN SUBROUTINE GETCC1,
C     AND THE INTEGRALS OVER FUNCTIONS AT P WERE FORMED IN EITHER
C     GET2C OR GETEFG, DEPENDING UPON WHICH INTEGRALS ARE BEING
C     TRANSFORMED.
C
C          THE MATRIX IS OF DIMENSION VALIP(4,4) AND IS FILLED TO
C     (LBMAX,LAMAX), ALTHOUGH THE INDEXING IS DONE LINEARLY.
C
C    *******************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/MAX/LAMAX,LBMAX,LPMAX
      COMMON/CONST/ZERO
      COMMON/PDIM/INCP,IDIM2C,IDIMAA
C
      DIMENSION CC(*),VALIP(*)
      DIMENSION TWOC(*)
C
      DO 20 LA=1,LAMAX
         INDCA=28*(LA-1)
         INDIP=4*(LA-1)
         DO 20 LB=1,LBMAX
            INDC=INDCA+7*(LB-1)
            LWMAX=LA+LB-1
            Y=ZERO
            DO 10 LW=1,LWMAX
   10       Y=Y+CC(INDC+LW)*TWOC(LW)
   20 VALIP(INDIP+LB)=Y
      RETURN
      END
      SUBROUTINE GETA1(A)
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
C
C
C    *******************************************************************
C
C          THIS SUBROUTINE CALCULATES THE COEFFICIENTS WHICH TRANSFORM
C     THE FUNCTIONS G(IV) INTO THE TWO CENTER INTEGRALS.  THIS
C     TRANSFORMATION IS CARRIED OUT IN SUBROUINTE GET2C, WHICH SHOULD
C     BE CONSULTED FOR MORE DETAILS OF THE USE OF THESE COEFFICIENTS.
C
C          THE A MATRIX IS OF DIMENSION A(IDIM,IDIM), ALTHOUGH THE
C     ACTUAL INDEXING IS DONE LINEARLY.  IDIM IS 7 IN LINK 302 (STVINT)
C     AND 9 IN LINK 701 (PROP1E).  THE COEFFICIENTS ARE CALCULATED
C     FROM A(1,1)=1.0, AND THE RECURSION FORMULA0
C
C          A(LV,LP+1) = (A(LV,LP-1)*(LP-1) + A(LV-1,LP))/(2*P)
C
C    *******************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(*)
C
      COMMON/MAX/LAMAX,LBMAX,LPMAX
      COMMON/PDIM/INCP,IDIM,LENG
      COMMON/TWOP/TWOPT2,EPI
      COMMON/CONST/ZERO
      COMMON/INTK/ZERO1,XINT(12)
C
      LPNEW=LPMAX+INCP
      PP=0.5D0*EPI
      A(1)=1.D0
      A(IDIM+2)=PP
      IF(LPNEW.LE.2) GO TO 20
      DO 10 LP=3,LPNEW
         INDLP=IDIM*(LP-1)
         ILPM1=INDLP-IDIM-1
         ILPM2=ILPM1-IDIM+1
         LPM2=LP-2
         DO 10 LV=1,LP
C
   10 A(INDLP+LV)=PP*(XINT(LPM2)*A(ILPM2+LV)+A(ILPM1+LV))
C
   20 CONTINUE
      RETURN
      END
      SUBROUTINE GETCC1(CC,AP,BP)
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
C
C    *******************************************************************
C
C          THIS SUBROUTINE CALCULATES THE COEFFICIENTS WHICH TRANSFORM
C     THE TWO CENTER INTEGRALS INTO THE THREE CENTER INTEGRALS.  THIS
C     TRANSFORMATION IS CARRIED OUT IN SUBROUTINE GET3C, WHICH SHOULD
C     BE CONSULTED FOR MORE DETAILS OF THE USE OF THESE COEFFICIENTS.
C
C          THE COEFFICIENT MATRIX IS THREE DIMENSIONAL, ALTHOUGH THE
C     ACTUAL INDEXING IS DONE LINEARLY.  THE COEFFICIENTS ARE
C     CALCULATED FROM CC(1,1,1)=1.0, AND THE RECURSION FORMULAE0
C
C          CC(LW,LB,LA) = AP*CC(LW,LB,LA-1) + CC(LW-1,LB,LA-1)
C
C          CC(LW,LB,LA) = BP*CC(LW,LB-1,LA) + CC(LW-1,LB-1,LA)
C
C    *******************************************************************
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/MAX/LAMAX,LBMAX,LPMAX
      COMMON/CONST/ZERO
      DIMENSION CC(112)
C
      DO 50 LA=1,LAMAX
         INDA=28*(LA-1)
         DO 50 LB=1,LBMAX
            IND=INDA+7*(LB-1)
            LWMAX=LA+LB-1
            DO 50 LW=1,LWMAX
               IF(LA-1)30,30,10
   10          LWM1=IND+LW-29
               IF(LWM1.GT.0) GO TO 20
               CC(IND+LW)=AP*CC(IND+LW-28)
               GO TO 50
   20          CC(IND+LW)=AP*CC(IND+LW-28)+CC(LWM1)
               GO TO 50
   30          IF(LB.EQ.1) GO TO 50
               LWM1=IND+LW-8
               IF(LWM1.GT.0) GO TO 40
               CC(IND+LW)=BP*CC(IND+LW-7)
               GO TO 50
   40          CC(IND+LW)=BP*CC(IND+LW-7)+CC(LWM1)
   50 CONTINUE
      RETURN
      END
      SUBROUTINE IMATX(A)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3,3)
      DO 20 I = 1,3
         DO 10 J = 1,3
            A(I,J) = 0.0
   10    CONTINUE
         A(I,I) = 1.0
   20 CONTINUE
      RETURN
      END
      SUBROUTINE LDIMA
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'SIZES'
      CHARACTER*6  IAO1S,IAO2S,IAO2P,IAO3S,IAO3P,
     1             IAO4S,IAO4P,IAO5S,IAO5P,IAO6S, IAO6P,IAO7S,IAO7P
      INTEGER SHELLA,SHELLN,SHELLT,SHELLC,SHLADF,AOS
      INTEGER SHELLX
      CHARACTER*214 KEYWRD
C     ---------------
C     PISA VERSION
C     JUNE 1980
C     ---------------
      COMMON /KEYWRD/ KEYWRD
      COMMON /MOLKST/ NUMAT,NAT(NUMATM),NFIRST(NUMATM),NMIDLE(NUMATM),
     1  NLAST(NUMATM),NORBS,NELECS,NALPHA,NBETA,NCLOSE,NOPEN
      COMMON /GEOM  / GEO(3,NUMATM)
      COMMON /CORE  / CORE(107)
      COMMON /FUNCON/ FPC(2,10),IFPC
      COMMON /JOBNAM/ JOBNAM
      COMMON /CHANEL/ IFILES(30)
      COMMON /EXPONT/ ZS(107),ZP(107),ZD(107)
      COMMON C(NUMATM,3),NATOMS,ICHARG,MULTIP,IAN(NUMATM),NAE,NBE,NE,
     1NBASIS
      COMMON/B/EXX(360),C1(360),C2(360),C3(360),X(90),Y(90),Z(90),
     1         JAN(90),SHELLA(90),SHELLN(90),SHELLT(90),SHELLC(90),
     2         AOS(90),NSHELL,MAXTYP
      COMMON /BX/ AON(90)
      COMMON/SCALE/SCALE(90)
      COMMON/IAOS/IAOS(90)
      COMMON/BB/ VALV(55,65),NPP,NY,IPR
      COMMON/BBNEW/VPOT(3575)
      COMMON /GRIDD/ XP1(3),YP1(3),ZP1(3),DS
      COMMON /CONNOL/ SCLE,SCINCR,DEN,NSURF
      COMMON /MSTQ/QS(1500),MFLAG,ITERQ
C     COMMON /MSTSUR/NESF,OMEGA,RD,RET,FRO,NDIV,DR,ICENT
C     COMMON/POLY/XE(500),YE(500),ZE(500),RE(500),SSFE(500),
C    * IPLOCH(1500),AS(1500),STOT,VOL,NSF,NC(NUMATM)
      COMMON/FACTOR/FACTOR
      COMMON/MSTXYZ/XV1(3575),YV1(3575),ZV1(3575),NTS
      COMMON/XYZ/XV(55,65),YV(55,65),ZV(55,65)
      COMMON/DEORT/SHELLX(90)
      CHARACTER*6 AON
      DIMENSION CC(3,NUMATM)
      DIMENSION OVRLAP(4)
      DIMENSION IDIF(55,65),VWXYZ(3,3600)
      DIMENSION SHLADF(90),C4(90)
      CHARACTER  JOBNAM*80
C     DIMENSION SCR1(10726)
      EQUIVALENCE(C4(1),C3(91)),(SHLADF(1),C3(181))
      EQUIVALENCE(OVRF,OVRLAP(4))
      EQUIVALENCE(OVRS,OVRLAP(1)),(OVRP,OVRLAP(2)),(OVRD,OVRLAP(3))
      EQUIVALENCE(IPOT,IFILES(18)),(IMEP,IFILES(15))
      DATA ZERO/0.0E0/,ONE/1.0E0/,TWO/2.0E0/,THREE/3.0E0/
      DATA PT75/0.75E0/,ONPT75/1.75E0/,ONPT25/1.25E0/,TWOPT5/2.5E0/
      DATA THRPT5/3.5E0/,FOUR/4.0E0/,TWPT25/2.25E0/,F15/15.0E0/
      DATA FORPT5/4.5E0/,THRSH/0.1E-04/,TENM6/1.0E-06/
      DATA ONEPT5/1.5E0/
      DATA RONE/1.0/
      DATA IAO1S/'    1S'/
      DATA IAO2S/'    2S'/,IAO2P/'    2P'/
      DATA IAO3S/'    3S'/,IAO3P/'    3P'/
      DATA IAO4S/'    4S'/,IAO4P/'    4P'/
      DATA IAO5S/'    5S'/,IAO5P/'    5P'/
      DATA IAO6S/'    6S'/,IAO6P/'    6P'/
      DATA IAO7S/'    7S'/,IAO7P/'    7P'/
      CONV=FPC(IFPC,4)*FPC(IFPC,9)
      RECPA0=1.D0/FPC(IFPC,3)
      I=INDEX(JOBNAM,' ')-1
      OPEN(UNIT=IW,FILE=JOBNAM(:I)//'.out',STATUS='UNKNOWN')
      REWIND IW
C     TRANSFORM SEVERAL VARIABLES
C
      NATOMS=NUMAT
      NAE=NALPHA
      NBE=NBETA
      NE=NELECS
      SUM=0.5D00
      DO 10 I=1,NATOMS
   10 SUM=SUM+CORE(NAT(I))
      I=SUM
      ICHARG=I-NCLOSE-NOPEN-NALPHA-NBETA
C
C     PUT CARTESIAN COORDINATES IN ARRAY C
C
      CALL GMETRY(GEO,CC)
      DO 20 I=1,NUMAT
         DO 20 J=1,3
            C(I,J)=CC(J,I)
            C(I,J)=C(I,J)*RECPA0      
   20 CONTINUE
C
C     SET UP A STO-4G BASIS ADAPTED TO MOPAC-STO'S.
C     COMMON /B/ IS FILLED
C
      MM=1
      MMDF=1
      NSHELL=0
      NGAUSS=4
      NSTART=1
      DO 220 I=1,NATOMS
         IAN(I)=NAT(I)
C***********************************************************************
C        1S SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=1
C***********************************************************************
         IA=IAN(I)
         IF (IA-2) 30,30,40
   30    J1=MM
         EXX(J1)=(ZS(IA)**2)*13.11790
         C1(J1)=0.019508
         C2(J1)=ZERO
         EXX(J1+1)=(ZS(IA)**2)*1.97108
         C1(J1+1)=0.137622
         C2(J1+1)=ZERO
         EXX(J1+2)=(ZS(IA)**2)*0.444645
         C1(J1+2)=0.479541
         C2(J1+2)=ZERO
         EXX(J1+3)=(ZS(IA)**2)*0.121676
         C1(J1+3)=0.500553
         C2(J1+3)=ZERO
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=0
         SHELLC(NSHELL)=2
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO1S
         AOS(NSHELL)=NSTART
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+1
         MM=MM+NGAUSS
         GOTO 220
C***********************************************************************
C        2S SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=1
C***********************************************************************
   40    IF (IA-10) 50,50,70
   50    J1=MM
         EXX(J1)=((2*ZS(IA))**2)*4.659200
         C1(J1)=-0.008762
         C2(J1)=ZERO
         EXX(J1+1)=((2*ZS(IA))**2)*0.554244
         C1(J1+1)=-0.057567
         C2(J1+1)=ZERO
         EXX(J1+2)=((2*ZS(IA))**2)*0.0403319
         C1(J1+2)=0.568282
         C2(J1+2)=ZERO
         EXX(J1+3)=((2*ZS(IA))**2)*0.0155519
         C1(J1+3)=0.487628
         C2(J1+3)=ZERO
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=0
         SHELLC(NSHELL)=2
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO2S
         AOS(NSHELL)=NSTART
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+1
         MM=MM+NGAUSS
         IF (IA-4) 220,220,60
C***********************************************************************
C        2P SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=2
C***********************************************************************
   60    J1=MM
         EXX(J1)=((2*ZP(IA))**2)*0.722447
         C1(J1)=ZERO
         C2(J1)=0.027090
         EXX(J1+1)=((2*ZP(IA))**2)*0.171826
         C1(J1+1)=ZERO
         C2(J1+1)=0.185828
         EXX(J1+2)=((2*ZP(IA))**2)*0.0552204
         C1(J1+2)=ZERO
         C2(J1+2)=0.532171
         EXX(J1+3)=((2*ZP(IA))**2)*0.0200790
         C1(J1+3)=ZERO
         C2(J1+3)=0.410307
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=1
         SHELLC(NSHELL)=1
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO2P
         AOS(NSHELL)=NSTART-1
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+3
         MM=MM+NGAUSS
         GOTO 220
C***********************************************************************
C        3S SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=1
C***********************************************************************
   70    IF (IA-18) 80,80,100
   80    J1=MM
         EXX(J1)=((3*ZS(IA))**2)*0.217189
         C1(J1)=-0.023073
         C2(J1)=ZERO
         EXX(J1+1)=((3*ZS(IA))**2)*0.0517494
         C1(J1+1)=-0.173782
         C2(J1+1)=ZERO
         EXX(J1+2)=((3*ZS(IA))**2)*0.00808293
         C1(J1+2)=0.816385
         C2(J1+2)=ZERO
         EXX(J1+3)=((3*ZS(IA))**2)*0.00387327
         C1(J1+3)=0.285658
         C2(J1+3)=ZERO
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=0
         SHELLC(NSHELL)=2
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO3S
         AOS(NSHELL)=NSTART
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+1
         MM=MM+NGAUSS
         IF (IA-12) 220,220,90
C***********************************************************************
C        3P SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=2
C***********************************************************************
   90    J1=MM
         EXX(J1)=((3*ZP(IA))**2)*0.232988
         C1(J1)=ZERO
         C2(J1)=-0.013778
         EXX(J1+1)=((3*ZP(IA))**2)*0.0215155
         C1(J1+1)=ZERO
         C2(J1+1)=0.253019
         EXX(J1+2)=((3*ZP(IA))**2)*0.0102710
         C1(J1+2)=ZERO
         C2(J1+2)=0.545086
         EXX(J1+3)=((3*ZP(IA))**2)*0.00505386
         C1(J1+3)=ZERO
         C2(J1+3)=0.275099
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=1
         SHELLC(NSHELL)=1
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO3P
         AOS(NSHELL)=NSTART-1
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+3
         MM=MM+NGAUSS
         GOTO 220
C***********************************************************************
C        4S SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=1
C***********************************************************************
  100    IF (IA-36) 110,110,130
  110    J1=MM
         EXX(J1)=((4*ZS(IA))**2)*0.0164505
         C1(J1)=-0.223592
         C2(J1)=ZERO
         EXX(J1+1)=((4*ZS(IA))**2)*0.00738627
         C1(J1+1)=-0.258521
         C2(J1+1)=ZERO
         EXX(J1+2)=((4*ZS(IA))**2)*0.00350378
         C1(J1+2)=0.858128
         C2(J1+2)=ZERO
         EXX(J1+3)=((4*ZS(IA))**2)*0.00188555
         C1(J1+3)=0.471043
         C2(J1+3)=ZERO
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=0
         SHELLC(NSHELL)=2
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO4S
         AOS(NSHELL)=NSTART
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+1
         MM=MM+NGAUSS
         IF (IA-20) 220,220,120
C***********************************************************************
C        4P SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=2
C***********************************************************************
  120    J1=MM
         EXX(J1)=((4*ZP(IA))**2)*0.0858757
         C1(J1)=ZERO
         C2(J1)=-0.007342
         EXX(J1+1)=((4*ZP(IA))**2)*0.0259767
         C1(J1+1)=ZERO
         C2(J1+1)=-0.060896
         EXX(J1+2)=((4*ZP(IA))**2)*0.00480469
         C1(J1+2)=ZERO
         C2(J1+2)=0.622636
         EXX(J1+3)=((4*ZP(IA))**2)*0.00236631
         C1(J1+3)=ZERO
         C2(J1+3)=0.435991
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=1
         SHELLC(NSHELL)=1
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO4P
         AOS(NSHELL)=NSTART-1
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+3
         MM=MM+NGAUSS
         GOTO 220
C***********************************************************************
C        5S SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=1
C***********************************************************************
  130    IF (IA-54) 140,140,160
  140    J1=MM
         EXX(J1)=((5*ZS(IA))**2)*0.0336773
         C1(J1)=0.011685
         C2(J1)=ZERO
         EXX(J1+1)=((5*ZS(IA))**2)*0.00481262
         C1(J1+1)=-0.549835
         C2(J1+1)=ZERO
         EXX(J1+2)=((5*ZS(IA))**2)*0.00134481
         C1(J1+2)=1.225552
         C2(J1+2)=ZERO
         EXX(J1+3)=((5*ZS(IA))**2)*0.000722522
         C1(J1+3)=0.115940
         C2(J1+3)=ZERO
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=0
         SHELLC(NSHELL)=2
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO5S
         AOS(NSHELL)=NSTART
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+1
         MM=MM+NGAUSS
         IF (IA-38) 220,220,150
C***********************************************************************
C        5P SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=2
C***********************************************************************
  150    J1=MM
         EXX(J1)=((5*ZP(IA))**2)*0.0138998
         C1(J1)=ZERO
         C2(J1)=-0.027559
         EXX(J1+1)=((5*ZP(IA))**2)*0.00696561
         C1(J1+1)=ZERO
         C2(J1+1)=-0.131581
         EXX(J1+2)=((5*ZP(IA))**2)*0.00201055
         C1(J1+2)=ZERO
         C2(J1+2)=0.732336
         EXX(J1+3)=((5*ZP(IA))**2)*0.00112114
         C1(J1+3)=ZERO
         C2(J1+3)=0.367027
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=1
         SHELLC(NSHELL)=1
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO5P
         AOS(NSHELL)=NSTART-1
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+3
         MM=MM+NGAUSS
         GOTO 220
C***********************************************************************
C        6S SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=1
C***********************************************************************
  160    IF (IA-86) 170,170,190
  170    J1=MM
         EXX(J1)=((6*ZS(IA))**2)*0.00906589
         C1(J1)=0.046421
         C2(J1)=ZERO
         EXX(J1+1)=((6*ZS(IA))**2)*0.00207602
         C1(J1+1)=-0.890119
         C2(J1+1)=ZERO
         EXX(J1+2)=((6*ZS(IA))**2)*0.000818469
         C1(J1+2)=1.227342
         C2(J1+2)=ZERO
         EXX(J1+3)=((6*ZS(IA))**2)*0.000533131
         C1(J1+3)=0.385413
         C2(J1+3)=ZERO
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=0
         SHELLC(NSHELL)=2
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO6S
         AOS(NSHELL)=NSTART
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+1
         MM=MM+NGAUSS
         IF (IA-56) 220,220,180
C***********************************************************************
C        6P SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=2
C***********************************************************************
  180    J1=MM
         EXX(J1)=((6*ZP(IA))**2)*0.0243358
         C1(J1)=ZERO
         C2(J1)=0.001725
         EXX(J1+1)=((6*ZP(IA))**2)*0.00328534
         C1(J1+1)=ZERO
         C2(J1+1)=-0.247801
         EXX(J1+2)=((6*ZP(IA))**2)*0.000968191
         C1(J1+2)=ZERO
         C2(J1+2)=0.932682
         EXX(J1+3)=((6*ZP(IA))**2)*0.000567636
         C1(J1+3)=ZERO
         C2(J1+3)=0.213929
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=1
         SHELLC(NSHELL)=1
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO6P
         AOS(NSHELL)=NSTART-1
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+3
         MM=MM+NGAUSS
         GOTO 220
C***********************************************************************
C        7S SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=1
C***********************************************************************
  190    IF (IA-104) 200,200,220
  200    J1=MM
         EXX(J1)=((7*ZS(IA))**2)*0.00324143
         C1(J1)=0.144821
         C2(J1)=ZERO
         EXX(J1+1)=((7*ZS(IA))**2)*0.00113212
         C1(J1+1)=-1.240536
         C2(J1+1)=ZERO
         EXX(J1+2)=((7*ZS(IA))**2)*0.000471755
         C1(J1+2)=1.631994
         C2(J1+2)=ZERO
         EXX(J1+3)=((7*ZS(IA))**2)*0.000301608
         C1(J1+3)=0.204852
         C2(J1+3)=ZERO
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=0
         SHELLC(NSHELL)=2
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO7S
         AOS(NSHELL)=NSTART
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+1
         MM=MM+NGAUSS
         IF (IA-88) 220,220,210
C***********************************************************************
C        7P SHELL (CONVERTED IN STO-4G, EACH GTO WITH NG=2
C***********************************************************************
  210    J1=MM
         EXX(J1)=((7*ZP(IA))**2)*0.00635421
         C1(J1)=ZERO
         C2(J1)=0.0011476
         EXX(J1+1)=((7*ZP(IA))**2)*0.00154903
         C1(J1+1)=ZERO
         C2(J1+1)=-0.404467
         EXX(J1+2)=((7*ZP(IA))**2)*0.000579597
         C1(J1+2)=ZERO
         C2(J1+2)=1.007520
         EXX(J1+3)=((7*ZP(IA))**2)*0.000367363
         C1(J1+3)=ZERO
         C2(J1+3)=0.253181
         NSHELL=NSHELL+1
         X(NSHELL)=C(I,1)
         Y(NSHELL)=C(I,2)
         Z(NSHELL)=C(I,3)
         JAN(NSHELL)=CORE(NAT(I))
         SHELLA(NSHELL)=MM
         SHLADF(NSHELL)=0
         SHELLN(NSHELL)=NGAUSS
         SHELLT(NSHELL)=1
         SHELLC(NSHELL)=1
         SHELLX(NSHELL)=I
         SCALE(NSHELL)=RONE
         AON(NSHELL)=IAO6P
         AOS(NSHELL)=NSTART-1
         IAOS(NSHELL)=NSTART
         NSTART=NSTART+3
         MM=MM+NGAUSS
  220 CONTINUE
      AOS(NSHELL+1)=NSTART
      IAOS(NSHELL+1)=NSTART
      NBASIS=NSTART-1
C
C     STO'S HAVE BEEN TRANSFORMED IN GAUSSIAN FUNCTIONS
C     WRITE TABLE OF GAUSSIAN FUNCTIONS
C
      IF (MFLAG.EQ.0) CALL BPRINT
C
C     NOW GAUSSIAN FUNCTIONS ARE NORMALIZED
C
  230 FORMAT(39H SIGNIFICANT RENORMALIZATION REQUIRED  ,E20.10)
      SQRT2= SQRT(TWO)
      PI=FOUR* ATAN(1.D0)
      TOOVPI=TWO/PI
      PITO75=PI**PT75
      FCON=(TWO/PITO75)* SQRT(TWO/F15)
      TWORT3=TWO/ SQRT(THREE)
      DELFIN=ZERO
  240 DO 360 ISHELL=1,NSHELL
         IGBEG=SHELLA(ISHELL)
         IGEND=IGBEG+SHELLN(ISHELL)-1
         OVRS=ZERO
         OVRP=ZERO
         OVRD=ZERO
         OVRF=ZERO
         IGDF=SHLADF(ISHELL)
         DO 280 IGAUSS=IGBEG,IGEND
            JGDF=SHLADF(ISHELL)
            DO 260 JGAUSS=IGBEG,IGEND
               AXB=FOUR*EXX(IGAUSS)*EXX(JGAUSS)
               APLUSB=EXX(IGAUSS)+EXX(JGAUSS)
               OVRS=OVRS+(C1(IGAUSS)*C1(JGAUSS))*((AXB**PT75)/(APLUSB**O
     1NEPT5))
               OVRP=OVRP+(C2(IGAUSS)*C2(JGAUSS))*((AXB**ONPT25)/(APLUSB*
     1*TWOPT5))
               IF(IGDF)260,260,250
  250          OVRD=OVRD+(C3(IGDF  )*C3(JGDF  ))*((AXB**ONPT75)/(APLUSB*
     1*THRPT5))
               OVRF=OVRF+(C4(IGDF  )*C4(JGDF  ))*((AXB**TWPT25)/(APLUSB*
     1*FORPT5))
               JGDF=JGDF+1
  260       CONTINUE
            IF(IGDF)280,280,270
  270       IGDF=IGDF+1
  280    CONTINUE
         DO 330 I=1,4
            IF(OVRLAP(I)-THRSH)290,290,300
  290       OVRLAP(I)=ZERO
            GO TO 330
  300       DEL= ABS(1.D0-OVRLAP(I))
            IF(DEL-DELFIN)320,310,310
  310       DELFIN=DEL
  320       OVRLAP(I)=1.D0/ SQRT(OVRLAP(I))
  330    CONTINUE
         IGDF=SHLADF(ISHELL)
         DO 350 IGAUSS=IGBEG,IGEND
            C1(IGAUSS)=C1(IGAUSS)*OVRS
            C2(IGAUSS)=C2(IGAUSS)*OVRP
            IF(IGDF)350,350,340
  340       C3(IGDF)=C3(IGDF)*OVRD
            C4(IGDF)=C4(IGDF)*OVRF
            IGDF=IGDF+1
  350    CONTINUE
  360 CONTINUE
  370 IF( ABS(DELFIN)-TENM6)390,390,380
  380 WRITE(IPOT,230)DELFIN
  390 DO 410 ISHELL=1,NSHELL
         IGBEG=SHELLA(ISHELL)
         IGEND=IGBEG+SHELLN(ISHELL)-1
         IGDF=SHLADF(ISHELL)
         DO 410 IGAUSS=IGBEG,IGEND
            C1(IGAUSS)=C1(IGAUSS)*((TOOVPI*EXX(IGAUSS))**PT75)
            C2(IGAUSS)=C2(IGAUSS)*SQRT2*((TWO*EXX(IGAUSS))**ONPT25)/PITO
     175
            IF(IGDF)410,410,400
  400       C3(IGDF  )=C3(IGDF  )*TWORT3*((TWO*EXX(IGAUSS))**ONPT75)/PIT
     1O75
            C4(IGDF  )=C4(IGDF  )*FCON*(TWO*EXX(IGAUSS))**TWPT25
  410 CONTINUE
C
C     END OF RENORMALIZATION PROCESS
C
C     COMPUTATION OF GRID POINTS
C
C     FIRST EXAMINE THE OPTION MST SOLVATION MODEL
C
      IF (INDEX(KEYWRD,'TOM').NE.0) THEN
         IF(MFLAG.EQ.0) THEN
            CALL PEDRA
         END IF
         IPR=1
         NTS2=NTS*2
         WRITE(IPOT,440) ITERQ
         WRITE(IPOT,460)
         WRITE(IPOT,490)
         NPP=1
         NY=1
         DO 430 K=1,NTS2
            XV(1,1)=XV1(K)
            YV(1,1)=YV1(K)
            ZV(1,1)=ZV1(K)
            VALV(1,1)=ZERO
            CALL CADIMA
            VPOT(K)=VALV(1,1)
            DO 420 I=1,NUMAT
               IF(NAT(I).EQ.0) GOTO 420
               AX=XV(1,1)-C(I,1)
               AY=YV(1,1)-C(I,2)
               AZ=ZV(1,1)-C(I,3)
               R=SQRT(AX*AX+AY*AY+AZ*AZ)
               VPOT(K)=VPOT(K)+CORE(NAT(I))/R
  420       CONTINUE
            VPOT(K)=VPOT(K)*FACTOR
            WRITE(IPOT,480) K,XV(1,1),YV(1,1),ZV(1,1),VPOT(K)*CONV
            IPR=IPR+1
  430    CONTINUE
         RETURN
  440    FORMAT(//,12HITERATION = ,I2,//)
      END IF
C
C     ELSE DETERMINE POINTS WHERE MEP WILL BE COMPUTED
C
  450 FORMAT(I4,17F4.0)
  460 FORMAT(1H1,2X,'POTENTIAL VALUES IN KCAL/MOLE',///)
  470 FORMAT(F13.5,3X,F13.5,3X,F13.5,9X,F13.5)
  480 FORMAT(I4,F13.5,3X,F13.5,3X,F13.5,9X,F13.5)
  490 FORMAT(1H1,' COORDINATES OF THE POINTS ON THE MAP IN A. U.',///)
      NPA=NINT(READA(KEYWRD,INDEX(KEYWRD,'MEP=')))
      IF (NPA.EQ.1) GOTO 580
C
C     MEP COMPUTED ON CONNOLLY'S SURFACE
C
  500 FORMAT(/10X,'VANDER WAAL RADII SCALE FACTOR = ',F5.2)
  510 FORMAT(/10X,'PARAMETER FOR SURFACE GENERATION',//10X,
     1            'INITIAL VANDER WAAL RADII SCALE FACTOR =',F5.2,
     2       /10X,'SCALE FACTOR INCREMENT VALUE           =',F5.2,
     3       /10X,'DENSITY OF POINTS PER UNIT AREA        =',F5.2,
     4       /10X,'NUMBER OF SURFACES TO BE GENERATED     =',I5,//)
      WRITE(IPOT,510) SCLE,SCINCR,DEN,NSURF
      IT345=0
      DO 520 I = 1,NSURF
         IT455=IT345
         CALL SURFAT(SCLE,DEN,IT345,VWXYZ)
         IT455=IT345-IT455
         WRITE(IPOT,*) 'SURFACE ',I,' : ',IT455,' POINTS'
         SCLE = SCLE + SCINCR
  520 CONTINUE
      WRITE(IPOT,*) 'TOTAL     : ',IT345,' POINTS'
      DO 530 I=1,IT345
         DO 530 J=1,3
            VWXYZ(J,I)=VWXYZ(J,I)*RECPA0      
  530 CONTINUE
      ITUTUA=1000000
      DO 550 I=55,1,-1
         DO 540 J=1,64
            IF (I*J.GT.IT345) GOTO 550
            IDIF(I,J)=IABS(IT345-I*J)
            IF (IDIF(I,J).EQ.0) THEN
               NPP=I
               NY=J
               GOTO 560
            ELSE IF (IDIF(I,J).GT.ITUTUA) THEN
               GOTO 540
            ELSE
               ITUTUA=IDIF(I,J)
               NPP=I
               NY=J
            END IF
  540    CONTINUE
  550 CONTINUE
  560 CONTINUE
      DO 570 I=1,NPP
         DO 570 J=1,NY
            XV(I,J)=VWXYZ(1,J+(I-1)*NY)
            YV(I,J)=VWXYZ(2,J+(I-1)*NY)
            ZV(I,J)=VWXYZ(3,J+(I-1)*NY)
C     VALV(I,J)=ZERO
  570 CONTINUE
      GOTO 790
C
C     MEP COMPUTED IN A CUBIC GRID OF POINTS
C
C              A................DYD=DS*3/5...................C
C              -                   NY '64'
C              -
C              -
C              -
C              -
C              DS  NPP '55'
C              -
C              -
C              -
C              -
C              B
C
  580 DSS=DS
  590 APP=SQRT((XP1(1)-XP1(2))**2+(YP1(1)-YP1(2))**2+(ZP1(1)-ZP1(2))**2)
      IF(APP-0.00001) 600,600,610
  600 PN=0.
      DX=0.
      DY=0.
      DZ=0.
      GO TO 620
  610 PN=APP/DS
      DX=(XP1(2)-XP1(1))/PN
      DY=(YP1(2)-YP1(1))/PN
      DZ=(ZP1(2)-ZP1(1))/PN
  620 ADD=SQRT((XP1(1)-XP1(3))**2+(YP1(1)-YP1(3))**2+(ZP1(1)-ZP1(3))**2)
      IF(ADD-0.00001) 630,630,640
  630 YN=0.
      DX2=0.
      DY2=0.
      DZ2=0.
      GO TO 650
  640 DYD=DS*3.E0/5.E0
      YN=ADD/DYD
      DX2=(XP1(3)-XP1(1))/YN
      DY2=(YP1(3)-YP1(1))/YN
      DZ2=(ZP1(3)-ZP1(1))/YN
  650 NY=YN+0.9+1.
      IF(NY.GT.64) NY=64
      NPP=PN+0.9+1.
      IF(NPP.GT.55) NPP=55
      BAINT=FLOAT(NPP)*DS-DS
      CAINT=FLOAT(NY)*DYD-DYD
  660 WRITE(IPOT,670)
  670 FORMAT(1H1,2X,15H     X(A.U.)   ,15H     Y(A.U.)   ,
     115H     Z(A.U.)   )
      WRITE(IPOT,680) XP1(1),YP1(1),ZP1(1)
      WRITE(IPOT,690) XP1(2),YP1(2),ZP1(2)
      WRITE(IPOT,700) XP1(3),YP1(3),ZP1(3)
      WRITE(IPOT,710) DX,DY,DZ
      WRITE(IPOT,720) DX2,DY2,DZ2
      WRITE(IPOT,730) NPP,NY
      WRITE(IPOT,740) APP,BAINT
      WRITE(IPOT,750) ADD,CAINT
  680 FORMAT(4X,10HCOORD.OF A,5X,3(1X,F13.7,1X))
  690 FORMAT(4X,10HCOORD.OF B,5X,3(1X,F13.7,1X))
  700 FORMAT(4X,10HCOORD.OF C,5X,3(1X,F13.7,1X))
  710 FORMAT(4X,10HVERT. INC.,5X,3(1X,F13.7,1X))
  720 FORMAT(4X,10HHORIZ.INC.,5X,3(1X,F13.7,1X))
  730 FORMAT(4X,15HMAP DIMENSION :,2X,I4,2X,I4)
  740 FORMAT(4X,18HLENGTH AB REQUIRED,F12.7,2X,9HEFFECTIVE,F12.7)
  750 FORMAT(4X,18HLENGTH AC REQUIRED,F12.7,2X,9HEFFECTIVE,F12.7)
      XV(1,1)=XP1(1)
      YV(1,1)=YP1(1)
      ZV(1,1)=ZP1(1)
C     VALV(1,1)=ZERO
      IF (NPP.EQ.1.AND.NY.EQ.1) GO TO 790
      DO 780 I=1,NPP
         IF (I.EQ.1) GO TO 760
         XV(I,1)=XV(I-1,1)+DX
         YV(I,1)=YV(I-1,1)+DY
         ZV(I,1)=ZV(I-1,1)+DZ
  760    CONTINUE
         DO 770 J=1,NY
            IF (J.EQ.1) GO TO 770
            XV(I,J)=XV(I,J-1)+DX2
            YV(I,J)=YV(I,J-1)+DY2
            ZV(I,J)=ZV(I,J-1)+DZ2
  770    CONTINUE
C51   VALV(I,J)=ZERO
  780 CONTINUE
C
C     POINTS HAVE BEEN DETERMINED AND THE ARRAY VALV HAS
C     BEEN SET EQUAL TO ZERO
C     NOW MEP WILL BE COMPUTED AT THESE POINTS
C     FIRST INITIALIZE THE ARRAY VALV
C
  790 CONTINUE
      DO 800 I=1,NPP
         DO 800 J=1,NY
  800 VALV(I,J)=ZERO
C
C     COMPUTE THE ELECTROSTATIC ELECTRON CONTRIBUTION
C
      CALL CADIMA
C7005 CALL CADIMA
C
C     NOW THE NUCLEAR CONTRIBUTION IS ADDED TO THE ARRAY VALV
C
      DO 820 I=1,NUMAT
         IF (NAT(I).EQ.0) GO TO 820
         DO 810 J1=1,NPP
            DO 810 J2=1,NY
               AX=XV(J1,J2)-C(I,1)
               AY=YV(J1,J2)-C(I,2)
               AZ=ZV(J1,J2)-C(I,3)
               R=SQRT(AX*AX+AY*AY+AZ*AZ)
               VALV(J1,J2)=VALV(J1,J2)+CORE(NAT(I))/R
  810    CONTINUE
  820 CONTINUE
C
C     MEP HAS BEEN COMPUTED AND STORED IN ARRAY VALV
C
C     IF (INDEX(KEYWRD,'TOM').NE.0) THEN
C     WRITE(IPOT,614) ITERQ
C     END IF
C14   FORMAT(//,12HITERATION = ,I2,//)
  830 WRITE(IPOT,460)
      WRITE(IPOT,490)
C
C     IF MST, TRANSFORM VALV IN VPOT AND VALUES ARE WRITTEN
C
C     IF (INDEX(KEYWRD,'TOM').NE.0) THEN
C     K=0
C     DO 610 I=1,NPP
C     DO 610 J=1,NY
C     K=K+1
C     VPOT(K)=VALV(I,J)
C     WRITE(IPOT,613) K,XV(I,J),YV(I,J),ZV(I,J),VALV(I,J)*CONV
C10   CONTINUE
C     RETURN
C     END IF
      DO 850 IR=1,NPP
         DO 840 JR=1,NY
          WRITE(IPOT,470) XV(IR,JR),YV(IR,JR),ZV(IR,JR),VALV(IR,JR)*CONV
  840    CONTINUE
  850 WRITE(IPOT,860)
  860 FORMAT(///)
      IF(NPP.EQ.1.AND.NY.EQ.1) GO TO 920
C     CREATES PLOT OUTPUT FILE ACCORDING TO IPLOT
C8555 IF (NPA.EQ.2) GO TO 8000
      IPLANE=1
      IF (ABS(DX).GT.0.00001.OR.ABS(DX2).GT.0.00001) THEN
         IPLANE=2
         IF (ABS(DY).GT.0.00001.OR.ABS(DY2).GT.0.00001) IPLANE=3
      END IF
      WRITE(IMEP,870) NATOMS,IPLANE,NPP*NY
  870 FORMAT(I4,3X,I1,3X,I5)
      DO 880 I=1,NATOMS
  880 WRITE(IMEP,890) IAN(I),C(I,1),C(I,2),C(I,3)
  890 FORMAT(1X,I3,3(1X,F12.7))
      DO 900 IR=1,NPP
         DO 900 JR=1,NY
          WRITE(IMEP,910) XV(IR,JR),YV(IR,JR),ZV(IR,JR),VALV(IR,JR)*CONV
  900 CONTINUE
  910 FORMAT(3(1X,F12.7),1X,F13.5)
  920 RETURN
      END
      SUBROUTINE MULTV(V,A,W)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3,3)
      DIMENSION V(3)
      DIMENSION W(3)
      DO 10 I = 1, 3
         W(I) = A(I,1)*V(1) + A(I,2)*V(2) + A(I,3)*V(3)
   10 CONTINUE
      RETURN
      END
      SUBROUTINE PEDRA
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'SIZES'
      COMMON C(NUMATM,3),NATOMS,ICHARG,MULTIP,IAN(NUMATM),NAE,NBE,NEL,
     1NBASIS
C     COMMON ANTOAU,FCONV(3),ICDUM(131)
      COMMON /MSTSUR/OMEGA,RD,RET,FRO,DR,NDIV,NESF,ICENT
      COMMON/MSTXYZ/XV(3575),YV(3575),ZV(3575),NTS
      COMMON/POLY/XE(500),YE(500),ZE(500),RE(500),
     1SSFE(500),
     2IPLOCH(1500),AS(1500),STOT,VOL,NSF,NC(NUMATM)
      COMMON/MSTQ/QS(1500),MFLAG,ITERQ
      COMMON/CLASES/ICLASS(NUMATM)
      COMMON/FINAL/GVW,GVWS,ELC1,EC1
      COMMON /FUNCON/ FPC(2,10),IFPC
      DIMENSION X0(1500),Y0(1500),Z0(1500),
     1SRE(500)
      DIMENSION XV1(1500),YV1(1500),ZV1(1500),RV1(1500)
C     DIMENSION X9(1500),Y9(1500),Z9(1500),X91(1500),Y91(1500)
C     DIMENSION Z91(1500),QXY(1500),QXY2(1500),POT2(1500)
C     DIMENSION SCR1(10726),SCR2(4880)
C     EQUIVALENCE (SCR1(1),XV(1)),(SCR2(1),XE(1))
      DIMENSION IDUM(360)
      DIMENSION JM(60)
      DIMENSION ASP(60),THEC(12),FIC(12),THEV(24),FIV(24),JVT1(6,60)
      DIMENSION JVT2(3,4),FM(4),CV(122,3),XC(60),YC(60),ZC(60),IDF(122)
      DIMENSION IJE(60),NV(6),CVN3(6,3),IDF3(6),CVN4(6,3),IDF4(6)
      DIMENSION CVN5(6,3),IDF5(6)
      COMMON /CHANEL/ IFILES(30)
      EQUIVALENCE (IW,IFILES(6)),(ISOL,IFILES(17))
      EQUIVALENCE (IDUM(1),JVT1(1,1))
C
C     DATA IOUT/6/,IN/5/
      DATA TWO/2.D0/,FOUR/4.D0/
      DATA ONE/1.0D0/,MD/6/
      DATA THEC/0.3625764052D0,0.7445723125D0,1.028422216 D0,
     1          1.028422216 D0,1.408599564 D0,1.408599564 D0,
     2          1.732993090 D0,1.732993090 D0,2.113170438 D0,
     3          2.113170438 D0,2.397020341 D0,2.779016248 D0/
      DATA FIC/0.0D0         ,0.0D0         ,0.8518232700D0,
     1         0.4048137915D0,1.043782503 D0,0.2128545579D0,
     2         0.4154639728D0,0.8411730887D0,0.2235047392D0,
     3         1.033132322 D0,0.6283185307D0,0.6283185307D0/
      DATA THEV/0.6523581398D0,1.107148718 D0,1.382085796 D0,
     1          1.759506858 D0,2.034443936 D0,2.489234514 D0,
     2                         0.3261790699D0,0.5535743589D0,
     3          0.8559571251D0,0.8559571251D0,1.017221968 D0,
     4          1.229116717 D0,1.229116717 D0,1.433327788 D0,
     5          1.570796327 D0,1.570796327 D0,1.708264866 D0,
     6          1.912475937 D0,1.912475937 D0,2.124370686 D0,
     7          2.285635528 D0,2.285635528 D0,2.588018295 D0,
     8          2.815413584 D0/
      DATA FIV/               0.6283185307D0,0.0000000000D0,
     1         0.6283185307D0,0.0000000000D0,0.6283185307D0,
     2         0.0000000000D0,0.6283185307D0,0.0000000000D0,
     3         0.2520539002D0,1.004583161 D0,0.6283185307D0,
     4         0.3293628477D0,0.9272742138D0,0.0000000000D0,
     5         0.3141592654D0,0.9424777961D0,0.6283185307D0,
     6         0.2989556830D0,0.9576813784D0,0.0000000000D0,
     7         0.3762646305D0,0.8803724309D0,0.6283188307D0,
     8         0.0000000000D0/
      DATA FIR/1.256637061 D0/
      DATA IDUM(  1)/   1/
      DATA IDUM(  2)/   6/
      DATA IDUM(  3)/   2/
      DATA IDUM(  4)/  32/
      DATA IDUM(  5)/  36/
      DATA IDUM(  6)/  37/
      DATA IDUM(  7)/   1/
      DATA IDUM(  8)/   2/
      DATA IDUM(  9)/   3/
      DATA IDUM( 10)/  33/
      DATA IDUM( 11)/  32/
      DATA IDUM( 12)/  38/
      DATA IDUM( 13)/   1/
      DATA IDUM( 14)/   3/
      DATA IDUM( 15)/   4/
      DATA IDUM( 16)/  34/
      DATA IDUM( 17)/  33/
      DATA IDUM( 18)/  39/
      DATA IDUM( 19)/   1/
      DATA IDUM( 20)/   4/
      DATA IDUM( 21)/   5/
      DATA IDUM( 22)/  35/
      DATA IDUM( 23)/  34/
      DATA IDUM( 24)/  40/
      DATA IDUM( 25)/   1/
      DATA IDUM( 26)/   5/
      DATA IDUM( 27)/   6/
      DATA IDUM( 28)/  36/
      DATA IDUM( 29)/  35/
      DATA IDUM( 30)/  41/
      DATA IDUM( 31)/   7/
      DATA IDUM( 32)/   2/
      DATA IDUM( 33)/   6/
      DATA IDUM( 34)/  51/
      DATA IDUM( 35)/  42/
      DATA IDUM( 36)/  37/
      DATA IDUM( 37)/   8/
      DATA IDUM( 38)/   3/
      DATA IDUM( 39)/   2/
      DATA IDUM( 40)/  47/
      DATA IDUM( 41)/  43/
      DATA IDUM( 42)/  38/
      DATA IDUM( 43)/   9/
      DATA IDUM( 44)/   4/
      DATA IDUM( 45)/   3/
      DATA IDUM( 46)/  48/
      DATA IDUM( 47)/  44/
      DATA IDUM( 48)/  39/
      DATA IDUM( 49)/  10/
      DATA IDUM( 50)/   5/
      DATA IDUM( 51)/   4/
      DATA IDUM( 52)/  49/
      DATA IDUM( 53)/  45/
      DATA IDUM( 54)/  40/
      DATA IDUM( 55)/  11/
      DATA IDUM( 56)/   6/
      DATA IDUM( 57)/   5/
      DATA IDUM( 58)/  50/
      DATA IDUM( 59)/  46/
      DATA IDUM( 60)/  41/
      DATA IDUM( 61)/   8/
      DATA IDUM( 62)/   2/
      DATA IDUM( 63)/  12/
      DATA IDUM( 64)/  62/
      DATA IDUM( 65)/  47/
      DATA IDUM( 66)/  52/
      DATA IDUM( 67)/   9/
      DATA IDUM( 68)/   3/
      DATA IDUM( 69)/  13/
      DATA IDUM( 70)/  63/
      DATA IDUM( 71)/  48/
      DATA IDUM( 72)/  53/
      DATA IDUM( 73)/  10/
      DATA IDUM( 74)/   4/
      DATA IDUM( 75)/  14/
      DATA IDUM( 76)/  64/
      DATA IDUM( 77)/  49/
      DATA IDUM( 78)/  54/
      DATA IDUM( 79)/  11/
      DATA IDUM( 80)/   5/
      DATA IDUM( 81)/  15/
      DATA IDUM( 82)/  65/
      DATA IDUM( 83)/  50/
      DATA IDUM( 84)/  55/
      DATA IDUM( 85)/   7/
      DATA IDUM( 86)/   6/
      DATA IDUM( 87)/  16/
      DATA IDUM( 88)/  66/
      DATA IDUM( 89)/  51/
      DATA IDUM( 90)/  56/
      DATA IDUM( 91)/   7/
      DATA IDUM( 92)/  12/
      DATA IDUM( 93)/   2/
      DATA IDUM( 94)/  42/
      DATA IDUM( 95)/  57/
      DATA IDUM( 96)/  52/
      DATA IDUM( 97)/   8/
      DATA IDUM( 98)/  13/
      DATA IDUM( 99)/   3/
      DATA IDUM(100)/  43/
      DATA IDUM(101)/  58/
      DATA IDUM(102)/  53/
      DATA IDUM(103)/   9/
      DATA IDUM(104)/  14/
      DATA IDUM(105)/   4/
      DATA IDUM(106)/  44/
      DATA IDUM(107)/  59/
      DATA IDUM(108)/  54/
      DATA IDUM(109)/  10/
      DATA IDUM(110)/  15/
      DATA IDUM(111)/   5/
      DATA IDUM(112)/  45/
      DATA IDUM(113)/  60/
      DATA IDUM(114)/  55/
      DATA IDUM(115)/  11/
      DATA IDUM(116)/  16/
      DATA IDUM(117)/   6/
      DATA IDUM(118)/  46/
      DATA IDUM(119)/  61/
      DATA IDUM(120)/  56/
      DATA IDUM(121)/   8/
      DATA IDUM(122)/  12/
      DATA IDUM(123)/  18/
      DATA IDUM(124)/  68/
      DATA IDUM(125)/  62/
      DATA IDUM(126)/  77/
      DATA IDUM(127)/   9/
      DATA IDUM(128)/  13/
      DATA IDUM(129)/  19/
      DATA IDUM(130)/  69/
      DATA IDUM(131)/  63/
      DATA IDUM(132)/  78/
      DATA IDUM(133)/  10/
      DATA IDUM(134)/  14/
      DATA IDUM(135)/  20/
      DATA IDUM(136)/  70/
      DATA IDUM(137)/  64/
      DATA IDUM(138)/  79/
      DATA IDUM(139)/  11/
      DATA IDUM(140)/  15/
      DATA IDUM(141)/  21/
      DATA IDUM(142)/  71/
      DATA IDUM(143)/  65/
      DATA IDUM(144)/  80/
      DATA IDUM(145)/   7/
      DATA IDUM(146)/  16/
      DATA IDUM(147)/  17/
      DATA IDUM(148)/  67/
      DATA IDUM(149)/  66/
      DATA IDUM(150)/  81/
      DATA IDUM(151)/   7/
      DATA IDUM(152)/  17/
      DATA IDUM(153)/  12/
      DATA IDUM(154)/  57/
      DATA IDUM(155)/  67/
      DATA IDUM(156)/  72/
      DATA IDUM(157)/   8/
      DATA IDUM(158)/  18/
      DATA IDUM(159)/  13/
      DATA IDUM(160)/  58/
      DATA IDUM(161)/  68/
      DATA IDUM(162)/  73/
      DATA IDUM(163)/   9/
      DATA IDUM(164)/  19/
      DATA IDUM(165)/  14/
      DATA IDUM(166)/  59/
      DATA IDUM(167)/  69/
      DATA IDUM(168)/  74/
      DATA IDUM(169)/  10/
      DATA IDUM(170)/  20/
      DATA IDUM(171)/  15/
      DATA IDUM(172)/  60/
      DATA IDUM(173)/  70/
      DATA IDUM(174)/  75/
      DATA IDUM(175)/  11/
      DATA IDUM(176)/  21/
      DATA IDUM(177)/  16/
      DATA IDUM(178)/  61/
      DATA IDUM(179)/  71/
      DATA IDUM(180)/  76/
      DATA IDUM(181)/  22/
      DATA IDUM(182)/  12/
      DATA IDUM(183)/  17/
      DATA IDUM(184)/  87/
      DATA IDUM(185)/  82/
      DATA IDUM(186)/  72/
      DATA IDUM(187)/  23/
      DATA IDUM(188)/  13/
      DATA IDUM(189)/  18/
      DATA IDUM(190)/  88/
      DATA IDUM(191)/  83/
      DATA IDUM(192)/  73/
      DATA IDUM(193)/  24/
      DATA IDUM(194)/  14/
      DATA IDUM(195)/  19/
      DATA IDUM(196)/  89/
      DATA IDUM(197)/  84/
      DATA IDUM(198)/  74/
      DATA IDUM(199)/  25/
      DATA IDUM(200)/  15/
      DATA IDUM(201)/  20/
      DATA IDUM(202)/  90/
      DATA IDUM(203)/  85/
      DATA IDUM(204)/  75/
      DATA IDUM(205)/  26/
      DATA IDUM(206)/  16/
      DATA IDUM(207)/  21/
      DATA IDUM(208)/  91/
      DATA IDUM(209)/  86/
      DATA IDUM(210)/  76/
      DATA IDUM(211)/  22/
      DATA IDUM(212)/  18/
      DATA IDUM(213)/  12/
      DATA IDUM(214)/  82/
      DATA IDUM(215)/  92/
      DATA IDUM(216)/  77/
      DATA IDUM(217)/  23/
      DATA IDUM(218)/  19/
      DATA IDUM(219)/  13/
      DATA IDUM(220)/  83/
      DATA IDUM(221)/  93/
      DATA IDUM(222)/  78/
      DATA IDUM(223)/  24/
      DATA IDUM(224)/  20/
      DATA IDUM(225)/  14/
      DATA IDUM(226)/  84/
      DATA IDUM(227)/  94/
      DATA IDUM(228)/  79/
      DATA IDUM(229)/  25/
      DATA IDUM(230)/  21/
      DATA IDUM(231)/  15/
      DATA IDUM(232)/  85/
      DATA IDUM(233)/  95/
      DATA IDUM(234)/  80/
      DATA IDUM(235)/  26/
      DATA IDUM(236)/  17/
      DATA IDUM(237)/  16/
      DATA IDUM(238)/  86/
      DATA IDUM(239)/  96/
      DATA IDUM(240)/  81/
      DATA IDUM(241)/  22/
      DATA IDUM(242)/  17/
      DATA IDUM(243)/  27/
      DATA IDUM(244)/ 102/
      DATA IDUM(245)/  87/
      DATA IDUM(246)/  97/
      DATA IDUM(247)/  23/
      DATA IDUM(248)/  18/
      DATA IDUM(249)/  28/
      DATA IDUM(250)/ 103/
      DATA IDUM(251)/  88/
      DATA IDUM(252)/  98/
      DATA IDUM(253)/  24/
      DATA IDUM(254)/  19/
      DATA IDUM(255)/  29/
      DATA IDUM(256)/ 104/
      DATA IDUM(257)/  89/
      DATA IDUM(258)/  99/
      DATA IDUM(259)/  25/
      DATA IDUM(260)/  20/
      DATA IDUM(261)/  30/
      DATA IDUM(262)/ 105/
      DATA IDUM(263)/  90/
      DATA IDUM(264)/ 100/
      DATA IDUM(265)/  26/
      DATA IDUM(266)/  21/
      DATA IDUM(267)/  31/
      DATA IDUM(268)/ 106/
      DATA IDUM(269)/  91/
      DATA IDUM(270)/ 101/
      DATA IDUM(271)/  22/
      DATA IDUM(272)/  28/
      DATA IDUM(273)/  18/
      DATA IDUM(274)/  92/
      DATA IDUM(275)/ 107/
      DATA IDUM(276)/  98/
      DATA IDUM(277)/  23/
      DATA IDUM(278)/  29/
      DATA IDUM(279)/  19/
      DATA IDUM(280)/  93/
      DATA IDUM(281)/ 108/
      DATA IDUM(282)/  99/
      DATA IDUM(283)/  24/
      DATA IDUM(284)/  30/
      DATA IDUM(285)/  20/
      DATA IDUM(286)/  94/
      DATA IDUM(287)/ 109/
      DATA IDUM(288)/ 100/
      DATA IDUM(289)/  25/
      DATA IDUM(290)/  31/
      DATA IDUM(291)/  21/
      DATA IDUM(292)/  95/
      DATA IDUM(293)/ 110/
      DATA IDUM(294)/ 101/
      DATA IDUM(295)/  26/
      DATA IDUM(296)/  27/
      DATA IDUM(297)/  17/
      DATA IDUM(298)/  96/
      DATA IDUM(299)/ 111/
      DATA IDUM(300)/  97/
      DATA IDUM(301)/  22/
      DATA IDUM(302)/  27/
      DATA IDUM(303)/  28/
      DATA IDUM(304)/ 107/
      DATA IDUM(305)/ 102/
      DATA IDUM(306)/ 112/
      DATA IDUM(307)/  23/
      DATA IDUM(308)/  28/
      DATA IDUM(309)/  29/
      DATA IDUM(310)/ 108/
      DATA IDUM(311)/ 103/
      DATA IDUM(312)/ 113/
      DATA IDUM(313)/  24/
      DATA IDUM(314)/  29/
      DATA IDUM(315)/  30/
      DATA IDUM(316)/ 109/
      DATA IDUM(317)/ 104/
      DATA IDUM(318)/ 114/
      DATA IDUM(319)/  25/
      DATA IDUM(320)/  30/
      DATA IDUM(321)/  31/
      DATA IDUM(322)/ 110/
      DATA IDUM(323)/ 105/
      DATA IDUM(324)/ 115/
      DATA IDUM(325)/  26/
      DATA IDUM(326)/  31/
      DATA IDUM(327)/  27/
      DATA IDUM(328)/ 111/
      DATA IDUM(329)/ 106/
      DATA IDUM(330)/ 116/
      DATA IDUM(331)/ 122/
      DATA IDUM(332)/  28/
      DATA IDUM(333)/  27/
      DATA IDUM(334)/ 117/
      DATA IDUM(335)/ 118/
      DATA IDUM(336)/ 112/
      DATA IDUM(337)/ 122/
      DATA IDUM(338)/  29/
      DATA IDUM(339)/  28/
      DATA IDUM(340)/ 118/
      DATA IDUM(341)/ 119/
      DATA IDUM(342)/ 113/
      DATA IDUM(343)/ 122/
      DATA IDUM(344)/  30/
      DATA IDUM(345)/  29/
      DATA IDUM(346)/ 119/
      DATA IDUM(347)/ 120/
      DATA IDUM(348)/ 114/
      DATA IDUM(349)/ 122/
      DATA IDUM(350)/  31/
      DATA IDUM(351)/  30/
      DATA IDUM(352)/ 120/
      DATA IDUM(353)/ 121/
      DATA IDUM(354)/ 115/
      DATA IDUM(355)/ 122/
      DATA IDUM(356)/  27/
      DATA IDUM(357)/  31/
      DATA IDUM(358)/ 121/
      DATA IDUM(359)/ 117/
      DATA IDUM(360)/ 116/
      DATA JVT2/   4,   5,   1,
     1             2,   5,   6,
     2             4,   3,   6,
     3             4,   5,   6/
      DATA FM/0.25,0.0625,0.015625,0.00390625/
      DATA PI/3.1415927D0/
C
C   0.0174533 = 3.14159.../180
C
      DATA FIRST/0.0174533D0/
      DATA UN2/0.5D0/
      ANTOAU=1.D0/FPC(IFPC,3)
C
   10 FORMAT(I4,6F10.5,I4)
   20 FORMAT(5F10.5)
   30 FORMAT(4F10.5)
   40 FORMAT(I5,4F10.3,F18.3)
   50 FORMAT(I4,4F10.5,I4)
   60 FORMAT(F10.5,4I4)
C
C        COORDINATES ARE TRANSFORMED
C
      NSF=NESF
      IF(ICENT.EQ.1)THEN
         DO 70 I=1,NESF
            XE(I)=C(NC(I),1)/ANTOAU
            YE(I)=C(NC(I),2)/ANTOAU
            ZE(I)=C(NC(I),3)/ANTOAU
   70    CONTINUE
      END IF
C********************************************************************
C    THE CAVITY IS BUILT UP FROM THE SPHERES
C********************************************************************
      OMEGA=OMEGA*FIRST
      SENOM=DSIN(OMEGA)
      COSOM2=(DCOS(OMEGA))**2
C     RTD=RD*0.1547005
      RTDD=RET+RD
      RTDD2=RTDD*RTDD
      NET=NESF
      NN=2
      NE=NESF
      NEV=NESF
      GO TO 90
   80 NN=NE+1
      NE=NET
   90 DO 180 I=NN,NE
         NES=I-1
         DO 170 J=1,NES
C     WRITE(ISOL,8000)NN,NE,NES,I,J
  100       FORMAT(' NN ',I4,'   NE',I4,'   NES',I4,'   I',I4,'   J',I4)
  110       FORMAT(4F20.10)
            RIJ2=(XE(I)-XE(J))**2+
     1     (YE(I)-YE(J))**2+
     2     (ZE(I)-ZE(J))**2
C     WRITE(ISOL,8100)RIJ2
            RIJ=DSQRT(RIJ2)
C     WRITE(ISOL,8100)RIJ
            RJD=RE(J)+RD
            TEST1=RE(I)+RJD+RD
            IF(RIJ.GE.TEST1) GO TO 170
            REG=DMAX1(RE(I),RE(J))
            REP=DMIN1(RE(I),RE(J))
            REG2=REG*REG
            REP2=REP*REP
            TEST2=REP*SENOM+DSQRT(REG2-REP2*COSOM2)
            IF(RIJ.LE.TEST2) GO TO 170
            REGD2=(REG+RD)*(REG+RD)
            TEST3=(REGD2+REG2-RTDD2)/REG
            IF(RIJ.GE.TEST3) GO TO 170
            DO 120 K=1,NEV
               IF(K.EQ.J .OR. K.EQ.I) GO TO 120
               RJK2=(XE(J)-XE(K))**2+
     1     (YE(J)-YE(K))**2+
     2     (ZE(J)-ZE(K))**2
               IF(RJK2.GE.RIJ2) GO TO 120
               RIK2=(XE(I)-XE(K))**2+
     1     (YE(I)-YE(K))**2+
     2     (ZE(I)-ZE(K))**2
               IF(RIK2.GE.RIJ2) GO TO 120
               RJK=DSQRT(RJK2)
               RIK=DSQRT(RIK2)
               SP=(RIJ+RJK+RIK)/2.0D0
               HH=4*(SP*(SP-RIJ)*(SP-RIK)*(SP-RJK))/RIJ2
               REO=RE(K)*FRO
               IF(K.GE.NE)REO=0.0002D0
               REO2=REO*REO
               IF(HH.LT.REO2) GO TO 170
  120       CONTINUE
            REPD2=(REP+RD)**2
            TEST8=DSQRT(REPD2-RTDD2)+DSQRT(REGD2-RTDD2)
            IF(RIJ.LE.TEST8)GO TO 140
            REND2=REGD2+REG2-(REG/RIJ)*(REGD2+RIJ2-REPD2)
            IF(REND2.LE.RTDD2) GO TO 170
            REN=DSQRT(REND2)-RD
            FC=REG/(RIJ-REG)
            TEST7=REG-RE(I)
            KG=I
            KP=J
            IF(TEST7.LE.0.000000001D0) GO TO 130
            KG=J
            KP=I
  130       FC1=FC+1.0
            XEN=(XE(KG)+FC*XE(KP))/FC1
            YEN=(YE(KG)+FC*YE(KP))/FC1
            ZEN=(ZE(KG)+FC*ZE(KP))/FC1
            GO TO 160
  140       R2GN=RIJ-REP+REG
            RGN=R2GN/2.0D0
            FC=R2GN/(RIJ+REP-REG)
            FC1=FC+1.0D0
            TEST7=REG-RE(I)
            KG=I
            KP=J
            IF(TEST7.LE.0.000000001D0) GO TO 150
            KG=J
            KP=I
  150       XEN=(XE(KG)+FC*XE(KP))/FC1
            YEN=(YE(KG)+FC*YE(KP))/FC1
            ZEN=(ZE(KG)+FC*ZE(KP))/FC1
            REN=DSQRT(REGD2+RGN*(RGN-(REGD2+RIJ2-REPD2)/RIJ))-RD
  160       NET=NET+1
            XE(NET)=XEN
            YE(NET)=YEN
            ZE(NET)=ZEN
            RE(NET)=REN
  170    CONTINUE
         NEV=NET
  180 CONTINUE
      IF(NET.NE.NE) GO TO 80
      NESF=NET
C     WRITE(ISOL,620)NESF
  190 FORMAT(//,'TOTAL NUMBER OF SPHERES =',I5,/)
C*********************************************************************
C     SPLITTING OF THE CAVITY SURFACE IN SMALL SURFACE ELEMENTS
C*********************************************************************
  200 JJ=0
      IJ=0
      DRD=TWO*DR
      VOL=0.D0
      STOT=0.D0
C*****COORDINATES OF VERTEX FOR A SPHERE OF RADIUS UNITY********
      CV(1,1)=0.D0
      CV(1,2)=0.D0
      CV(1,3)=1.D0
      CV(122,1)=0.D0
      CV(122,2)=0.D0
      CV(122,3)=-1.D0
      II=1
      DO 220 I=1,24
         TH=THEV(I)
         FI=FIV(I)
         CTH=DCOS(TH)
         STH=DSIN(TH)
         DO 210 J=1,5
            FI=FI+FIR
            IF(J.EQ.1) FI=FIV(I)
            II=II+1
            CV(II,1)=STH*DCOS(FI)
            CV(II,2)=STH*DSIN(FI)
            CV(II,3)=CTH
  210    CONTINUE
  220 CONTINUE
C*****COORDINATES OF CENTER FOR A SPHERE OF RADIUS UNITY *****
      II=0
      DO 240 I=1,12
         TH=THEC(I)
         FI=FIC(I)
         CTH=DCOS(TH)
         STH=DSIN(TH)
         DO 230 J=1,5
            FI=FI+FIR
            IF(J.EQ.1) FI=FIC(I)
            II=II+1
            XC(II)=STH*DCOS(FI)
            YC(II)=STH*DSIN(FI)
            ZC(II)=CTH
  230    CONTINUE
  240 CONTINUE
C********************************************************************
C     DETERMINE THE CAVITY GEOMETRY FROM EVERY SPHERE               
C********************************************************************
      DO 670 I=1,NESF
         SSFE(I)=0.D0
         REI=RE(I)
         SRE(I)=FOUR*PI*REI*REI
         REIM=REI-DR
         XEI=XE(I)
         YEI=YE(I)
         ZEI=ZE(I)
         DO 250 J=1,60
  250    JM(J)=1
         DO 260 J=1,122
  260    IDF(J)=1
         IIJ=0
C******************************************************************
C      ARE THE VERTEX OF SPHERE I INSIDE OR OUTSIDE?
C      DETERMINE SPHERES INTERSECTING SPHERE I
C*******************************************************************
         DO 280 J=1,NESF
            IF(I.EQ.J) GO TO 280
            DIJ2=(XEI-XE(J))*(XEI-XE(J))+
     1     (YEI-YE(J))*(YEI-YE(J))+
     2     (ZEI-ZE(J))*(ZEI-ZE(J))
            SRE2=(REI+RE(J))*(REI+RE(J))
            IF(DIJ2.GT.SRE2) GO TO 280
            IIJ=IIJ+1
            IJE(IIJ)=J
            NEJCI=IIJ
            DO 270 K=1,122
               IF(IDF(K).EQ.0) GO TO 270
               XK=CV(K,1)*REI
               YK=CV(K,2)*REI
               ZK=CV(K,3)*REI
               XK0=XK+XEI
               YK0=YK+YEI
               ZK0=ZK+ZEI
               DVK2=(XK0-XE(J))*(XK0-XE(J))+
     1     (YK0-YE(J))*(YK0-YE(J))+
     2     (ZK0-ZE(J))*(ZK0-ZE(J))
               REJ2=RE(J)*RE(J)
               IF(DVK2.LT.REJ2) IDF(K)=0
  270       CONTINUE
  280    CONTINUE
  290    FORMAT(1X,15I4)
  300    CONTINUE
         DDCEO=XEI*XEI+YEI*YEI+ZEI*ZEI
         AST1=SRE(I)/60.0D0
         AST2=AST1/4.0D0
         AST3=AST2/4.0D0
         AST4=AST3/4.0D0
         AST5=AST4/4.0D0
C*****FIRST DIVISION****************************
         DO 660 J=1,60
            ATJ=0.0D0
            ASP(J)=0.0D0
            CXCM=0.0D0
            CYCM=0.0D0
            CZCM=0.0D0
            CMM=0.0D0
            IF(NDIV.EQ.1) GO TO 310
            NV1=JVT1(1,J)
            NV2=JVT1(2,J)
            NV3=JVT1(3,J)
            NV4=JVT1(4,J)
            NV5=JVT1(5,J)
            NV6=JVT1(6,J)
            IS1=IDF(NV1)+IDF(NV2)+IDF(NV3)+IDF(NV4)+IDF(NV5)+IDF(NV6)
            IF(IS1.EQ.6) GO TO 310
            IF(IS1.EQ.0) GO TO 650
            NV(1)=NV1
            NV(2)=NV2
            NV(3)=NV3
            NV(4)=NV4
            NV(5)=NV5
            NV(6)=NV6
            GO TO 350
  310       CXCM=REI*XC(J)
            CYCM=REI*YC(J)
            CZCM=REI*ZC(J)
            CXCM0= CXCM+XEI
            CYCM0=CYCM+YEI
            CZCM0=CZCM+ZEI
            IF(NDIV.NE.1) GO TO 330
            DO 320 N3=1,NEJCI
               N4=IJE(N3)
               DD=(CXCM0-XE(N4))**2+
     1   (CYCM0-YE(N4))**2+
     2   (CZCM0-ZE(N4))**2
               RREJ=RE(N4)*RE(N4)
               IF(DD.LT.RREJ) GO TO 650
  320       CONTINUE
  330       ATJ=AST1
  340       FORMAT(' J',I4,'     ATJ',F10.5)
            DD=CXCM0*CXCM0+CYCM0*CYCM0+CZCM0*CZCM0
            VOL=VOL+AST1*(REI*REI+DD-DDCEO)/(6.0D0*REI)
            GO TO 630
C*****SECOND DIVISION**********************
  350       DO 620 J2=1,4
               NV21=NV(JVT2(1,J2))
               NV22=NV(JVT2(2,J2))
               NV23=NV(JVT2(3,J2))
               IS2=IDF(NV21)+IDF(NV22)+IDF(NV23)
               IF(IS2.EQ.0) GO TO 620
               XVV1=CV(NV21,1)*REI
               YVV1=CV(NV21,2)*REI
               ZVV1=CV(NV21,3)*REI
               XV2=CV(NV22,1)*REI
               YV2=CV(NV22,2)*REI
               ZV2=CV(NV22,3)*REI
               XV3=CV(NV23,1)*REI
               YV3=CV(NV23,2)*REI
               ZV3=CV(NV23,3)*REI
               III=0
               IF(IS2.EQ.3) GO TO 380
               IF(NDIV.LE.2) GO TO 390
               CVN3(1,1)=XVV1
               CVN3(1,2)=YVV1
               CVN3(1,3)=ZVV1
               CVN3(2,1)=XV2
               CVN3(2,2)=YV2
               CVN3(2,3)=ZV2
               CVN3(3,1)=XV3
               CVN3(3,2)=YV3
               CVN3(3,3)=ZV3
               IDF3(1)=IDF(NV21)
               IDF3(2)=IDF(NV22)
               IDF3(3)=IDF(NV23)
               DO 370 NNN=1,3
                  N2=NNN+3
                  N1=NNN-1
                  IF(NNN.EQ.1)N1=3
                  XXX=(CVN3(NNN,1)+CVN3(N1,1))/2.0D0
                  YYY=(CVN3(NNN,2)+CVN3(N1,2))/2.0D0
                  ZZZ=(CVN3(NNN,3)+CVN3(N1,3))/2.0D0
                  RRR=DSQRT(XXX*XXX+YYY*YYY+ZZZ*ZZZ)
                  FC=REI/RRR
                  CVN3(N2,1)=XXX*FC
                  CVN3(N2,2)=YYY*FC
                  CVN3(N2,3)=ZZZ*FC
                  XXM=CVN3(N2,1)+XEI
                  YYM=CVN3(N2,2)+YEI
                  ZZM=CVN3(N2,3)+ZEI
                  IDF3(N2)=1
                  DO 360 N3=1,NEJCI
                     N4=IJE(N3)
                     DD=(XXM-XE(N4))*(XXM-XE(N4))+
     1   (YYM-YE(N4))*(YYM-YE(N4))+
     2   (ZZM-ZE(N4))*(ZZM-ZE(N4))
                     RREJ=RE(N4)*RE(N4)
                     IF(DD.GT.RREJ) GO TO 360
                     IDF3(N2)=0
                     GO TO 370
  360             CONTINUE
  370          CONTINUE
               GO TO 420
  380          III=1
  390          XXX=(XVV1+XV2+XV3)/3.0D0
               YYY=(YVV1+YV2+YV3)/3.0D0
               ZZZ=(ZVV1+ZV2+ZV3)/3.0D0
               RRR=DSQRT(XXX*XXX+YYY*YYY+ZZZ*ZZZ)
               FC=REI/RRR
               XCT=XXX*FC
               YCT=YYY*FC
               ZCT=ZZZ*FC
               XCTM=XCT+XEI
               YCTM=YCT+YEI
               ZCTM=ZCT+ZEI
               IF(III.EQ.1) GO TO 410
               DO 400 NNN=1,NEJCI
                  N4=IJE(NNN)
                  DD=(XCTM-XE(N4))*(XCTM-XE(N4))+
     1   (YCTM-YE(N4))*(YCTM-YE(N4))+
     2   (ZCTM-ZE(N4))*(ZCTM-ZE(N4))
                  RREJ=RE(N4)*RE(N4)
                  IF(DD.LT.RREJ) GO TO 620
  400          CONTINUE
  410          DD=XCTM*XCTM+YCTM*YCTM+ZCTM*ZCTM
               VOL=VOL+AST2*(REI*REI+DD-DDCEO)/(6.D0*REI)
               ATJ=ATJ+AST2
               CXCM=CXCM+XCT*FM(1)
               CYCM=CYCM+YCT*FM(1)
               CZCM=CZCM+ZCT*FM(1)
               CMM=CMM+FM(1)
               GO TO 620
C*****  THIRD DIVISION **********************************
  420          DO 610 J3=1,4
                  NV31=JVT2(1,J3)
                  NV32=JVT2(2,J3)
                  NV33=JVT2(3,J3)
                  IS3=IDF3(NV31)+IDF3(NV32)+IDF3(NV33)
                  IF(IS3.EQ.0) GO TO 610
                  III=0
                  CVN4(1,1)=CVN3(NV31,1)
                  CVN4(1,2)=CVN3(NV31,2)
                  CVN4(1,3)=CVN3(NV31,3)
                  CVN4(2,1)=CVN3(NV32,1)
                  CVN4(2,2)=CVN3(NV32,2)
                  CVN4(2,3)=CVN3(NV32,3)
                  CVN4(3,1)=CVN3(NV33,1)
                  CVN4(3,2)=CVN3(NV33,2)
                  CVN4(3,3)=CVN3(NV33,3)
                  IF(IS3.EQ.3) GO TO 450
                  IF(NDIV.EQ.3) GO TO 460
                  IDF4(1)=IDF3(NV31)
                  IDF4(2)=IDF3(NV32)
                  IDF4(3)=IDF3(NV33)
                  DO 440 NNN=1,3
                     N2=NNN+3
                     N1=NNN-1
                     IF(NNN.EQ.1) N1=3
                     XXX=(CVN4(NNN,1)+CVN4(N1,1))/2.D0
                     YYY=(CVN4(NNN,2)+CVN4(N1,2))/2.D0
                     ZZZ=(CVN4(NNN,3)+CVN4(N1,3))/2.D0
                     RRR=DSQRT(XXX*XXX+YYY*YYY+ZZZ*ZZZ)
                     FC=REI/RRR
                     CVN4(N2,1)=XXX*FC
                     CVN4(N2,2)=YYY*FC
                     CVN4(N2,3)=ZZZ*FC
                     XXM=CVN4(N2,1)+XEI
                     YYM=CVN4(N2,2)+YEI
                     ZZM=CVN4(N2,3)+ZEI
                     IDF4(N2)=1
                     DO 430 N3=1,NEJCI
                        N4=IJE(N3)
                        DD=(XXM-XE(N4))*(XXM-XE(N4))+
     1   (YYM-YE(N4))*(YYM-YE(N4))+
     2   (ZZM-ZE(N4))*(ZZM-ZE(N4))
                        RREJ=RE(N4)*RE(N4)
                        IF(DD.GT.RREJ) GO TO 430
                        IDF4(N2)=0
                        GO TO 440
  430                CONTINUE
  440             CONTINUE
                  GO TO 490
  450             III=1
  460             XXX=(CVN4(1,1)+CVN4(2,1)+CVN4(3,1))/3.D0
                  YYY=(CVN4(1,2)+CVN4(2,2)+CVN4(3,2))/3.D0
                  ZZZ=(CVN4(1,3)+CVN4(2,3)+CVN4(3,3))/3.D0
                  RRR=DSQRT(XXX*XXX+YYY*YYY+ZZZ*ZZZ)
                  FC=REI/RRR
                  XCT=XXX*FC
                  YCT=YYY*FC
                  ZCT=ZZZ*FC
                  XCTM=XCT+XEI
                  YCTM=YCT+YEI
                  ZCTM=ZCT+ZEI
                  IF(III.EQ.1) GO TO 480
                  DO 470 NNN=1,NEJCI
                     N4=IJE(NNN)
                     DD=(XCTM-XE(N4))*(XCTM-XE(N4))+
     1   (YCTM-YE(N4))*(YCTM-YE(N4))+
     2   (ZCTM-ZE(N4))*(ZCTM-ZE(N4))
                     RREJ=RE(N4)*RE(N4)
                     IF(DD.LT.RREJ) GO TO 610
  470             CONTINUE
  480             DD=XCTM*XCTM+YCTM*YCTM+ZCTM*ZCTM
                  VOL=VOL+AST3*(REI*REI+DD-DDCEO)/(6.D0*REI)
                  ATJ=ATJ+AST3
                  CXCM=CXCM+XCT*FM(2)
                  CYCM=CYCM+YCT*FM(2)
                  CZCM=CZCM+ZCT*FM(2)
                  CMM=CMM+FM(2)
                  GO TO 610
C*****  FOURTH DIVISION ******************************
  490             DO 600 J4=1,4
                     NV41=JVT2(1,J4)
                     NV42=JVT2(2,J4)
                     NV43=JVT2(3,J4)
                     IS4=IDF4(NV41)+IDF4(NV42)+IDF4(NV43)
                     IF(IS4.EQ.0) GO TO 600
                     III=0
                     CVN5(1,1)=CVN4(NV41,1)
                     CVN5(1,2)=CVN4(NV41,2)
                     CVN5(1,3)=CVN4(NV41,3)
                     CVN5(2,1)=CVN4(NV42,1)
                     CVN5(2,2)=CVN4(NV42,2)
                     CVN5(2,3)=CVN4(NV42,3)
                     CVN5(3,1)=CVN4(NV43,1)
                     CVN5(3,2)=CVN4(NV43,2)
                     CVN5(3,3)=CVN4(NV43,3)
                     IF(IS4.EQ.3)GOTO 520
                     IF(NDIV.EQ.4) GO TO 530
                     IDF5(1)=IDF4(NV41)
                     IDF5(2)=IDF4(NV42)
                     IDF5(3)=IDF4(NV43)
                     DO 510 NNN=1,3
                        N2=NNN+3
                        N1=NNN-1
                        IF(NNN.EQ.1) N1=3
                        XXX=(CVN5(NNN,1)+CVN5(N1,1))/2.D0
                        YYY=(CVN5(NNN,2)+CVN5(N1,2))/2.D0
                        ZZZ=(CVN5(NNN,3)+CVN5(N1,3))/2.D0
                        RRR=DSQRT(XXX*XXX+YYY*YYY+ZZZ*ZZZ)
                        FC=REI/RRR
                        CVN5(N2,1)=XXX*FC
                        CVN5(N2,2)=YYY*FC
                        CVN5(N2,3)=ZZZ*FC
                        XXM=CVN5(N2,1)+XEI
                        YYM=CVN5(N2,2)+YEI
                        ZZM=CVN5(N2,3)+ZEI
                        IDF5(N2)=1
                        DO 500 N3=1,NEJCI
                           N4=IJE(N3)
                           DD=(XXM-XE(N4))*(XXM-XE(N4))+
     1   (YYM-YE(N4))*(YYM-YE(N4))+
     2   (ZZM-ZE(N4))*(ZZM-ZE(N4))
                           RREJ=RE(N4)*RE(N4)
                           IF(DD.GT.RREJ) GO TO 500
                           IDF5(N2)=0
                           GO TO 510
  500                   CONTINUE
  510                CONTINUE
                     GO TO 560
  520                III=1
  530                XXX=(CVN5(1,1)+CVN5(2,1)+CVN5(3,1))/3.D0
                     YYY=(CVN5(1,2)+CVN5(2,2)+CVN5(3,2))/3.D0
                     ZZZ=(CVN5(1,3)+CVN5(2,3)+CVN5(3,3))/3.D0
                     RRR=DSQRT(XXX*XXX+YYY*YYY+ZZZ*ZZZ)
                     FC=REI/RRR
                     XCT=XXX*FC
                     YCT=YYY*FC
                     ZCT=ZZZ*FC
                     XCTM=XCT+XEI
                     YCTM=YCT+YEI
                     ZCTM=ZCT+ZEI
                     IF(III.EQ.1) GO TO 550
                     DO 540 NNN=1,NEJCI
                        N4=IJE(NNN)
                        DD=(XCTM-XE(N4))*(XCTM-XE(N4))+
     1   (YCTM-YE(N4))*(YCTM-YE(N4))+
     2   (ZCTM-ZE(N4))*(ZCTM-ZE(N4))
                        RREJ=RE(N4)*RE(N4)
                        IF(DD.LT.RREJ) GO TO 600
  540                CONTINUE
  550                DD=XCTM*XCTM+YCTM*YCTM+ZCTM*ZCTM
                     VOL=VOL+AST4*(REI*REI+DD-DDCEO)/(6.D0*REI)
                     ATJ=ATJ+AST4
                     CXCM=CXCM+XCT*FM(3)
                     CYCM=CYCM+YCT*FM(3)
                     CZCM=CZCM+ZCT*FM(3)
                     CMM=CMM+FM(3)
                     GO TO 600
C*****  FIFTH DIVISION  *************************************
  560                DO 590 J5=1,4
                        NV51=JVT2(1,J5)
                        NV52=JVT2(2,J5)
                        NV53=JVT2(3,J5)
                        IS5=IDF5(NV51)+IDF5(NV52)+IDF5(NV53)
                        IF(IS5.EQ.0) GO TO 590
                        XXX=(CVN5(NV51,1)+CVN5(NV52,1)+CVN5(NV53,1))/3.D
     10
                        YYY=(CVN5(NV51,2)+CVN5(NV52,2)+CVN5(NV53,2))/3.D
     10
                        ZZZ=(CVN5(NV51,3)+CVN5(NV52,3)+CVN5(NV53,3))/3.D
     10
                        RRR=DSQRT(XXX*XXX+YYY*YYY+ZZZ*ZZZ)
                        FC=REI/RRR
                        XCT=XXX*FC
                        YCT=YYY*FC
                        ZCT=ZZZ*FC
                        XCTM=XCT+XEI
                        YCTM=YCT+YEI
                        ZCTM=ZCT+ZEI
                        IF(IS5.EQ.3) GO TO  580
                        DO 570 NNN=1,NEJCI
                           N4=IJE(NNN)
                           DD=(XCTM-XE(N4))*(XCTM-XE(N4))+
     1   (YCTM-YE(N4))*(YCTM-YE(N4))+
     2   (ZCTM-ZE(N4))*(ZCTM-ZE(N4))
                           RREJ=RE(N4)*RE(N4)
                           IF(DD.LT.RREJ) GO TO  590
  570                   CONTINUE
  580                   DD=XCTM*XCTM+YCTM*YCTM+ZCTM*ZCTM
                        VOL=VOL+AST5*(REI*REI+DD-DDCEO)/(6.D0*REI)
                        ATJ=ATJ+AST5
                        CXCM=CXCM+XCT*FM(4)
                        CYCM=CYCM+YCT*FM(4)
                        CZCM=CZCM+ZCT*FM(4)
                        CMM=CMM+FM(4)
  590                CONTINUE
  600             CONTINUE
  610          CONTINUE
  620       CONTINUE
            IF(CMM.LE.0.0001) GO TO 650
            CXCM=CXCM/CMM
            CYCM=CYCM/CMM
            CZCM=CZCM/CMM
            RRR=DSQRT(CXCM*CXCM+CYCM*CYCM+CZCM*CZCM)
            FC=REI/RRR
            CXCM=CXCM*FC
            CYCM=CYCM*FC
            CZCM=CZCM*FC
            CXCM0=CXCM+XEI
            CYCM0=CYCM+YEI
            CZCM0=CZCM+ZEI
C2224      XXEV=CXCM0
C          YYEV=CYCM0
C          ZZEV=CZCM0
C          CALL TRANSF(XXEV,YYEV,ZZEV,OVV)
C          IF(ZZEV.GT.0.D0.AND.IMEZ.EQ.1)GO TO 33
C          IF(ZZEV.LE.0.D0.AND.IMEZ.EQ.2)GO TO 33
  630       IJ=IJ+1
C          ISOLV(IJ)=IMEZ
            X0(IJ)=CXCM0
            Y0(IJ)=CYCM0
            Z0(IJ)=CZCM0
  640       FORMAT('  IJ',I4,'    X',F10.5,'    Y',F10.5,'    Z',F10.5)
            FDR=REIM/REI
            XV1IJ=CXCM*FDR+XEI
            YV1IJ=CYCM*FDR+YEI
            ZV1IJ=CZCM*FDR+ZEI
            XV1(IJ)=XV1IJ
            YV1(IJ)=YV1IJ
            ZV1(IJ)=ZV1IJ
            RV1(IJ)=REI
            ASP(J)=ATJ
            AS(IJ)=ASP(J)
            SSFE(I)=SSFE(I)+ATJ
            IPLOCH(IJ)=I
C ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            GO TO 660
  650       JM(J)=0
  660    CONTINUE
  670 CONTINUE
C*********************************************************************
C     ELIMINATE NEAREST POINTS
C*********************************************************************
  680 KVAK0=0
      TEST=0.02D0
      TEST2=TEST*TEST
      IJM=IJ-1
      DO 700 I=1,IJM
         IF(AS(I).EQ.0.D0)GO TO 700
         XI=X0(I)
         YI=Y0(I)
         ZI=Z0(I)
         II=I+1
         DO 690 J=II,IJ
            IF(IPLOCH(I).EQ.IPLOCH(J))GO TO 690
            IF(AS(J).EQ.0.D0)GO TO 690
            XJ=X0(J)
            YJ=Y0(J)
            ZJ=Z0(J)
            RIJ=(XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2
            IF(RIJ.GT.TEST2)GO TO 690
            KVAK0=KVAK0+1
            AS(J)=0.D0
            ASM=(AS(I)+AS(J))
            XJ=(XI+X0(J))*UN2
            YJ=(YI+Y0(J))*UN2
            ZJ=(ZI+Z0(J))*UN2
            XIJ=(XV1(I)+XV1(J))*UN2
            YIJ=(YV1(I)+YV1(J))*UN2
            ZIJ=(ZV1(I)+ZV1(J))*UN2
            RIJ=DSQRT((XJ-XIJ)**2+(YJ-YIJ)**2+(ZJ-ZIJ)**2)
            TAU1=DR/RIJ
            TAU2=-TAU1
            XV1(I)=(XIJ-XJ)*TAU1+XJ
            YV1(I)=(YIJ-YJ)*TAU1+YJ
            ZV1(I)=(ZIJ-ZJ)*TAU1+ZJ
            X0(I)=XJ
            Y0(I)=YJ
            Z0(I)=ZJ
            AS(I)=ASM
  690    CONTINUE
  700 CONTINUE
      IIJ=IJ
      IJ=0
      DO 710 I=1,IIJ
         IF(AS(I).EQ.0.D0)GO TO 710
         IJ=IJ+1
         X0(IJ)=X0(I)
         Y0(IJ)=Y0(I)
         Z0(IJ)=Z0(I)
         AS(IJ)=AS(I)
         RV1(IJ)=RV1(I)
         XV1(IJ)=XV1(I)
         YV1(IJ)=YV1(I)
         ZV1(IJ)=ZV1(I)
         IPLOCH(IJ)=IPLOCH(I)
  710 CONTINUE
  720 FORMAT(2I4,4F10.5)
      IIJ=IJ
      NTS=IJ
      STOT=0.D0
      DO 730 I=1,NESF
  730 SSFE(I)=0.D0
      DO 740 I=1,NTS
         K=IPLOCH(I)
  740 SSFE(K)=SSFE(K)+AS(I)
      WRITE(IW,750)NESF
  750 FORMAT(//,'1    ****** PISA SOLVENT MODEL ******',//,             
     *       ' * CHARACTERISTICS OF THE CAVITY *',                      
     * ////,'  TOTAL NUMBER OF SPHERES',I5,//,' CENTER - RADIUS :',//,  
     *       ' SPHERE    CENTER  (X,Y,Z) (ANG.)     RADIUS (ANG.)',     
     * '  AREA(ANG.*ANG.)')                                             
      GVW=0.
      DO 760 I=1,NESF
         WRITE(IW,40)I,XE(I),YE(I),ZE(I),RE(I),SSFE(I)
      IF (ICLASS(I).EQ.1) THEN
         GVW=GVW-0.0876*SSFE(I)
      ELSE IF (ICLASS(I).EQ.6) THEN
         GVW=GVW-0.1088*SSFE(I)
      ELSE IF (ICLASS(I).EQ.7) THEN
         GVW=GVW-0.0522*SSFE(I)
      ELSE IF (ICLASS(I).EQ.8) THEN
         GVW=GVW-0.0514*SSFE(I)
      ELSE IF (ICLASS(I).EQ.9) THEN
         GVW=GVW-0.0514*SSFE(I)
      ELSE IF (ICLASS(I).EQ.16) THEN
         GVW=GVW-0.0697*SSFE(I)
      ELSE IF (ICLASS(I).EQ.99) THEN
         GVW=GVW-0.1737*SSFE(I)
      ELSE
         GVW=GVW-0.0767*SSFE(I)
      END IF
  760 STOT=STOT+SSFE(I)
      WRITE(IW,770)OMEGA,RD,RET,FRO,NDIV
  770 FORMAT(///,' POLYHEDRON PARAMETER: OMEGA=',F8.3,' RD=',F8.3,
     1' RET=', F8.3,' FRO=',F8.3,' NDIV=',I5,//)
      WRITE(IW,780)NTS,STOT,VOL
  780 FORMAT(' TOTAL NUMBER OF ELEMENTS ',I8,//,
     1' SURFACE  ',F12.5,'(ANG.**2)     VOLUME ',F12.5,
     2'(ANG.**3)',//)
  790 FORMAT(' SPHERE',I3,'   AREA',F10.5)
C     PATAS: COMPUTATION OF VAN DER WAALS TERM
C     SEE F.M.FLORIS, J.TOMASI,J.L.PASCUAL AHUIR
C         JOURNAL OF COMPUTATIONAL CHEMISTRY,12(1991)784-791
C
      GVWS=-0.03208-0.0767*STOT
      GVWV=-1.26850-0.07469*VOL
      WRITE(IW,800) GVW,GVWS,GVWV
  800 FORMAT(' VAN DER WAALS OPTIMIZED LINEAR RELATION: ',F12.5,
     1' KCAL/MOL',
     2/,' VAN DER WAALS FREE-ENERGY (SURFACE): ',F12.5,' KCAL/MOL',
     3/,' VAN DER WAALS FREE-ENERGY (VOLUME):  ',F12.5,' KCAL/MOL',/)
C     PATAS: END OF MODIFICATION
C     IF(IPRINT.EQ.1)THEN
      WRITE(ISOL,810)
      WRITE(ISOL,820)
C     END IF
  810 FORMAT('1 *** PARTITIONING OF THE SURFACE    ***')
  820 FORMAT(' ELEMENT  SPHERE   AREA       CENTER COORDINATES(X,Y,Z)', 
     *'         POINT NORMAL TO THE CENTER(X,Y,Z)')                    
  830 FORMAT(2I7,7F10.5)
      OMEGA=OMEGA/FIRST
      DO 840 I=1,NTS
C     IF(IPRINT.EQ.1)THEN
         WRITE(ISOL,830)I,IPLOCH(I),AS(I),X0(I),Y0(I),Z0(I),XV1(I),
     1YV1(I),ZV1(I)
C     END IF
         K=I+NTS
         AS(I)=AS(I)*ANTOAU*ANTOAU
         XV(K)=XV1(I)*ANTOAU
         YV(K)=YV1(I)*ANTOAU
         ZV(K)=ZV1(I)*ANTOAU
         XV(I)=X0(I)*ANTOAU
         YV(I)=Y0(I)*ANTOAU
         ZV(I)=Z0(I)*ANTOAU
  840 CONTINUE
      NSF=NESF
      RETURN
      END
      SUBROUTINE PURDF1(X)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      INTEGER UBOUND,ULPURE
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
      COMMON/TYPE/ITYPE,JTYPE
      COMMON/IPURE/IPURD,IPURF
      COMMON/LIMIT/IMJ,ISTART,JSTART,IEND,JEND,IRANGE,JRANGE,LENTQ
      COMMON/CFACT/PT5,R3OV2,ROOT3,ROOT5,ROOT15,R1,R2,R4,Z1,Z2,Z3
      COMMON/ORDER/NORDR(20),N6ORD(10),N5ORD(9),N10ORD(10),N7ORD(7),
     1             LBOUND(4,3),UBOUND(4),ULPURE(4)
      COMMON/MAX/LAMAX,LBMAX,LPMAX
      COMMON/NEW/INEW,JNEW
      DIMENSION X(10)
      EQUIVALENCE(R3,R3OV2)
C
C
C***********************************************************************
C     THIS ROUTINE TRANSFORMS THE INPUT RECTANGULAR MATRIX X FROM
C     SECOND- OR THIRD-ORDER GAUSSIANS TO PURE ANGULAR FUNCTIONS.
C     (IE. TO PURE D- OR F-FUNCTIONS.)
C
C     THE TRANSFORMATION IS DONE INDEX SEQUENTIALLY, AND IS
C     O(N**3) OPERATIONS.
C
C     BECAUSE THE TRANSFORMATION MATRICES ARE OF UNIT MATRIX FORM
C     AND ARE SPARSE, THE MATRIX MULTIPLICATIONS ARE EXPLICITELY
C     WRITTEN.
C
C     THIS ROUTINE WILL ALTER /LIMIT/ IN THAT IEND, JEND, IRANGE,
C     AND JRANGE ARE UPDATED IF NECESSARY.
C***********************************************************************
C
C
C
C     TEST FOR POSSIBLE BYPASS OF TRNASFORMATION AT B.
      IF(JTYPE-2)100,10,40
C
C     TEST FOR PURE D AT B.
   10 IF(IPURD)100,20,100
C
C     ******************************************************************
C     D-TRANSFORM AT B.
C     ******************************************************************
C     INDX1 IS THE MAIN INDEX INTO X.
   20 INDX1=5-JSTART+1
C     LOOP OVER ALL VALUES OF I.
      DO 30 I=1,IRANGE
C     FORM 3*Z**2-R**2 PART AT B.
         DZ2=X(INDX1+2)-PT5*(X(INDX1)+X(INDX1+1))
C     FORM X**2-Y**2 AT B.
         DX2Y2=R3OV2*(X(INDX1)-X(INDX1+1))
C     FILL THE INTEGRALS INTO X.
         X(INDX1  )=DZ2
         X(INDX1+1)=X(INDX1+4)
         X(INDX1+2)=X(INDX1+5)
         X(INDX1+4)=X(INDX1+3)
         X(INDX1+3)=DX2Y2
   30 INDX1=INDX1+JRANGE
C     BRANCH TO COMPRESSION.
      GO TO 70
C
C
C     TEST FOR F-TRANSFORMATION.
   40 IF(IPURF)100,50,100
C
C     ******************************************************************
C     F-TRANSFORM AT B.
C     ******************************************************************
C     WE HAVE ONLY F. (IE. NO S=P STUFF).
C     SET INDX1.
   50 INDX1=0
C     LOOP OVER ALL POSSIBLE I VALUES.
      DO 60 I=1,IRANGE
C
         F0 =X(INDX1+3)-R2*(X(INDX1+6)+X(INDX1+9))
         F1P=R4*(Z1*X(INDX1+7)-X(INDX1+1)-Z2*X(INDX1+4))
         F1M=R4*(Z1*X(INDX1+8)-X(INDX1+2)-Z2*X(INDX1+5))
         F2P=R3*(X(INDX1+6)-X(INDX1+9))
         F2M=X(INDX1+10)
         F3P=R1*(X(INDX1+1)-Z3*X(INDX1+4))
         F3M=R1*(Z3*X(INDX1+5)-X(INDX1+2))
C
         X(INDX1+1)=F0
         X(INDX1+2)=F1P
         X(INDX1+3)=F1M
         X(INDX1+4)=F2P
         X(INDX1+5)=F2M
         X(INDX1+6)=F3P
         X(INDX1+7)=F3M
C
   60 INDX1=INDX1+JRANGE
C
C
C     AFTER TRANSFORMATION AT B, IT IS NECESSARY TO ELIMINATE
C     THE EXTRANEOUS FUNCTIONS.
C
C     INDX2 COUNTS INTO COMPRESSED ARRAY.
C     INDX1 COUNTS FROM THE UN-COMPRESSED ARRAY.
C
C     SET JENDP AND JRPURE.
   70 JENDP=ULPURE(LBMAX)
      JRPURE=JENDP-JSTART+1
C
      INDX1=0
      INDX2=0
C
C     LOOP OVER ALL I, NEW J.
      DO 90 I=1,IRANGE
         DO 80 J=1,JRPURE
   80    X(INDX2+J)=X(INDX1+J)
         INDX1=INDX1+JRANGE
   90 INDX2=INDX2+JRPURE
C
C     TRANSFORMATION AT B IS COMPLETE.
C     UPDATE NECESSARY /LIMIT/ VARIABLES.
      JEND=JENDP
      JRANGE=JRPURE
C
C
C     TEST FOR POSSIBLE BYPASS OF TRANSFORMATION AT A.
  100 IF(ITYPE-2)180,110,140
C
C     TEST FOR D-TRANSFORM AT A.
  110 IF(IPURD)180,120,180
C
C     ******************************************************************
C     EXECUTE D-TRANSFORM AT A.
C     ******************************************************************
C     OBTAIN STARTING INDEX.
  120 INDX1=(5-ISTART)*JRANGE+1
C     OBTAIN INCREMENTS.
      INCR1=JRANGE
      INCR2=INCR1+JRANGE
      INCR3=INCR2+JRANGE
      INCR4=INCR3+JRANGE
      INCR5=INCR4+JRANGE
C
C     PERFORM D-TRANSFORM AT A.
      DO 130 J=1,JRANGE
         DZ2=X(INDX1+INCR2)-PT5*(X(INDX1)+X(INDX1+INCR1))
         DX2Y2=R3OV2*(X(INDX1)-X(INDX1+INCR1))
         X(INDX1      )=DZ2
         X(INDX1+INCR1)=X(INDX1+INCR4)
         X(INDX1+INCR2)=X(INDX1+INCR5)
         X(INDX1+INCR4)=X(INDX1+INCR3)
         X(INDX1+INCR3)=DX2Y2
  130 INDX1=INDX1+1
      GO TO 170
C
C
C     TEST FOR REQUIRED PURE F AT A.
  140 IF(IPURF)180,150,180
C
C     ******************************************************************
C     TRANSFORM TO PURE F AT A.
C     ******************************************************************
C     OBTAIN STARTING INDEX.
  150 INDX1=1
C     OBTAIN INCREMENTS.
      INCR1=JRANGE
      INCR2=INCR1+JRANGE
      INCR3=INCR2+JRANGE
      INCR4=INCR3+JRANGE
      INCR5=INCR4+JRANGE
      INCR6=INCR5+JRANGE
      INCR7=INCR6+JRANGE
      INCR8=INCR7+JRANGE
      INCR9=INCR8+JRANGE
C
C     COMMENCE F-TRANSFORMATION LOOP AT A.
      DO 160 J=1,JRANGE
C
         F0 =X(INDX1+INCR2)-R2*(X(INDX1+INCR5)+X(INDX1+INCR8))
         F1P=R4*(Z1*X(INDX1+INCR6)-X(INDX1)-Z2*X(INDX1+INCR3))
         F1M=R4*(Z1*X(INDX1+INCR7)-X(INDX1+INCR1)-Z2*X(INDX1+INCR4))
         F2P=R3*(X(INDX1+INCR5)-X(INDX1+INCR8))
         F2M=X(INDX1+INCR9)
         F3P=R1*(X(INDX1)-Z3*X(INDX1+INCR3))
         F3M=R1*(Z3*X(INDX1+INCR4)-X(INDX1+INCR1))
C
         X(INDX1      )=F0
         X(INDX1+INCR1)=F1P
         X(INDX1+INCR2)=F1M
         X(INDX1+INCR3)=F2P
         X(INDX1+INCR4)=F2M
         X(INDX1+INCR5)=F3P
         X(INDX1+INCR6)=F3M
C
  160 INDX1=INDX1+1
C
C     GET CORRECTED I VALUES TO /LIMIT/.
  170 IEND=ULPURE(LAMAX)
      IRANGE=IEND-ISTART+1
C
  180 RETURN
      END
      SUBROUTINE RFIELD
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'SIZES'
      CHARACTER*4 APP
      COMMON C(NUMATM,3),NATOMS,ICHARG,MULTIP,IAN(NUMATM),NAE,NBE,NE,
     1NBASIS
C     COMMON ANTOAU,FCONV(3),ICDUM(131)
      COMMON /POLY/SX(500),SY(500),SZ(500),SRD(500),
     1SURF(500),
     2ISPHE(1500),TA(1500),STOT,VTOT,N,NC(NUMATM)
      COMMON /MSTSOL/EPS,DMP,MC,ICOMP,IFIELD,ICAV
      COMMON /MSTCAV/TABS,VMOL,DMOL,TCE,STEN,DSTEN,CMF
      COMMON /MSTXYZ/XV(3575),YV(3575),ZV(3575),NTS
      COMMON/FINAL/GVW,GVWS,ELC1,EC1
      COMMON /BBNEW/VALV(3575)
      DIMENSION POT(1500),POTS(1500)
      DIMENSION SCR1(10725),SCR2(3078)
      COMMON/MSTQ/QS(1500),MFLAG,ITERQ
C     DIMENSION QSFE(15),QS1(1500),QS0(1500)
      DIMENSION QSFE(500),QS1(1500),QS0(1500)
      COMMON /CHANEL/ IFILES(30)
      COMMON /FUNCON/ FPC(2,10),IFPC
      EQUIVALENCE (IW,IFILES(6)),(ISOL,IFILES(17))
      EQUIVALENCE(XV(1),SCR1(1)),(SCR2(1),SX(1))
      DATA PI/3.14159265D0/
      DATA ZERO,PT5,ONE,TWO,FOUR/0.0D0, .5D0,1.0D0,2.0D0,4.0D0/
      DATA TPI,FPI/6.28318531D0,12.56637061D0/
      DATA CEKM/0.0014389D0/
      GC=FPC(IFPC,5)
      AVGDR=FPC(IFPC,10)*1.D-24
      CONST=FPC(IFPC,4)*FPC(IFPC,9)
C      CEKM=
   10 FORMAT(' * SOLVENT PHYSICAL PARAMETERS * ',//,
     1' PERMITTIVITY ',F8.3,///)
   20 FORMAT(' * DIELECTRIC REACTION FIELD COMPUTED AT LEVEL',
     1A4,'*')
   30 FORMAT(F8.3,I3,F6.3,4I3)
      IF(MC.EQ.0)THEN
         APP='1A'
         IF(ICOMP.NE.0)APP='1B'
      END IF
      IF(MC.NE.0)THEN
         APP='2A'
         IF(ICOMP.NE.0)APP='2B'
      END IF
      IF(MFLAG.EQ.0)WRITE(ISOL,10)EPS
      WRITE(ISOL,20)APP
      CONV=-(EPS-1.D0)/EPS
      FACT=CONV/FPI
      QTOT1=ZERO
      ELET1=ZERO
      DO 40 I=1,N
   40 QSFE(I)=ZERO
      N1=NTS+1
      DR=DSQRT((XV(1)-XV(N1))**2+(YV(1)-YV(N1))**2+(ZV(1)-ZV(N1))**2)
C-----------------------------------------------------------------------
C                  APPROXIMATION I:
C-----------------------------------------------------------------------
      DO 70 I=1,NTS
         IF (I.EQ.1) WRITE(ISOL,50)
   50    FORMAT(/,' SPHERE ELEMENT       X         Y         Z      CHAR
     1GE','A   AREA    C.E.')
         K=I+NTS
         L=ISPHE(I)
C7020 FORMAT(2F10.5)
         EF=(VALV(K)-VALV(I))/DR
         QS(I)=TA(I)*FACT*EF
         WRITE(ISOL,60)L,I,XV(I),YV(I),ZV(I),QS(I),TA(I),EF
   60    FORMAT(2(I5,5X),6F10.7)
         POT(I)=VALV(I)
         QSFE(L)=QSFE(L)+QS(I)
         QTOT1=QTOT1+QS(I)
         ELET1=ELET1+QS(I)*POT(I)
   70 CONTINUE
      ELET1=ELET1*PT5
C
   80 FORMAT(I5,5X,F12.7)
   90 FORMAT(//, '    TOTAL CHARGE ON THE CAVITY SURFACE ',F10.5)
  100 FORMAT(/,' SOLUTION DIELECTRIC INTERACTION/2 ',F10.5
     1       ,'A.U.',F15.5,'KCAL/MOLE')
  110 FORMAT(/,'    CHARGE ON THE SURFACE FOR EVERY SPHERE',/,
     1'   SPHERE     CHARGE ')
C-----------------------------------------------------------------------
      WRITE(ISOL,20)'1A'
      WRITE(ISOL,100)ELET1,ELET1*CONST 
C     IF(IPRINT.EQ.1)THEN
      WRITE(ISOL,90)QTOT1
      WRITE(ISOL,110)
      DO 120 I=1,N
         WRITE(ISOL,80)I,QSFE(I)
  120 CONTINUE
C     END IF
      IF(MC.EQ.0)THEN
         IF(ICOMP.EQ.0)GOTO 360
         GOTO 270
      END IF
C-----------------------------------------------------------------------
C            APPROXIMATION II:
C-----------------------------------------------------------------------
      M=0
      TLM=1.D0-DMP
      DO 130 I=1,NTS
  130 QS0(I)=QS(I)
  140 M=M+1
      ELET3=ZERO
      ELET2=ZERO
      DO 150 I=1,N
  150 QSFE(I)=ZERO
      DO 160 I=1,NTS
  160 QS1(I)=QS(I)
      WRITE(ISOL,170)M
  170 FORMAT(//,' SELF-POLARIZATION CYCLE      ',I4)
      CHRG=ZERO
C
      DO 220 I=1,NTS
         IF(I.EQ.1)WRITE(ISOL,180)
  180 FORMAT(/,' ELEMENT    CHARGE(NO  POL.)  SELF-POL.     CAMBERING  
     *   ANOTHER CHARGE   CHARGE1(POL.)    CHARGE2(POL.)')            
         K=I+NTS
         XI=XV(I)
         YI=YV(I)
         ZI=ZV(I)
         XD=XV(K)
         YD=YV(K)
         ZD=ZV(K)
         QSI=QS1(I)
         KS=ISPHE(I)
C
         RAD=TA(I)/(FPI*SRD(KS)**2)
         QSELF0=-TPI*QSI*FACT
         QCUMB=QSELF0*DSQRT(RAD)
         QSELF1=QSELF0-QCUMB
         POTSLF=TPI*QSI/DSQRT(TA(I)*PI)
         IF(I.EQ.1)WRITE(ISOL,210)POTSLF
C
         POTSI=ZERO
         QSA=ZERO
         DO 190 J=1,NTS
            IF(J.EQ.I)GOTO 190
            QSJ=QS1(J)
            XJ=XV(J)
            YJ=YV(J)
            ZJ=ZV(J)
            RDJ=DSQRT((XD-XJ)**2+(YD-YJ)**2+(ZD-ZJ)**2)
            RIJ=DSQRT((XI-XJ)**2+(YI-YJ)**2+(ZI-ZJ)**2)
            IF(RIJ.LT..026)GOTO 190
            EFN=QSJ*(1.D0/RDJ-1.D0/RIJ)/DR
            QSA=QSA+EFN*TA(I)*FACT
            POTSI=POTSI+QSJ/RIJ
  190    CONTINUE
C     END OF INTERNAL CYCLE OVER CHARGES   
         QSIB=QS0(I)+QSELF1+QSA
         QS(I)=QSIB*DMP+QSI*TLM
         WRITE(ISOL,200)I,QSI,QSELF0,QCUMB,QSA,QSIB,QS(I)
  200    FORMAT(I5,6F15.5)
         POTS(I)=POTSI+POTSLF
         IF(I.EQ.1)WRITE(ISOL,210)POTSI,POTS(I)
  210    FORMAT(3F10.5)
         L=ISPHE(I)
         QSFE(L)=QSFE(L)+QS(I)
         ELET3=ELET3+POTS(I)*QS(I)
         ELET2=ELET2+QS(I)*POT(I)
         CHRG=CHRG+QS(I)
  220 CONTINUE
C     END OF EXTERNAL CYCLE OVER CHARGES   
      WRITE(ISOL,90)CHRG
      ELET3=ELET3*PT5
      ELET2=ELET2*PT5
      WRITE(ISOL,100)ELET2,ELET2*CONST 
  230 FORMAT(' INTERACTION 1/2(SIGMA(POL.)*M.E.P.) ',F10.5,      
     *' INTERACTION 1/2(SIGMA(POL.)*SIGMA(POL.)) ',F10.5)       
      IF(M.EQ.1)GOTO 240
      IF(DABS(PCHRG-CHRG).LT..0001)GOTO 250
  240 PCHRG=CHRG
      IF(M.LT.MC)GO TO 140
  250 QTOT=CHRG
      WRITE(ISOL,20)'2A'
      WRITE(ISOL,100)ELET2,ELET2*CONST 
C     IF(IPRINT.EQ.1)THEN
      WRITE(ISOL,90)CHRG
      WRITE(ISOL,110)
      DO 260 I=1,N
         WRITE(ISOL,80)I,QSFE(I)
  260 CONTINUE
C     END IF
      IF(ICOMP.EQ.0)GOTO 360
C-----------------------------------------------------------------------
C               APPROXIMATION III: CHARGE COMPENSATION.
C-----------------------------------------------------------------------
  270 IF(MC.EQ.0)WRITE(ISOL,20)'1B'
      IF(MC.NE.0)WRITE(ISOL,20)'2B'
      VCHRG=FLOAT(ICHARG)*CONV
      QDIF=QTOT-VCHRG
      WRITE(ISOL,280)VCHRG,CHRG
  280 FORMAT(/,5X,'THEORETICAL VIRTUAL CHARGE',F15.6,
     15X,'EFFECTIVE VIRTUAL CHARGE',3X,F10.6)
      QNEG=ZERO
      QPOS=ZERO
      DO 290 I=1,N
  290 QSFE(I)=ZERO
      DO 300 I=1,NTS
  300 IF(QS(I).LT.ZERO)QNEG=QNEG-QS(I)
      QPOS=QTOT+QNEG
      FC=PT5
      IF(QPOS.GT..00001.AND.QNEG.GT..00001)THEN
         FCP=1.D0-FC*QDIF/QPOS
         FCN=1.D0+FC*QDIF/QNEG
      END IF
      IF(QNEG.LT..00001)THEN
         FCP=1.D0-ONE*QDIF/QPOS
         FCN=1.D0
      END IF
      IF(QPOS.LT..00001)THEN
         FCN=1.D0+ONE*QDIF/QNEG
         FCP=1.D0
      END IF
      QTOT=ZERO
      DO 310 I=1,NTS
         IF(QS(I).LT.ZERO)QS(I)=QS(I)*FCN
         IF(QS(I).GT.ZERO)QS(I)=QS(I)*FCP
  310 QTOT=QTOT+QS(I)
C-----------------------------------------------------------------------
      ELET4=ZERO
      ELET5=ZERO
  320 DO 340 I=1,NTS
         L=ISPHE(I)
         QSFE(L)=QSFE(L)+QS(I)
         REQ=DSQRT(TA(I)/PI)
         POTS(I)=TPI*QS(I)*REQ/TA(I)
         DO 330 J=1,NTS
            RIJ=DSQRT((XV(I)-XV(J))**2+(YV(I)-YV(J))**2+(ZV(I)-ZV(J))**2
     1)
            IF(RIJ.LT..026)GOTO 330
            POTS(I)=POTS(I)+QS(J)/RIJ
  330    CONTINUE
         ELET5=ELET5+POTS(I)*QS(I)
         ELET4=ELET4+POT(I)*QS(I)
  340 CONTINUE
      ELET4=ELET4*PT5
      ELET5=ELET5*PT5
      WRITE(ISOL,100)ELET4,ELET4*CONST 
      WRITE(ISOL,110)
      DO 350 I=1,N
         WRITE(ISOL,80)I,QSFE(I)
  350 CONTINUE
  360 CONTINUE
  370 CONTINUE
C-----------------------------------------------------------------------
C    CAVITATION ENERGY         R.A. PIEROTTI
C                              CHEM. REVIEW, 76,717,(1976).
C-----------------------------------------------------------------------
      IF (ICAV.EQ.0)GOTO 420
      IF (MFLAG.NE.0)GOTO 420
C     READ(IN,500)TABS,VMOL,DMOL,TCE
  380 FORMAT(6F10.5)
      DCAV=DSQRT(STOT/PI)
      TABS2=TABS**2
      DENUM=AVGDR/VMOL
      YP=DENUM*PI*DMOL**3/6.0D0
      YPM1=1.D0-YP
      RP=DCAV/DMOL
      ECF=TCE*GC*TABS2*YP/(YPM1**3)
      EC=ECF*(YPM1**2+3.D0*YPM1*RP+3.D0*(1.D0+TWO*YP)*RP*RP)/1000.0D0
      SIG=(DCAV+DMOL)*PT5
      RAP=YP/YPM1
      RAP2=RAP**2
      PK0=-DLOG(YPM1)+4.5D0*RAP2
      PK1=-(6.D0*RAP+18.0D0*RAP2)/DMOL
      PK2=(12.D0*RAP+18*RAP2)/DMOL**2
      ELC=(PK2*SIG+PK1)*SIG+PK0
      ELC=ELC*GC*TABS/1000.D0
      WRITE(IW,390)ELC,TCE,EC,DENUM,DMOL,DCAV
      ELC1=ELC
      EC1=EC
  390 FORMAT( //,' PIEROTTI: FREE ENERGY OF CAVITATION',F9.5,'KCAL/MOLE'
     1,5X,'THERMAL EXPANSION COEF.=',F14.6,/,
     211X,'CAVITATION EN (ENTHALPY)',F9.5,' KCAL/MOLE',
     35X,'NUMERAL DENSITY=',F22.6,/,
     460X,'SOLVENT MOLECULE DIAMETER ',F12.6,/,
     560X,'CAVITY DIAMETER ',F22.6)
C-----------------------------------------------------------------------
C    ENERGIA DI CAVITAZIONE:  SINANOGLU AT ALL
C                             T.C.A. 42,310,(1976)
C-----------------------------------------------------------------------
C     READ(IN,500)STEN,DSTEN,CMF
      CMFM=(CMF-1.D0)/RP**2+1.D0 
      ELC=STEN*CMFM*STOT*CEKM
      EC=ELC*(1.D0+DSTEN-TWO*TABS*TCE/3.D0)
      WRITE(IW,400)ELC,CMF,EC,STEN,DSTEN,TABS
  400 FORMAT(//,' SINANOGLU: CAVITATION FREE ENERGY ',F9.5,'KCAL/MOLE'
     1,5X,'MICROSCOP. CAVITY FACTOR ',F14.6,/,
     211X,' CAVITATION EN.(ENTHALPY) ',F9.5,' KCAL/MOLE',
     35X,'SURFACE TENSION=',F22.6,/,
     460X,'SURFACE TENSION DERIVATE ',F12.6,/,
     560X,'ABSOLUTE TEMPERATURE ',F22.6,/,
     610X,'**************************************************',/)
C-----------------------------------------------------------------------
C     CALCULATION OF REACTION FIELD AT SELECTED POINTS    
C-----------------------------------------------------------------------
  410 FORMAT(/,'SFERA  TESSERA           X         Y         Z       ',
     1'CARICA')
C 910 MFLAG=0
  420 CONTINUE
C     IF(IPRINT.EQ.2)THEN
      WRITE(ISOL,410)
      DO 430 I=1,NTS
         L=ISPHE(I)
  430 WRITE(ISOL,60)L,I,XV(I),YV(I),ZV(I),QS(I)
C     END IF
C     IF(IFIELD.EQ.0)GOTO 700
C     REACTION FIEL ON POINTS FROM CARD.
C     READ(IN,2030)NPTS2
C     READ(IN,500)(XV(I),YV(I),ZV(I),I=1,NPTS2)
C     READ(IN,500)XE1,YE1,ZE1
C     IF(XE1.EQ.1000.D0)RETURN
C     CEX=ZERO
C     CEY=ZERO
C     CEZ=ZERO
C     PTZ=ZERO
C     DO 550 I=1,NTS
C     XU=XV(I)-XE1
C     YU=YV(I)-YE1
C     ZU=ZV(I)-ZE1
C     R1=DSQRT((XU**2+YU**2+ZU**2)**3)
C     R2=DSQRT(XU**2+YU**2+ZU**2)
C     CEX=CEX+QS(I)*XU/R1
C     CEY=CEY+QS(I)*YU/R1
C     CEZ=CEZ+QS(I)*ZU/R1
C     PTZ=PTZ+QS(I)/R2
C 550 CONTINUE
C     CEI=DSQRT(CEX**2+CEY**2+CEZ**2)
C     CDX=CEX/CEI
C     CDY=CEY/CEI
C     CDZ=CEZ/CEI
C6070 FORMAT(///,' SITE ',3F10.5,/,'   REACTION FIELD COMPONENTS '
C    *,3F7.3,' INTENSITY ',F10.5,' DIRECTION COSINES ',3F7.3)
C6100 FORMAT(/,'   REACTION POTENTIAL',F10.7)
C     RETURN
C     REACTION FIELD ON NUCLEI        
  440 PTZ=ZERO
      WRITE(ISOL,460)
      DO 480 I=1,NATOMS
         IF(IAN(I).EQ.0)GOTO 480
         CEX=ZERO
         CEY=ZERO
         CEZ=ZERO
         DO 450 J=1,NTS
            XU=XV(J)-C(I,1)
            YU=YV(J)-C(I,2)
            ZU=ZV(J)-C(I,3)
            R1=DSQRT((XU**2+YU**2+ZU**2)**3)
            R2=DSQRT(XU**2+YU**2+ZU**2)
            CEX=CEX+QS(J)*XU/R1
            CEY=CEY+QS(J)*YU/R1
            CEZ=CEZ+QS(J)*ZU/R1
            PTZ=PTZ+QS(I)/R2
  450    CONTINUE
         CEI=DSQRT(CEX**2+CEY**2+CEZ**2)
         CDX=CEX/CEI
         CDY=CEY/CEI
         CDZ=CEZ/CEI
         WRITE(ISOL,470)I,IAN(I),CEX,CEY,CEZ,CEI
  460 FORMAT(//,' REACTION ELECTRIC FIELD ON NUCLEI      ',/,       
     *'CENTER/NUM.ATOM.           COMPONENTS (X,Y,Z) (A.U)     ',  
     *'  MODULUS (A.U.)')                                         
  470    FORMAT(2I5,4F15.6)
  480 CONTINUE
C
C     CHANGE VALUE OF PARAMETER MFLAG
C
      IF(MFLAG.EQ.0) MFLAG=1
      RETURN
      END
      SUBROUTINE RPOL1(N,X,TP2,WP2)
C
C     --------------------------
C     GAUSSIAN 76 (QCPE VERSION)
C     DECEMBER 1977
C     CONTROL DATA 7600
C     --------------------------
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION TP2(*),WP2(*)
C
C     GIVEN N (ORDER OF THE RYS POLYNOMIAL) AND X (THE ARGUMENT TO
C     THE F(M,T) ROUTINE), THIS ROUTINE USES COMMON/T2W2/ TO INTER-
C     POLATE THE ROOTS AND WEIGHTS OF THE RYS POLYNOMIAL.
C
      COMMON/T2W21E/LENT(4),LIND(4),IADR(4),S(4),YCUT(4),T2(1030),W2(103
     10)
      COMMON/HERM1E/HROOT2(10),HWEIGH(10)
      COMMON/INTCON/F6I,F20I,F100
      COMMON/INTK/ZERO,XINT(12)
      EQUIVALENCE(ONE,XINT(1)),(FOUR,XINT(4))
      COMMON/MTPC/  ATHETA,BTHETA,APHI,BPHI,CM1,C0,C1,C2,M
      EQUIVALENCE(TH2,PH2,BT2,Y100)
C**   DATA F100/100.0E0/
      F100=100.
C     GIVEN X, COMPUTE Y.
      SX=S(N)*X
      Y=SX/(1.D0+SX)
C
C     TEST FOR POSSIBLE USE OF LARGE X FORMULA.
      IF(Y-YCUT(N))10,30,30
C
C     MAP ONTO 100.
   10 Y100=F100*Y
      M=INT(Y100)
      THETA=Y100- FLOAT(M)
      PHI=1.D0-THETA
C
C     COMPUTE POLYNOMIALS IN THETA AND PHI.
      TH2=THETA*THETA
      ATHETA=THETA*(TH2-1.D0)*F6I
      BTHETA=ATHETA*(TH2-FOUR)*F20I
      PH2=PHI*PHI
      APHI=PHI*(PH2-1.D0)*F6I
      BPHI=APHI*(PH2-FOUR)*F20I
C
C     COMPUTE INTERPOLATION COEFFICIENTS.
      AT2=ATHETA+ATHETA
      BT2=BTHETA+BTHETA
      BT3=BT2+BTHETA
      BT4=BT3+BTHETA
      AP2=APHI+APHI
      BP2=BPHI+BPHI
      BP3=BP2+BPHI
      BP4=BP3+BPHI
      CM1=BTHETA-BP4+APHI
      C0=PHI-BT4+(BP3+BP3)+ATHETA-AP2
      C1=THETA+(BT3+BT3)-BP4-AT2+APHI
      C2=BPHI+ATHETA-BT4
C
C     ALL REQUIRED INFORMATION IS NOW READY.  PERFORM INTERPOLATION.
C     THIS STEP CREATES N ROOTS (SQUARED) AND N WEIGHTS.
      IAD=IADR(N)
      DO 20 I=1,N
         TP2(I)=DINTRP(T2(IAD))
         WP2(I)=DINTRP(W2(IAD))
         WP2(I)= SQRT(WP2(I))
   20 IAD=IAD+LENT(N)
      RETURN
C
C
C     COMPUTE RYS ROOTS AND WEIGHTS FOR LARGE X BY A HERMITE POLYNOMIAL
C     APPROXIMATION.
C     HROOT2 CONTAINS THE SQUARES OF THE ZEROES OF THE FIRST SEVEN
C     EVEN HERMITE POLYNOMIALS.
C     HWEIGH CONTAINS THE CORRESPONDING WEIGHTS (NOT SQUARED).
   30 XI=1.D0/X
      XROOTI= SQRT(XI)
      DO 40 I=1,N
         IAD=LIND(N)+I
         TP2(I)=HROOT2(IAD)*XI
   40 WP2(I)=HWEIGH(IAD)*XROOTI
      RETURN
      END
      SUBROUTINE SURFAT(SCALE,DENS,IT345,VWXYZ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      INCLUDE 'SIZES'
C
C THIS PROGRAM CALCULATES THE MOLECULAR SURFACE OF A MOLECULE
C GIVEN THE COORDINATES OF ITS ATOMS.  VAN DER WAALS RADII FOR
C THE ATOMS AND THE PROBE RADIUS MUST ALSO BE SPECIFIED.
C     FOR FURTHER DETAILS SEE COMENT.FOR .
C
C
C     THIS SUBROUTINE IS LIFTED FROM MICHAEL CONNOLLY'S SURFACE
C     PROGRAM FOR UCSF GRAPHICS SYSTEM AND ADAPTED TO G80 BY
C             U.CHANDRA SINGH AND P.A.KOLLMAN
C
C
C
C
C     COMMON/ABC/CO(3,10001),RAD(10001),WATER(3,500),
C    *           ,CON(3,500),CIRCLE(3,100),
C    *           ,SCO(3,100),EAT(3,100),ARC(3,50,2),IAS(10001),
C    *           ,IYON(1250),IVIC(3750)
C
      COMMON/RADIUS/RTYPE(30),VANDER(30),DEN,RW,NTYPE,ITYPE(30),NATOM
      COMMON/IO/IN,IOUT,IPUNCH
      COMMON /JOBNAM/ JOBNAM
      COMMON /FUNCON/ FPC(2,10),IFPC
      COMMON /CHANEL/ IFILES(30)
      COMMON C(NUMATM,3),NATOMS,ICHARG,MULTIP,IAN(NUMATM),NAE,NBE,NE,
     1NBASIS
      CHARACTER  JOBNAM*80 
      DIMENSION VWXYZ(3,3600)
      DIMENSION CO(3,10001),RAD(10001),WATER(3,500),CON(3,500)
      DIMENSION CIRCLE(3,100),SCO(3,100),EAT(3,100),ARC(3,50,2)
      DIMENSION IAS(10001),IYON(1250),IVIC(3750)
C
C     ----- NEIGHBOR ARRAYS ----
C
C THIS SAME DIMENSION FOR THE MAXIMUM NUMBER OF NEIGHBORS
C IS USED TO DIMENSION ARRAYS IN THE LOGICAL FUNCTION COLLI1
C
      DIMENSION INBR(200),CNBR(3,200),RNBR(200)
      LOGICAL SNBR(200),MNBR(200)
C
C     ----- ARRAYS FOR ALL ATOMS ----
C
C DIMENSION THESE ARRAYS 1 MORE IN CASE INPUT FILE IS TOO LONG
C
C     ----- CIRCLE AND SPHERE ARRAYS ----
C
C
C TODO LO DE ARRIBA CREO QUE SON CHORRADAS VARIAS DE DEFINICIONES
C
C
C
C
C     DIMENSION WATER(3,500)
C     DIMENSION CON(3,500)
C     DIMENSION CIRCLE(3,100)
C IATOM, JATOM AND KATOM COORDINATES
C
      DIMENSION CI(3), CJ(3), CK(3) ,IELDAT(56), TEMP0(3)
C
C     ----- GEOMETRIC CONSTRUCTION VECTORS ----
C
      DIMENSION UIJ(3),PIJ(3),CCK(3)
      DIMENSION BASE(3),ALT(3),BASE2(3),ALT2(3,2),RALT(3,2)
      DIMENSION CW(3,2),WI(3),WJ(3),WK(3)
      DIMENSION ARC1(3,50),ARCR(3),ARCA(50)
      DIMENSION VECTOR(3)
C
C     ----- ROTATION MATRICES ----
C
      DIMENSION G(3,3),H(3,3),GHGT(3,3),POW(3,3)
C
C     ----- REENTRANT PROBE RECORD ----
C
      DIMENSION TORUS(100),N1(100),N2(100),N3(100)
      LOGICAL YON(100)
C
C     ----- LOGICAL VARIABLES ----
C
      LOGICAL INT,BOTH,PAIR(2),AYON(50),SI,SJ,SK,ANYON
C
C     ----- ORSR FOR NON-SYMMETRY-RELATED PROBES ----
C
      DIMENSION YONWAT(3,1250),YONALT(3,1250)
      DIMENSION VICWAT(3,3750),VICALT(3,3750)
      CHARACTER*4 IELDAT,MARKER, MARKSS, MYNAM,NAMATM
C
C     ----- THE INPUT DATA ARE NO LONGER NEEDED WHEN ORSR IS BEGUN ----
C
      EQUIVALENCE (CO(1,1),YONWAT),(CO(1,1251),YONALT)
      EQUIVALENCE (CO(1,2501),VICWAT),(CO(1,6251),VICALT)
      EQUIVALENCE(ISUR,IFILES(3))
C
C     ----- LOGICAL FUNCTIONS ----
C
      LOGICAL COLLI1
C
C     ----- DATA FOR VANDER VALL RADII ----
C
C     DATA VANDER/1.20,1.20,1.37,1.45,1.45,1.50,1.50,1.40,1.35,1.30
C    *           ,1.57,1.36,1.24,1.17,1.80,1.75,1.70,13*0/
      DATA MARKER/'A   '/,MARKSS/'SS0 '/,MYNAM/'UC '/
C
      DATA IELDAT/'  BQ','  H ','  HE','  LI','  BE','  B ',
     1            '  C ','  N ','  O ','  F ','  NE','  NA',
     2            '  MG','  AL','  SI','  P ','  S ','  CL',
     3            '  AR','  K ','  CA','  SC','  TI','  V ',
     4            '  CR','  MN','  FE','  CO','  NI','  CU',
     5            '  ZN','  GA','  GE','  AS','  SE','  BR',
     6            '  KR','  RB','  SR','   Y','  ZR','  NB',
     7            '  MO','  TC','  RU','  RH','  PD','  AG',
     8            '  CD','  IN','  SN','  SB','  TE','   I',
     9            '   X','  CS'/
C
      BOHR=FPC(IFPC,3)
      VANDER(1)=1.20
      VANDER(2)=1.20
      VANDER(3)=1.37
      VANDER(4)=1.45
      VANDER(5)=1.45
      VANDER(6)=1.50
      VANDER(7)=1.50
      VANDER(8)=1.40
      VANDER(9)=1.35
      VANDER(10)=1.30
      VANDER(11)=1.57
      VANDER(12)=1.36
      VANDER(13)=1.24
      VANDER(14)=1.17
      VANDER(15)=1.80
      VANDER(16)=1.75
      VANDER(17)=1.70
      VANDER(18)=0.00
      VANDER(19)=0.00
      VANDER(20)=0.00
      VANDER(21)=0.00
      VANDER(22)=0.00
      VANDER(23)=0.00
      VANDER(24)=0.00
      VANDER(25)=0.00
      VANDER(26)=0.00
      VANDER(27)=0.00
      VANDER(28)=0.00
      VANDER(29)=0.00
      VANDER(30)=0.00
   10 FORMAT(A3,I5,1X,A3,3F9.3,1X,A3,F7.3)
C1010 FORMAT(I3,9X,A5,6X,3F12.4)
   20 FORMAT(A5,6X,3F12.4)
      I=INDEX(JOBNAM,' ')-1
      OPEN(UNIT=ISUR,FILE=JOBNAM(:I)//'.sur',STATUS='UNKNOWN')
      REWIND ISUR
C
C     ----- BRANCH TO THE PROPER GENERATION ----
C
C     ----- ONLY VANDER VAAL TYPE SURFACE IS GENERATED ----
C
      RW =0.0
      AUTOAN = BOHR
      NATOM =NATOMS
      DEN = DENS
      DO 30 I=1,NATOM
         IPOINT =IAN(I)
         RAD(I) =VANDER(IPOINT)*SCALE
         IAS(I) =2
         DO 30 J=1,3
            DUMM = C(I,J)*AUTOAN
            CO(J,I) = DUMM
   30 CONTINUE
   40 CONTINUE
C     IF (RW .EQ. 0.0) GO TO 200
C
C
C     ----- SET UP PROBE SPHERE AND CIRCLE ----
C
C     NWATER = (4 * 3.14159 * RW ** 2) * DEN
C     IF (NWATER .LT. 1) NWATER = 1
C     IF (NWATER .GT. 500) NWATER = 500
C     CALL GENUNT(WATER,NWATER)
C     NCIRC = (2 * 3.14159 * RW) * SQRT(DEN)
C     IF (NCIRC .LT. 1) NCIRC = 1
C     IF (NCIRC .GT. 100) NCIRC = 100
C     DO 190 I = 1, NCIRC
C     FI = (2 * 3.14159 * (I-1))/NCIRC
C     CIRCLE(1,I) = RW * COS(FI)
C     CIRCLE(2,I) = RW * SIN(FI)
C     CIRCLE(3,I) = 0.0
   50 CONTINUE
C
C     ----- OPEN BEFORE FILE FOR WRITING ----
C
C     OPEN(3,FILE='BEFORE',STATUS='UNKNOWN')
C     REWIND(3)
C
C     ---- SKIP TO HERE IF NO REENTRANT SURFACE WILL BE CALCULATED ---
C
   60 CONTINUE
C
C     ----- OPEN CONTACT FILE FOR WRITING ----
C
C
C     ----- OPEN COORDINATE FILE FOR POTENTIAL EVALUATION ----
C
C
C     ----- BIG LOOP FOR EACH ATOM ----
C
      DO 520 IATOM = 1, NATOM
         IF (IAS(IATOM) .EQ. 0) GO TO 520
C
C     ----- TRANSFER VALUES FROM LARGE ARRAYS TO IATOM VARIABLES ----
C
         NAMATM =IELDAT(IAN(IATOM)+1)
         RI = RAD(IATOM)
         SI = IAS(IATOM) .EQ. 2
         DO 70 K = 1,3
            CI(K) = CO(K,IATOM)
   70    CONTINUE
C
C     ----- GATHER THE NEIGHBORING ATOMS OF IATOM ----
C
         NNBR = 0
         DO 90 JATOM = 1, NATOM
            IF (IATOM .EQ. JATOM .OR. IAS(JATOM) .EQ. 0) GO TO 90
            D2 = DIST2(CI,CO(1,JATOM))
            IF (D2 .GE. (2*RW+RI+RAD(JATOM)) ** 2) GO TO 90
C
C     ----- WE HAVE A NEW NEIGHBOR ----
C     ---- TRANSFER ATOM COORDINATES, RADIUS AND SURFACE REQUEST NUMBER
C
            NNBR = NNBR + 1
            IF (NNBR .GT. 200) CALL ERROR(210,NNBR,0.0d0)
            INBR(NNBR) = JATOM
            DO 80 K = 1,3
               CNBR(K,NNBR) = CO(K,JATOM)
   80       CONTINUE
            RNBR(NNBR) = RAD(JATOM)
            SNBR(NNBR) = IAS(JATOM) .EQ. 2
   90    CONTINUE
C
C     ----- NO REENTRANT SURFACE WILL BE CALCULATED IF WE ARE
C     CALCULATING THE VAN DER WAALS SURFACE
C     INSTEAD OF THE MOLECULAR SURFACE ----
C
         IF (RW .EQ. 0.0) GO TO 460
C
C     ----- MEDIUM LOOP FOR EACH NEIGHBOR OF IATOM ----
C
         DO 450 JNBR = 1,NNBR
            JATOM = INBR(JNBR)
C
C     ----- EACH PAIR OF ATOMS IS CONSIDERED ONLY ONCE ----
C
            IF (JATOM .LE. IATOM) GO TO 450
C
C     ----- TRANFER FROM NEIGHBOR ARRAY TO JATOM VARIABLES ----
C
            RJ = RNBR(JNBR)
            SJ = SNBR(JNBR)
            DO 100 K = 1,3
               CJ(K) = CNBR(K,JNBR)
  100       CONTINUE
C
C     ----- CALCULATE THE CIRCLE-CIRCLE INTERSECTION
C     OF THE EXPANDED SPHERES OF THE TWO ATOMS ----
C
            DO 110 K = 1,3
               UIJ(K) = CJ(K) - CI(K)
  110       CONTINUE
            CALL VNORM(UIJ,UIJ)
            CALL VPERP(UIJ,PIJ)
C
C     ----- CALL CIRCLE-CIRCLE INTERSECTION SUBROUTINE ----
C
            CALL CCI(CI,CJ,RI+RW,RJ+RW,PIJ,BASE,ALT,INT)
C
C     ----- SKIP TO BOTTOM OF MIDDLE LOOP IF NO INTERSECTION ----
C
            IF (.NOT. INT) GO TO 450
            HEIGHT = ANORM(ALT)
C
C      FOR BOTH SADDLE-SHAPED AND CONCAVE REENTRANT SURFACE
C     WE ARE WORKING WITH A PLANE PASSING THROUGH THE CIRCLE
C     OF INTERSECTION OF THE EXPANDED SPHERES OF IATOM AND JATOM
C     AND ALSO WITH A LINE PERPENDICULAR TO THIS PLANE
C     PASSING THROUGH THE CENTERS OF IATOM AND JATOM
C     THE POINT WHERE THE LINE AND PLANE INTERSECT IS CALLED BASE
C     ALT IS A VECTOR FROM THE BASE TO THE CENTER OF A PROBE SPHERE
C     WHICH WOULD SIMULTANEOUSLY TOUCH IATOM AND JATOM
C
C     ----- CONCAVE REENTRANT SURFACE ----
C     ---- GATHER MUTUAL NEIGHBORS OF IATOM AND JATOM ---
C
            DO 120 KNBR = 1, NNBR
               D2 = DIST2(CJ,CNBR(1,KNBR))
               MNBR(KNBR) = D2 .LT. (2*RW+RJ+RNBR(KNBR))**2
     1.AND. KNBR .NE. JNBR
  120       CONTINUE
C
C     ---- SMALL LOOP FOR EACH MUTUAL NEIGHBOR OF IATOM AND JATOM ----
C
            DO 280 KNBR = 1,NNBR
               IF (.NOT. MNBR(KNBR)) GO TO 280
               KATOM = INBR(KNBR)
               IF (KATOM .LE. JATOM) GO TO 280
               SK = SNBR(KNBR)
               IF (.NOT. (SI .OR. SJ .OR. SK)) GO TO 280
C
C     ---- TRANFER FROM NEIGHBOR ARRAY TO KATOM VARIABLES ----
C
               RK = RNBR(KNBR)
               DO 130 K = 1,3
                  CK(K) = CNBR(K,KNBR)
  130          CONTINUE
C
C     GEOMETRIC CALCULATIONS FOR PLACING A PROBE NEXT TO THREE ATOMS
C     WE ARE WORKING WITH A PLANE PASSING THROUGH THE THREE ATOMS
C     AND ALSO WITH A LINE PERPENDICULAR TO THIS PLANE
C     PASSING THROUGH THE CENTER OF THE PROBE SPHERE
C     THE POINT WHERE THE LINE AND PLANE INTERSECT IS CALLED BASE2
C     ALT2 IS A PAIR OF VECTORS FROM THE BASE TO THE CENTER OF THE
C     PROBE SPHERES WHICH WOULD SIMULTANEOUSLY TOUCH THE THREE ATOMS
C
C     ---- PROJECTION OF VECTOR FROM BASE TO KATOM CENTER ONTO AXIS ---
C
C
               PBK = UIJ(1) * (CK(1)-BASE(1)) + UIJ(2) * (CK(2)-BASE(2))
     1 +UIJ(3) * (CK(3)-BASE(3))
C
C     ----- RADIUS OF CIRCLE OF INTERSECTION OF EXPANDEDED KATOM
C     WITH PLANE ----
C
               RCK = (RK+RW) ** 2 - PBK ** 2
               IF (RCK .LE. 0.0) GO TO 280
               RCK = SQRT(RCK)
               DO 140 K = 1,3
                  CCK(K) = CK(K) - PBK * UIJ(K)
  140          CONTINUE
C
C     ----- CALL CIRCLE-CIRCLE INTERSECTION SUBROUTINE ----
C
               CALL CCI(CCK,BASE,RCK,HEIGHT,UIJ,BASE2,ALT2(1,1),INT)
               IF (.NOT. INT) GO TO 280
C
C     ----- SKIP TO BOTTOM OF INNER LOOP IF NO INTERSECTION ----
C
C     ---- PROBE PLACEMENT AT ENDS OF ALTITUDE VECTORS ----
C
               DO 150 K = 1,3
                  ALT2(K,2) = - ALT2(K,1)
  150          CONTINUE
               DO 170 IW = 1,2
                  DO 160 K = 1,3
                     CW(K,IW) = BASE2(K) + ALT2(K,IW)
  160             CONTINUE
C
C     ----- COLLISION CHECK WITH MUTUAL NEIGHBORS ----
C
                  PAIR(IW) = .NOT. COLLI1(CW(1,IW),RW,CNBR,RNBR,MNBR,NNB
     1R,3,JNBR,KNBR)
  170          CONTINUE
C
C     ----- IF NEITHER PROBE POSITION IS ALLOWED, SKIP TO BOTTOM
C     OF INNER LOOP ----
C
               IF (.NOT. PAIR(1) .AND. .NOT. PAIR(2)) GO TO 280
               BOTH = PAIR(1) .AND. PAIR(2)
C
C     ----- GENERATE SURFACE POINTS ----
C
               AREA = (4 * 3.14159 * RW ** 2)/NWATER
               DO 270 IW = 1,2
                  IF (.NOT. PAIR(IW)) GO TO 270
C
C     ----- CALCULATE VECTORS DEFINING SPHERICAL TRIANGLE ----
C
                  DO 180 K = 1,3
                     WI(K) = CI(K) - CW(K,IW)
                     WJ(K) = CJ(K) - CW(K,IW)
                     WK(K) = CK(K) - CW(K,IW)
  180             CONTINUE
                  SIGN = DET(WI,WJ,WK)
                  NP = 1
C
C     ----- GATHER POINTS ON PROBE SPHERE LYING WITHIN TRIANGLE ----
C
                  DO 230 I = 1,NWATER
                     IF (SIGN * DET(WATER(1,I),WJ,WK) .LT. 0.0) GO TO 23
     10
                     IF (SIGN * DET(WI,WATER(1,I),WK) .LT. 0.0) GO TO 23
     10
                     IF (SIGN * DET(WI,WJ,WATER(1,I)) .LT. 0.0) GO TO 23
     10
                     IF (NP .GT. 100) CALL ERROR(220,NP,0.0d0)
C
C     ----- CALCULATED WHETHER POINT IS ON YON SIDE OF PLANE ----
C
                     YON(NP) = ALT2(1,IW) * (ALT2(1,IW) + WATER(1,I)) +
     1ALT2(2,IW) * (ALT2(2,IW) + WATER(2,I)) +
     2ALT2(3,IW) * (ALT2(3,IW) + WATER(3,I)) .LT. 0.0
C
C     ----- OVERLAPPING REENTRANT SURFACE REMOVAL
C     FOR SYMMETRY-RELATED PROBE POSITIONS ----
C
                     IF (YON(NP) .AND. BOTH) GO TO 230
                     DO 190 K = 1,3
                        SCO(K,NP) = CW(K,IW) + WATER(K,I) * RW
  190                CONTINUE
C
C     ----- FIND THE CLOSEST ATOM ----
C
                     DI = DIST(SCO(1,NP),CI) - RI
                     DJ = DIST(SCO(1,NP),CJ) - RJ
                     DK = DIST(SCO(1,NP),CK) - RK
                     IF (DI .LE. DJ .AND. DI .LE. DK) GO TO 200
                     IF (DJ .LE. DI .AND. DJ .LE. DK) GO TO 210
                     IF (.NOT. SK) GO TO 230
                     N1(NP) = KATOM
                     N2(NP) = IATOM
                     N3(NP) = JATOM
                     GO TO 220
  200                CONTINUE
                     IF (.NOT. SI) GO TO 230
                     N1(NP) = IATOM
                     N2(NP) = JATOM
                     N3(NP) = KATOM
                     GO TO 220
  210                CONTINUE
                     IF (.NOT. SJ) GO TO 230
                     N1(NP) = JATOM
                     N2(NP) = IATOM
                     N3(NP) = KATOM
  220                CONTINUE
                     NP = NP + 1
C
C     ----- END OF NWATER LOOP ----
C
  230             CONTINUE
                  NP = NP - 1
                  IF (NP .LE. 0) GO TO 270
C
C     ----- WRITE THE SHAPE, NUMBER OF POINTS, PROBE POSITION AND
C     THE VECTOR FROM THE BASE TO THE PROBE CENTER ----
C
                  WRITE(ISUR,240)3,NP,(CW(K,IW),K=1,3),
     1(ALT2(K,IW),K=1,3)
  240             FORMAT(2I5,6F9.3)
C
C     ----- WRITE SURFACE POINTS FOR THIS PROBE POSITION ----
C
                  DO 260 I = 1,NP
                     WRITE(ISUR,250) N1(I),N2(I),N3(I),(SCO(K,I),K=1,3),AR
     1EA,YON(I)
  250                FORMAT(3I5,3F9.3,F7.3,L5)
  260             CONTINUE
C
C     ----- END OF IW LOOP ----
C
  270          CONTINUE
C
C     ----- END OF CONCAVE REENTRANT LOOP ----
  280       CONTINUE
C
C     ----- SADDLE-SHAPED REENTRANT ----
C
            IF (.NOT. (SI .OR. SJ)) GO TO 450
C
C     ----- CALCULATE NUMBER OF ROTATIONS OF PROBE PAIR,
C     ROTATION ANGLE AND ROTATION MATRIX ----
C
            RIJ = (RI + RJ) / 2
            AVH = 0.5 * ABS(HEIGHT-RW) + 0.5 * (HEIGHT * (RIJ/(RIJ+RW)))
            NROT = SQRT(DEN) * 3.14159 * AVH
            IF (NROT .LT. 1) NROT = 1
            ANGLE = 3.14159/NROT
            CALL IMATX(H)
            H(2,2) = COS(ANGLE)
            H(3,3) = H(2,2)
            H(3,2) = SIN(ANGLE)
            H(2,3) = - H(3,2)
C
C     ----- CALCULATE MATRIX TO ROTATE X-AXIS ONTO IATOM-JATOM AXIS ---
C
            DO 290 K = 1,3
               G(K,1) = UIJ(K)
               G(K,2) = ALT(K)/HEIGHT
  290       CONTINUE
            CALL CROSS(G(1,1),G(1,2),G(1,3))
C
C     ---- MAKE THE PROBE PAIR ROTATION MATRIX BE ABOUT THE
C     IATOM-JATOM AXIS ----
C
            CALL CONJ(H,G,GHGT)
C
C     ----- ARC GENERATION ----
C
            DO 300 K = 1,3
               CW(K,1) = BASE(K) + ALT(K)
               WI(K) = CI(K) - CW(K,1)
               WJ(K) = CJ(K) - CW(K,1)
  300       CONTINUE
C
C     ROTATE CIRCLE ONTO IATOM-JATOM-WATER PLANE
C     AND SELECT POINTS BETWEEN WATER-IATOM AND
C     WATER-JATOM VECTOR TO FORM THE ARC
C
            NARC = 1
            DO 330 I = 1,NCIRC
               IF (NARC .GT. 50) CALL ERROR(440,NARC,0.0d0)
               CALL MULTV(CIRCLE(1,I),G,ARC1(1,NARC))
               CALL CROSS(WI,ARC1(1,NARC),VECTOR)
               IF (DOT1(G(1,3),VECTOR) .LT. 0.0) GO TO 330
               CALL CROSS(ARC1(1,NARC),WJ,VECTOR)
               IF (DOT1(G(1,3),VECTOR) .LT. 0.0) GO TO 330
C
C     MAKE ARC POINT VECTORS ORIGINATE WITH BASE POINT
C     RATHER THAN PROBE CENTER BECAUSE THEY WILL BE
C     ROTATED AROUND THE IATOM-JATOM AXIS WHICH PASSES
C     THROUGH THE BASE POINT
C
               DO 310 K = 1,3
                  ARC(K,NARC,1) = ARC1(K,NARC) + ALT(K)
  310          CONTINUE
C
C     ----- INVERT ARC THROUGH LINE OF SYMMETRY ----
C
               P = DOT1(UIJ,ARC(1,NARC,1))
               DO 320 K = 1,3
                  ARC(K,NARC,2) = - ARC(K,NARC,1) + 2 * P * UIJ(K)
  320          CONTINUE
C
C     CHECK WHETHER THE ARC POINT CROSSES THE IATOM-JATOM AXIS
C     AND CALCULATE THE AREA ASSOCIATED WITH THE POINT
C
               RA = DOT1(ALT,ARC(1,NARC,1))
               AYON(NARC) = RA .LT. 0.0
               RA = ABS(RA/HEIGHT)
               ARCA(NARC) = (2*3.14159**2*RW*RA)/(NCIRC*NROT)
               NARC = NARC + 1
  330       CONTINUE
            NARC = NARC - 1
C
C     ----- INITIALIZE POWER MATRIX TO IDENTITY ----
C
            CALL IMATX(POW)
C
C     ----- ROTATE THE PROBE PAIR AROUND THE PAIR OF ATOMS ----
C
            DO 440 IROT = 1,NROT
               CALL MULTV(ALT,POW,RALT(1,1))
               DO 340 K = 1,3
                  RALT(K,2) = - RALT(K,1)
  340          CONTINUE
               DO 360 IW = 1,2
                  DO 350 K = 1,3
                     CW(K,IW) = BASE(K) + RALT(K,IW)
  350             CONTINUE
C
C     ----- CHECK FOR COLLISIONS WITH NEIGHBORING ATOMS ----
C
                  PAIR(IW) = .NOT. COLLI1(CW(1,IW),RW,CNBR,RNBR,MNBR,NNB
     1R,2,JNBR,KNBR)
  360          CONTINUE
C
C     ---- NO SURFACE GENERATION IF NEITHER PROBE POSITION IS ALLOWED
C
               IF (.NOT. PAIR(1) .AND. .NOT. PAIR(2)) GO TO 430
               BOTH = PAIR(1) .AND. PAIR(2)
C
C     ----- SURFACE GENERATION ----
C
               DO 420 IW = 1,2
                  IF (.NOT. PAIR(IW)) GO TO 420
                  NP = 1
C
C     ---- THE SADDLE-SHAPED REENTRANT SURFACE POINTS COME FROM THE ARC
C
                  DO 400 I = 1,NARC
C
C     ----- OVERLAPPING REENTRANT SURFACE REMOVAL
C     FOR SYMMETRY-RELATED PROBE POSITIONS ----
C
                     IF (BOTH .AND. AYON(I)) GO TO 400
                     IF (NP .GT. 100)
     1CALL ERROR(480,NP,0.0d0)
C
C     ---- ROTATE THE ARC FROM THE XY PLANE ONTO THE
C     IATOM-JATOM-WATER PLANE ----
C
                     CALL MULTV(ARC(1,I,IW),POW,ARCR)
C
C     ----- MAKE COORDINATES RELATIVE TO ORIGIN ----
C
                     DO 370 K = 1,3
                        SCO(K,NP) = BASE(K) + ARCR(K)
  370                CONTINUE
C
C     ----- FIND THE CLOSEST ATOM ----
C
                     DI = DIST(SCO(1,NP),CI) - RI
                     DJ = DIST(SCO(1,NP),CJ) - RJ
                     IF (DI .LE. DJ) GO TO 380
                     IF (.NOT. SJ) GO TO 400
                     N1(NP) = JATOM
                     N2(NP) = IATOM
                     GO TO 390
  380                CONTINUE
                     IF (.NOT. SI) GO TO 400
                     N1(NP) = IATOM
                     N2(NP) = JATOM
  390                CONTINUE
C
C     ----- WE'VE GOT A SURFACE POINT ----
C
                     YON(NP) = AYON(I)
                     TORUS(NP) = ARCA(I)
                     NP = NP + 1
C
  400             CONTINUE
                  NP = NP - 1
                  IF (NP .LE. 0) GO TO 420
C
C     ----- WRITE THE SHAPE,NUMBER OF POINTS,PROBE POSITION AND
C     THE VECTOR FROM THE BASE TO THE PROBE CENTER ----
C
                  WRITE(ISUR,240) 2,NP,(CW(K,IW),K=1,3),
     1 (RALT(K,IW),K=1,3)
C
C     ----- WRITE SURFACE POINTS FOR THIS PROBE POSITION ----
C
                  DO 410 I = 1,NP
                     WRITE(ISUR,250) N1(I),N2(I),0,(SCO(K,I),K=1,3),
     1TORUS(I),YON(I)
C
  410             CONTINUE
C
  420          CONTINUE
  430          CONTINUE
C
C     ----- CALCULATE NEW POWER MATRIX ----
C
               CALL CAT(POW,GHGT)
C
  440       CONTINUE
  450    CONTINUE
C
C     ----- SKIP TO HERE IF VAN DER WAALS SURFACE CALCULATION ----
C
  460    CONTINUE
C
C     ---- CONTACT SURFACE ----
C
         IF (.NOT. SI) GO TO 520
         NCON = (4 * 3.14159 * RI ** 2) * DEN
         IF (NCON .GT. 500) NCON = 500
C
C     ----- THIS CALL MAY DECREASE NCON SOMEWHAT ----
C
         CALL GENUNT(CON,NCON)
         AREA = (4 * 3.14159 * RI ** 2) / NCON
C
C     ----- CONTACT PROBE PLACEMENT LOOP ----
C
         DO 510 I = 1,NCON
            DO 470 K = 1,3
               CW(K,1) = CI(K) + (RI + RW) * CON(K,I)
  470       CONTINUE
C
C     ---- CHECK FOR COLLISION WITH NEIGHBORING ATOMS ----
C
            IF (COLLI1(CW(1,1),RW,CNBR,RNBR,MNBR,NNBR,1,
     1JNBR,KNBR)) GO TO 510
  480       FORMAT(3I5,I2,3F9.3,4F7.3)
            DO 490 KK=1,3
               TEMP0(KK) =CI(KK)+RI*CON(KK,I)
  490       CONTINUE
            IT345=IT345+1
            DO 500 K=1,3
               VWXYZ(K,IT345)=TEMP0(K)
  500       CONTINUE
  510    CONTINUE
  520 CONTINUE
C
C     ----- IF VAN DER WAALS SURFACE WE ARE FINISHED ----
C
      IF (RW .EQ. 0.0) RETURN
C     CLOSE(3)
C
C     ----- SKIP TO HERE IF DOING ORSR ONLY ----
C
  530 CONTINUE
C
C     ----- OVERLAPPING REENTRANT SURFACE REMOVAL
C     FOR NON-SYMMETRY-RELATED PROBES ----
C
      DW = 2 * RW
      DW2 = DW ** 2
      RW2 = RW ** 2
      NYW = 1
C     OPEN(3,FILE='BEFORE',STATUS='OLD')
      REWIND(3)
C
      DO 550 I = 1,10000
         IF (NYW .GT. 1250) CALL ERROR(720,NYW,0.0d0)
         READ (3,240,END=560) ISHAPE,NP,(YONWAT(K,NYW),K=1,3),
     1(YONALT(K,NYW),K=1,3)
C
C     ----- LOOK FOR YON POINTS ON THIS PROBE ----
C
         ANYON = .FALSE.
         DO 540 J = 1,NP
            READ (3,250) N1(1),N2(1),N3(1),(SCO(K,1),K=1,3),AREA,YON(1)
            IF (YON(1)) ANYON = .TRUE.
  540    CONTINUE
         IF (.NOT. ANYON) GO TO 550
         IYON(NYW) = I
         NYW = NYW + 1
  550 CONTINUE
C
C     ----- GO HERE ON END OF FILE ON BEFORE FILE ----
C
  560 CONTINUE
      NYW = NYW - 1
      NVW = 1
      IF (NYW .LE. 0) GO TO 610
      REWIND(3)
      DO 600 I = 1,10000
         IF (NVW .GT. 3750) CALL ERROR(760,NYW,0.0d0)
         READ (3,240,END=610) ISHAPE,NP,(VICWAT(K,NVW),K=1,3),
     1(VICALT(K,NVW),K=1,3)
         DO 570 J = 1,NP
            READ (3,250) N1(1),N2(1),N3(1),(SCO(K,1),K=1,3),AREA,YON(1)
  570    CONTINUE
C
C     ----- CHECK IF THIS IS A YON WATER ----
C
         DO 580 J = 1,NYW
            IF (IYON(J) .EQ. I) GO TO 600
  580    CONTINUE
C
C     ----- LOOK FOR OVERLAP WITH ANY WATER WITH YON SURFACE POINTS ---
C
         DO 590 J = 1,NYW
            X = ABS(YONWAT(1,J) - VICWAT(1,NVW))
            IF (X .GE. DW) GO TO 590
            Y = ABS(YONWAT(2,J) - VICWAT(2,NVW))
            IF (Y .GE. DW) GO TO 590
            Z = ABS(YONWAT(3,J) - VICWAT(3,NVW))
            IF (Z .GE. DW) GO TO 590
            D2 = X ** 2 + Y ** 2 + Z ** 2
            IF (D2 .GE. DW2) GO TO 590
            IF (DOT1(YONALT(1,J),VICALT(1,NVW)) .GE. 0.0) GO TO 590
            IVIC(NVW) = I
            NVW = NVW + 1
C
C     ----- ONE OVERLAP MAKES THIS WATER A VICTIM
C     WE DON'T NEED TO CHECK ANY MORE ----
C
            GO TO 600
  590    CONTINUE
C
C     ---- SKIP TO HERE IF FINISHED WITH HUNT FOR OVERLAPPING WATERS ---
C
  600 CONTINUE
C
C     ---- SKIP TO HERE IF THERE ARE NO YON WATERS AND HENCE NO VICTIMS
C
  610 CONTINUE
      NVW = NVW - 1
C
C     OPEN(40,FILE='REENTRA',STATUS='UNKNOWN')
      REWIND(4)
C
      REWIND(3)
      DO 740 I = 1,10000
         READ (3,240,END=750) ISHAPE,NP,(CW(K,1),K=1,3),(ALT(K),K=1,3)
C
C     ---- NO POINTS CAN BE EATEN IF THIS WATER IS NEITHER YON
C     NOR A VICTIM ----
C
         NEAT = 0
C
C     ----- DETERMINE IF PROBE IS A YON OR VICTIM WATER
C     BY SEARCHING OUR LISTS OF YON AND VICTIM WATERS ----
C
         IF (NYW .LE. 0) GO TO 690
         IPT = 0
         DO 620 J = 1,NYW
            IF (IYON(J) .NE. I) GO TO 620
C
C     ---- WE'VE GOT A YON WATER HERE ----
C
            IPT = 2
            GO TO 640
  620    CONTINUE
         IF (NVW .LE. 0) GO TO 690
         DO 630 J = 1,NVW
            IF (IVIC(J) .NE. I) GO TO 630
C
C     ---- WE'VE GOT A VICTIM ----
C
            IPT = 1
            GO TO 640
  630    CONTINUE
  640    CONTINUE
C
         IF (IPT .LE. 0) GO TO 690
C
C     ---- CHECK THIS VICTIM OR YON PROBE AGAINST ALL YON PROBES ---
C
         DO 660 J = 1,NYW
            IF (DIST2(CW(1,1),YONWAT(1,J)) .GE. DW2) GO TO 660
            IF (DOT1(ALT,YONALT(1,J)) .GE. 0.0) GO TO 660
C
C     ---- THIS YON WATER COULD EAT SOME OF THE PROBE'S POINTS ----
C
            NEAT = NEAT + 1
            IF (NEAT .GT. 100) CALL ERROR(830,NEAT,0.0d0)
            DO 650 K = 1,3
               EAT(K,NEAT) = YONWAT(K,J)
  650       CONTINUE
  660    CONTINUE
C
C     ----- ONLY YON WATERS CAN HAVE THEIR POINTS EATEN BY VICTIMS ---
C
         IF (IPT .LE. 1) GO TO 690
C
C     ----- CHECK THIS YON PROBE AGAINST ALL VICTIM PROBES ----
C
         DO 680 J = 1,NVW
            IF (DIST2(CW(1,1),VICWAT(1,J)) .GE. DW2) GO TO 680
            IF (DOT1(ALT,VICALT(1,J)) .GE. 0.0) GO TO 680
C
C     ---- THIS VICTIM WATER COULD EAT SOME OF THE PROBE'S POINTS ---
C
            NEAT = NEAT + 1
            IF (NEAT .GT. 100) CALL ERROR(850,NEAT,0.0d0)
            DO 670 K = 1,3
               EAT(K,NEAT) = VICWAT(K,J)
  670       CONTINUE
  680    CONTINUE
C
C     ---- SKIP TO HERE IF VICTIM OR BOTH PROBE OVERLAP CHECKS OMITTED
C
  690    CONTINUE
C
C     ---- READ THE SURFACE POINT BELONGING TO THE PROBE ----
C
         DO 730 J = 1,NP
            READ (3,250) N1(1),N2(1),N3(1),(SCO(K,1),K=1,3),AREA,YON(1)
            IF (NEAT .LE. 0) GO TO 710
C
C     ---- CHECK SURFACE POINT AGAINST ALL EATERS OF THIS PROBE ----
C
            DO 700 K = 1,NEAT
               IF (DIST2(EAT(1,K),SCO(1,1)) .LT. RW2) GO TO 730
  700       CONTINUE
C
C     ---- SKIP TO HERE IF NO OVERLAPPING PROBES COULD EAT THIS POINT
C
  710       CONTINUE
            DO 720 K = 1,3
               VECTOR(K) = (CW(K,1) - SCO(K,1))/RW
  720       CONTINUE
            WRITE(40,480) N1(1),N2(1),N3(1),ISHAPE,(SCO(K,1),K=1,3),AREA
     1,(VECTOR(K),K=1,3)
C
  730    CONTINUE
  740 CONTINUE
  750 CONTINUE
C
C     CLOSE(3)
C     CLOSE(4)
      CALL MOPEND
      END
      SUBROUTINE VNORM(A,B)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3),B(3)
      V = ANORM(A)
      DO 10 K = 1,3
         B(K) = A(K) / V
   10 CONTINUE
      RETURN
      END
      SUBROUTINE VPERP(A,B)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION A(3)
      DIMENSION B(3)
      DIMENSION P(3)
      SMALL = 10000.0
      M = 0
      DO 10 K = 1,3
         IF (ABS(A(K)) .GE. SMALL) GO TO 10
         SMALL = ABS(A(K))
         M = K
   10 CONTINUE
      DO 20 K = 1,3
         B(K) = 0.0
         IF (K .EQ. M) B(K) = 1.0
   20 CONTINUE
      DT = A(M) / (A(1)**2 + A(2)**2 + A(3)**2)
      DO 30 K = 1, 3
         P(K) = DT * A(K)
         B(K) = B(K) - P(K)
   30 CONTINUE
      CALL VNORM(B,B)
      RETURN
      END
      BLOCK DATA TOM
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/HERM1E/HR(10),HW(10)
      COMMON/T2W21E/LENT(4),LIND(4),IADR(4),S(4),YCUT(4),T2(1030),
     1 W2(1030)
      DATA HR(   1)/.500000000000000E+00/,HW(   1)/.886226925452800E+00/
      DATA HR(   2)/.275255128608411E+00/,HW(   2)/.804914090005500E+00/
      DATA HR(   3)/.272474487139159E+01/,HW(   3)/.813128354472500E-01/
      DATA HR(   4)/.190163509193489E+00/,HW(   4)/.724629595224400E+00/
      DATA HR(   5)/.178449274854325E+01/,HW(   5)/.157067320322900E+00/
      DATA HR(   6)/.552534374226326E+01/,HW(   6)/.453000990550900E-02/
      DATA HR(   7)/.145303521503317E+00/,HW(   7)/.661147012558200E+00/
      DATA HR(   8)/.133909728812636E+01/,HW(   8)/.207802325814900E+00/
      DATA HR(   9)/.392696350135829E+01/,HW(   9)/.170779830074100E-01/
      DATA HR(  10)/.858863568901203E+01/,HW(  10)/.199604072211400E-03/
      DATA LIND/0,1,3,6/,LENT/4*103/,IADR/1,104,310,619/,YCUT/4*0.96999E
     10/
      DATA T2(   1)/.340356529396388E+00/,W2(   1)/.105425787260118E+01/
      DATA T2(   2)/.336866892496096E+00/,W2(   2)/.102689779637686E+01/
      DATA T2(   3)/.333333333333333E+00/,W2(   3)/.100000000000000E+01/
      DATA T2(   4)/.329755756605947E+00/,W2(   4)/.973564412199074E+00/
      DATA T2(   5)/.326134110223798E+00/,W2(   5)/.947590797960082E+00/
      DATA T2(   6)/.322468388585779E+00/,W2(   6)/.922078755530430E+00/
      DATA T2(   7)/.318758636000759E+00/,W2(   7)/.897027713530460E+00/
      DATA T2(   8)/.315004950251030E+00/,W2(   8)/.872436928182995E+00/
      DATA T2(   9)/.311207486295568E+00/,W2(   9)/.848305480671510E+00/
      DATA T2(  10)/.307366460108990E+00/,W2(  10)/.824632274637857E+00/
      DATA T2(  11)/.303482152650496E+00/,W2(  11)/.801416033830680E+00/
      DATA T2(  12)/.299554913955247E+00/,W2(  12)/.778655299915924E+00/
      DATA T2(  13)/.295585167338620E+00/,W2(  13)/.756348430461019E+00/
      DATA T2(  14)/.291573413701521E+00/,W2(  14)/.734493597104524E+00/
      DATA T2(  15)/.287520235922427E+00/,W2(  15)/.713088783923123E+00/
      DATA T2(  16)/.283426303319098E+00/,W2(  16)/.692131786008038E+00/
      DATA T2(  17)/.279292376159886E+00/,W2(  17)/.671620208262925E+00/
      DATA T2(  18)/.275119310201296E+00/,W2(  18)/.651551464435442E+00/
      DATA T2(  19)/.270908061224931E+00/,W2(  19)/.631922776394594E+00/
      DATA T2(  20)/.266659689543144E+00/,W2(  20)/.612731173665986E+00/
      DATA T2(  21)/.262375364438676E+00/,W2(  21)/.593973493236979E+00/
      DATA T2(  22)/.258056368499263E+00/,W2(  22)/.575646379643618E+00/
      DATA T2(  23)/.253704101803684E+00/,W2(  23)/.557746285351034E+00/
      DATA T2(  24)/.249320085911035E+00/,W2(  24)/.540269471438763E+00/
      DATA T2(  25)/.244905967600128E+00/,W2(  25)/.523212008602160E+00/
      DATA T2(  26)/.240463522301038E+00/,W2(  26)/.506569778480738E+00/
      DATA T2(  27)/.235994657155774E+00/,W2(  27)/.490338475323886E+00/
      DATA T2(  28)/.231501413640185E+00/,W2(  28)/.474513608003987E+00/
      DATA T2(  29)/.226985969674406E+00/,W2(  29)/.459090502386470E+00/
      DATA T2(  30)/.222450641144615E+00/,W2(  30)/.444064304065812E+00/
      DATA T2(  31)/.217897882754780E+00/,W2(  31)/.429429981475917E+00/
      DATA T2(  32)/.213330288123406E+00/,W2(  32)/.415182329382711E+00/
      DATA T2(  33)/.208750589037460E+00/,W2(  33)/.401315972766111E+00/
      DATA T2(  34)/.204161653773589E+00/,W2(  34)/.387825371097864E+00/
      DATA T2(  35)/.199566484395856E+00/,W2(  35)/.374704823021004E+00/
      DATA T2(  36)/.194968212939614E+00/,W2(  36)/.361948471435948E+00/
      DATA T2(  37)/.190370096393081E+00/,W2(  37)/.349550308997434E+00/
      DATA T2(  38)/.185775510391938E+00/,W2(  38)/.337504184025729E+00/
      DATA T2(  39)/.181187941548071E+00/,W2(  39)/.325803806834662E+00/
      DATA T2(  40)/.176610978341680E+00/,W2(  40)/.314442756478165E+00/
      DATA T2(  41)/.172048300516651E+00/,W2(  41)/.303414487916104E+00/
      DATA T2(  42)/.167503666932511E+00/,W2(  42)/.292712339599190E+00/
      DATA T2(  43)/.162980901842716E+00/,W2(  43)/.282329541471746E+00/
      DATA T2(  44)/.158483879588575E+00/,W2(  44)/.272259223390002E+00/
      DATA T2(  45)/.154016507720934E+00/,W2(  45)/.262494423952352E+00/
      DATA T2(  46)/.149582708587826E+00/,W2(  46)/.253028099736682E+00/
      DATA T2(  47)/.145186399455647E+00/,W2(  47)/.243853134938341E+00/
      DATA T2(  48)/.140831471263780E+00/,W2(  48)/.234962351400596E+00/
      DATA T2(  49)/.136521766147863E+00/,W2(  49)/.226348519027388E+00/
      DATA T2(  50)/.132261053904423E+00/,W2(  50)/.218004366565902E+00/
      DATA T2(  51)/.128053007609052E+00/,W2(  51)/.209922592743678E+00/
      DATA T2(  52)/.123901178640719E+00/,W2(  52)/.202095877741857E+00/
      DATA T2(  53)/.119808971405433E+00/,W2(  53)/.194516894982342E+00/
      DATA T2(  54)/.115779618092026E+00/,W2(  54)/.187178323202349E+00/
      DATA T2(  55)/.111816153830185E+00/,W2(  55)/.180072858784734E+00/
      DATA T2(  56)/.107921392654278E+00/,W2(  56)/.173193228306701E+00/
      DATA T2(  57)/.104097904704628E+00/,W2(  57)/.166532201262870E+00/
      DATA T2(  58)/.100347995118615E+00/,W2(  58)/.160082602911294E+00/
      DATA T2(  59)/.966736850756001E-01/,W2(  59)/.153837327182773E+00/
      DATA T2(  60)/.930766954601653E-01/,W2(  60)/.147789349584857E+00/
      DATA T2(  61)/.895584335955835E-01/,W2(  61)/.141931740022367E+00/
      DATA T2(  62)/.861199834720750E-01/,W2(  62)/.136257675446262E+00/
      DATA T2(  63)/.827620998506241E-01/,W2(  63)/.130760452232545E+00/
      DATA T2(  64)/.794852065617851E-01/,W2(  64)/.125433498183026E+00/
      DATA T2(  65)/.762893992393405E-01/,W2(  65)/.120270384030558E+00/
      DATA T2(  66)/.731744526309407E-01/,W2(  66)/.115264834323538E+00/
      DATA T2(  67)/.701398325129289E-01/,W2(  67)/.110410737558586E+00/
      DATA T2(  68)/.671847121065003E-01/,W2(  68)/.105702155427222E+00/
      DATA T2(  69)/.643079927505321E-01/,W2(  69)/.101133331042900E+00/
      DATA T2(  70)/.615083284376647E-01/,W2(  70)/.966986960196688E-01/
      DATA T2(  71)/.587841536708516E-01/,W2(  71)/.923928762839300E-01/
      DATA T2(  72)/.561337139555247E-01/,W2(  72)/.882106965166978E-01/
      DATA T2(  73)/.535550981169235E-01/,W2(  73)/.841471831460173E-01/
      DATA T2(  74)/.510462715332070E-01/,W2(  74)/.801975658376118E-01/
      DATA T2(  75)/.486051093131227E-01/,W2(  75)/.763572774660682E-01/
      DATA T2(  76)/.462294284320421E-01/,W2(  76)/.726219525878417E-01/
      DATA T2(  77)/.439170178798807E-01/,W2(  77)/.689874244794109E-01/
      DATA T2(  78)/.416656659731728E-01/,W2(  78)/.654497208467106E-01/
      DATA T2(  79)/.394731841406836E-01/,W2(  79)/.620050583526308E-01/
      DATA T2(  80)/.373374267003077E-01/,W2(  80)/.586498361446446E-01/
      DATA T2(  81)/.352563063903231E-01/,W2(  81)/.553806285912343E-01/
      DATA T2(  82)/.332278056790578E-01/,W2(  82)/.521941774508560E-01/
      DATA T2(  83)/.312499841272064E-01/,W2(  83)/.490873836987548E-01/
      DATA T2(  84)/.293209822881369E-01/,W2(  84)/.460572992244769E-01/
      DATA T2(  85)/.274390227784339E-01/,W2(  85)/.431011185876240E-01/
      DATA T2(  86)/.256024092172802E-01/,W2(  86)/.402161709842633E-01/
      DATA T2(  87)/.238095237161702E-01/,W2(  87)/.373999125359084E-01/
      DATA T2(  88)/.220588235124402E-01/,W2(  88)/.346499189722651E-01/
      DATA T2(  89)/.203488372068759E-01/,W2(  89)/.319638787427673E-01/
      DATA T2(  90)/.186781609192821E-01/,W2(  90)/.293395865636829E-01/
      DATA T2(  91)/.170454545454356E-01/,W2(  91)/.267749373885484E-01/
      DATA T2(  92)/.154494382022463E-01/,W2(  92)/.242679207791346E-01/
      DATA T2(  93)/.138888888888889E-01/,W2(  93)/.218166156499291E-01/
      DATA T2(  94)/.123626373626374E-01/,W2(  94)/.194191853587281E-01/
      DATA T2(  95)/.108695652173913E-01/,W2(  95)/.170738731173358E-01/
      DATA T2(  96)/.940860215053764E-02/,W2(  96)/.147789976983391E-01/
      DATA T2(  97)/.797872340425532E-02/,W2(  97)/.125329494159167E-01/
      DATA T2(  98)/.657894736842106E-02/,W2(  98)/.103341863604927E-01/
      DATA T2(  99)/.520833333333334E-02/,W2(  99)/.818123086872343E-02/
      DATA T2( 100)/.386597938144330E-02/,W2( 100)/.607266621183595E-02/
      DATA T2( 101)/.255102040816327E-02/,W2( 101)/.400713348672168E-02/
      DATA T2( 102)/.126262626262627E-02/,W2( 102)/.198332869544811E-02/
      DATA T2( 103)/.000000000000000E+00/,W2( 103)/.000000000000000E+00/
      DATA T2( 104)/.116809100330144E+00/,W2( 104)/.433979403505602E+00/
      DATA T2( 105)/.116202074745553E+00/,W2( 105)/.429645383656600E+00/
      DATA T2( 106)/.115587109997048E+00/,W2( 106)/.425293303010694E+00/
      DATA T2( 107)/.114964063285315E+00/,W2( 107)/.420923292270390E+00/
      DATA T2( 108)/.114332788850161E+00/,W2( 108)/.416535491906746E+00/
      DATA T2( 109)/.113693137915673E+00/,W2( 109)/.412130052508836E+00/
      DATA T2( 110)/.113044958635569E+00/,W2( 110)/.407707135142496E+00/
      DATA T2( 111)/.112388096038859E+00/,W2( 111)/.403266911718401E+00/
      DATA T2( 112)/.111722391976003E+00/,W2( 112)/.398809565369472E+00/
      DATA T2( 113)/.111047685065713E+00/,W2( 113)/.394335290837622E+00/
      DATA T2( 114)/.110363810642622E+00/,W2( 114)/.389844294869801E+00/
      DATA T2( 115)/.109670600706018E+00/,W2( 115)/.385336796623265E+00/
      DATA T2( 116)/.108967883869893E+00/,W2( 116)/.380813028079972E+00/
      DATA T2( 117)/.108255485314563E+00/,W2( 117)/.376273234469964E+00/
      DATA T2( 118)/.107533226740153E+00/,W2( 118)/.371717674703550E+00/
      DATA T2( 119)/.106800926322279E+00/,W2( 119)/.367146621812053E+00/
      DATA T2( 120)/.106058398670263E+00/,W2( 120)/.362560363396858E+00/
      DATA T2( 121)/.105305454788285E+00/,W2( 121)/.357959202086402E+00/
      DATA T2( 122)/.104541902039907E+00/,W2( 122)/.353343456000723E+00/
      DATA T2( 123)/.103767544116434E+00/,W2( 123)/.348713459223093E+00/
      DATA T2( 124)/.102982181009644E+00/,W2( 124)/.344069562278216E+00/
      DATA T2( 125)/.102185608989470E+00/,W2( 125)/.339412132616357E+00/
      DATA T2( 126)/.101377620587272E+00/,W2( 126)/.334741555102727E+00/
      DATA T2( 127)/.100558004585411E+00/,W2( 127)/.330058232511320E+00/
      DATA T2( 128)/.997265460139054E-01/,W2( 128)/.325362586022344E+00/
      DATA T2( 129)/.988830261550547E-01/,W2( 129)/.320655055722249E+00/
      DATA T2( 130)/.980272225569827E-01/,W2( 130)/.315936101105275E+00/
      DATA T2( 131)/.971589090571892E-01/,W2( 131)/.311206201575320E+00/
      DATA T2( 132)/.962778558173058E-01/,W2( 132)/.306465856946821E+00/
      DATA T2( 133)/.953838293703991E-01/,W2( 133)/.301715587943216E+00/
      DATA T2( 134)/.944765926823253E-01/,W2( 134)/.296955936691427E+00/
      DATA T2( 135)/.935559052288243E-01/,W2( 135)/.292187467210712E+00/
      DATA T2( 136)/.926215230902576E-01/,W2( 136)/.287410765894081E+00/
      DATA T2( 137)/.916731990661413E-01/,W2( 137)/.282626441980390E+00/
      DATA T2( 138)/.907106828119164E-01/,W2( 138)/.277835128015102E+00/
      DATA T2( 139)/.897337210007361E-01/,W2( 139)/.273037480297646E+00/
      DATA T2( 140)/.887420575134506E-01/,W2( 140)/.268234179313221E+00/
      DATA T2( 141)/.877354336604371E-01/,W2( 141)/.263425930146885E+00/
      DATA T2( 142)/.867135884394848E-01/,W2( 142)/.258613462877768E+00/
      DATA T2( 143)/.856762588346045E-01/,W2( 143)/.253797532951350E+00/
      DATA T2( 144)/.846231801614288E-01/,W2( 144)/.248978921527879E+00/
      DATA T2( 145)/.835540864658181E-01/,W2( 145)/.244158435805273E+00/
      DATA T2( 146)/.824687109834309E-01/,W2( 146)/.239336909315244E+00/
      DATA T2( 147)/.813667866693965E-01/,W2( 147)/.234515202191922E+00/
      DATA T2( 148)/.802480468088913E-01/,W2( 148)/.229694201413052E+00/
      DATA T2( 149)/.791122257214392E-01/,W2( 149)/.224874821014832E+00/
      DATA T2( 150)/.779590595742018E-01/,W2( 150)/.220058002282883E+00/
      DATA T2( 151)/.767882873224900E-01/,W2( 151)/.215244713923590E+00/
      DATA T2( 152)/.755996517993404E-01/,W2( 152)/.210435952222398E+00/
      DATA T2( 153)/.743929009803724E-01/,W2( 153)/.205632741198604E+00/
      DATA T2( 154)/.731677894554631E-01/,W2( 154)/.200836132769946E+00/
      DATA T2( 155)/.719240801452142E-01/,W2( 155)/.196047206945073E+00/
      DATA T2( 156)/.706615463079764E-01/,W2( 156)/.191267072067886E+00/
      DATA T2( 157)/.693799738925810E-01/,W2( 157)/.186496865145198E+00/
      DATA T2( 158)/.680791643031870E-01/,W2( 158)/.181737752298251E+00/
      DATA T2( 159)/.667589376560728E-01/,W2( 159)/.176990929389891E+00/
      DATA T2( 160)/.654191366240672E-01/,W2( 160)/.172257622892740E+00/
      DATA T2( 161)/.640596309828693E-01/,W2( 161)/.167539091080110E+00/
      DATA T2( 162)/.626803229948832E-01/,W2( 162)/.162836625640690E+00/
      DATA T2( 163)/.612811537903360E-01/,W2( 163)/.158151553840620E+00/
      DATA T2( 164)/.598621109319538E-01/,W2( 164)/.153485241382157E+00/
      DATA T2( 165)/.584232373773691E-01/,W2( 165)/.148839096136335E+00/
      DATA T2( 166)/.569646420809103E-01/,W2( 166)/.144214572956563E+00/
      DATA T2( 167)/.554865125003305E-01/,W2( 167)/.139613179808601E+00/
      DATA T2( 168)/.539891292893709E-01/,W2( 168)/.135036485475780E+00/
      DATA T2( 169)/.524728834561612E-01/,W2( 169)/.130486129110125E+00/
      DATA T2( 170)/.509382962391622E-01/,W2( 170)/.125963831890177E+00/
      DATA T2( 171)/.493860418809438E-01/,W2( 171)/.121471411000063E+00/
      DATA T2( 172)/.478169733444729E-01/,W2( 172)/.117010796041255E+00/
      DATA T2( 173)/.462321507899268E-01/,W2( 173)/.112584047801088E+00/
      DATA T2( 174)/.446328722805845E-01/,W2( 174)/.108193378996568E+00/
      DATA T2( 175)/.430207056805783E-01/,W2( 175)/.103841176150171E+00/
      DATA T2( 176)/.413975200169760E-01/,W2( 176)/.995300210999941E-01/
      DATA T2( 177)/.397655136937506E-01/,W2( 177)/.952627097788015E-01/
      DATA T2( 178)/.381272358942409E-01/,W2( 178)/.910422648309857E-01/
      DATA T2( 179)/.364855963873249E-01/,W2( 179)/.868719374581350E-01/
      DATA T2( 180)/.348438579563525E-01/,W2( 180)/.827551927869849E-01/
      DATA T2( 181)/.332056051219335E-01/,W2( 181)/.786956723783842E-01/
      DATA T2( 182)/.315746831817740E-01/,W2( 182)/.746971277401636E-01/
      DATA T2( 183)/.299551033683642E-01/,W2( 183)/.707633204723517E-01/
      DATA T2( 184)/.283509135826502E-01/,W2( 184)/.668978885061445E-01/
      DATA T2( 185)/.267660398320887E-01/,W2( 185)/.631041839976079E-01/
      DATA T2( 186)/.252041106803146E-01/,W2( 186)/.593850962738752E-01/
      DATA T2( 187)/.236682843027462E-01/,W2( 187)/.557428812243984E-01/
      DATA T2( 188)/.221611028540217E-01/,W2( 188)/.521790240570036E-01/
      DATA T2( 189)/.206843991279411E-01/,W2( 189)/.486941623313340E-01/
      DATA T2( 190)/.192392739540838E-01/,W2( 190)/.452880884130621E-01/
      DATA T2( 191)/.178261494789215E-01/,W2( 191)/.419598351573761E-01/
      DATA T2( 192)/.164448864292567E-01/,W2( 192)/.387078293819390E-01/
      DATA T2( 193)/.150949382853649E-01/,W2( 193)/.355300811131281E-01/
      DATA T2( 194)/.137755082083359E-01/,W2( 194)/.324243696698271E-01/
      DATA T2( 195)/.124856790921216E-01/,W2( 195)/.293883939915083E-01/
      DATA T2( 196)/.112245013529962E-01/,W2( 196)/.264198715400544E-01/
      DATA T2( 197)/.999103987068770E-02/,W2( 197)/.235165891805109E-01/
      DATA T2( 198)/.878439255558430E-02/,W2( 198)/.206764214186365E-01/
      DATA T2( 199)/.760369463179172E-02/,W2( 199)/.178973325186612E-01/
      DATA T2( 200)/.644811794003337E-02/,W2( 200)/.151773731693242E-01/
      DATA T2( 201)/.531686917862402E-02/,W2( 201)/.125146761220744E-01/
      DATA T2( 202)/.420918809974401E-02/,W2( 202)/.990745192997554E-02/
      DATA T2( 203)/.312434580599556E-02/,W2( 203)/.735398493771380E-02/
      DATA T2( 204)/.206164315089503E-02/,W2( 204)/.485262951672272E-02/
      DATA T2( 205)/.102040923630158E-02/,W2( 205)/.240180652847893E-02/
      DATA T2( 206)/.000000000000000E+00/,W2( 206)/.000000000000000E+00/
      DATA T2( 207)/.743821249110112E+00/,W2( 207)/.129115724292794E+00/
      DATA T2( 208)/.742702182797244E+00/,W2( 208)/.125027587123386E+00/
      DATA T2( 209)/.741555747145809E+00/,W2( 209)/.121002993285602E+00/
      DATA T2( 210)/.740380961339279E+00/,W2( 210)/.117042684599691E+00/
      DATA T2( 211)/.739176798897849E+00/,W2( 211)/.113147384433447E+00/
      DATA T2( 212)/.737942185101070E+00/,W2( 212)/.109317796271943E+00/
      DATA T2( 213)/.736675994242492E+00/,W2( 213)/.105554602242687E+00/
      DATA T2( 214)/.735377046704250E+00/,W2( 214)/.101858461596855E+00/
      DATA T2( 215)/.734044105838522E+00/,W2( 215)/.982300091475203E-01/
      DATA T2( 216)/.732675874641865E+00/,W2( 216)/.946698536659962E-01/
      DATA T2( 217)/.731270992207324E+00/,W2( 217)/.911785762377648E-01/
      DATA T2( 218)/.729828029938131E+00/,W2( 218)/.877567285797056E-01/
      DATA T2( 219)/.728345487505530E+00/,W2( 219)/.844048313207128E-01/
      DATA T2( 220)/.726821788532036E+00/,W2( 220)/.811233722481295E-01/
      DATA T2( 221)/.725255275980010E+00/,W2( 221)/.779128045228257E-01/
      DATA T2( 222)/.723644207224004E+00/,W2( 222)/.747735448661626E-01/
      DATA T2( 223)/.721986748783755E+00/,W2( 223)/.717059717225348E-01/
      DATA T2( 224)/.720280970693108E+00/,W2( 224)/.687104234016678E-01/
      DATA T2( 225)/.718524840478417E+00/,W2( 225)/.657871962053571E-01/
      DATA T2( 226)/.716716216718200E+00/,W2( 226)/.629365425438849E-01/
      DATA T2( 227)/.714852842154000E+00/,W2( 227)/.601586690479286E-01/
      DATA T2( 228)/.712932336320481E+00/,W2( 228)/.574537346823859E-01/
      DATA T2( 229)/.710952187660924E+00/,W2( 229)/.548218488691862E-01/
      DATA T2( 230)/.708909745092320E+00/,W2( 230)/.522630696268296E-01/
      DATA T2( 231)/.706802208982448E+00/,W2( 231)/.497774017350983E-01/
      DATA T2( 232)/.704626621499504E+00/,W2( 232)/.473647949341140E-01/
      DATA T2( 233)/.702379856293247E+00/,W2( 233)/.450251421676661E-01/
      DATA T2( 234)/.700058607465230E+00/,W2( 234)/.427582778815058E-01/
      DATA T2( 235)/.697659377784662E+00/,W2( 235)/.405639763880880E-01/
      DATA T2( 236)/.695178466105853E+00/,W2( 236)/.384419503100330E-01/
      DATA T2( 237)/.692611953943294E+00/,W2( 237)/.363918491153764E-01/
      DATA T2( 238)/.689955691161341E+00/,W2( 238)/.344132577584576E-01/
      DATA T2( 239)/.687205280737534E+00/,W2( 239)/.325056954410674E-01/
      DATA T2( 240)/.684356062562038E+00/,W2( 240)/.306686145092080E-01/
      DATA T2( 241)/.681403096241056E+00/,W2( 241)/.289013995015168E-01/
      DATA T2( 242)/.678341142879719E+00/,W2( 242)/.272033663660303E-01/
      DATA T2( 243)/.675164645830592E+00/,W2( 243)/.255737618625303E-01/
      DATA T2( 244)/.671867710408262E+00/,W2( 244)/.240117631681637E-01/
      DATA T2( 245)/.668444082589457E+00/,W2( 245)/.225164777043744E-01/
      DATA T2( 246)/.664887126742840E+00/,W2( 246)/.210869432033783E-01/
      DATA T2( 247)/.661189802464470E+00/,W2( 247)/.197221280324400E-01/
      DATA T2( 248)/.657344640635487E+00/,W2( 248)/.184209317940371E-01/
      DATA T2( 249)/.653343718869927E+00/,W2( 249)/.171821862195959E-01/
      DATA T2( 250)/.649178636585003E+00/,W2( 250)/.160046563738157E-01/
      DATA T2( 251)/.644840490006557E+00/,W2( 251)/.148870421856359E-01/
      DATA T2( 252)/.640319847522050E+00/,W2( 252)/.138279803206036E-01/
      DATA T2( 253)/.635606725916211E+00/,W2( 253)/.128260464077295E-01/
      DATA T2( 254)/.630690568174951E+00/,W2( 254)/.118797576318466E-01/
      DATA T2( 255)/.625560223726321E+00/,W2( 255)/.109875756999653E-01/
      DATA T2( 256)/.620203932209052E+00/,W2( 256)/.101479101871227E-01/
      DATA T2( 257)/.614609312125584E+00/,W2( 257)/.935912226371413E-02/
      DATA T2( 258)/.608763356054272E+00/,W2( 258)/.861952880225381E-02/
      DATA T2( 259)/.602652434470820E+00/,W2( 259)/.792740685690347E-02/
      DATA T2( 260)/.596262310668094E+00/,W2( 260)/.728099850393305E-02/
      DATA T2( 261)/.589578169770385E+00/,W2( 261)/.667851602551808E-02/
      DATA T2( 262)/.582584665414345E+00/,W2( 262)/.611814741294694E-02/
      DATA T2( 263)/.575265988310783E+00/,W2( 263)/.559806215842352E-02/
      DATA T2( 264)/.567605961597871E+00/,W2( 264)/.511641729723990E-02/
      DATA T2( 265)/.559588168624695E+00/,W2( 265)/.467136365421335E-02/
      DATA T2( 266)/.551196119525264E+00/,W2( 266)/.426105224000330E-02/
      DATA T2( 267)/.542413463595446E+00/,W2( 267)/.388364073434979E-02/
      DATA T2( 268)/.533224254976592E+00/,W2( 268)/.353729998453955E-02/
      DATA T2( 269)/.523613279348419E+00/,W2( 269)/.322022043869309E-02/
      DATA T2( 270)/.513566449059970E+00/,W2( 270)/.293061842503019E-02/
      DATA T2( 271)/.503071273144584E+00/,W2( 271)/.266674218046381E-02/
      DATA T2( 272)/.492117406674955E+00/,W2( 272)/.242687752520501E-02/
      DATA T2( 273)/.480697280562804E+00/,W2( 273)/.220935307526871E-02/
      DATA T2( 274)/.468806807800716E+00/,W2( 274)/.201254488293265E-02/
      DATA T2( 275)/.456446154890826E+00/,W2( 275)/.183488039787986E-02/
      DATA T2( 276)/.443620557493957E+00/,W2( 276)/.167484165117196E-02/
      DATA T2( 277)/.430341147049482E+00/,W2( 277)/.153096758341090E-02/
      DATA T2( 278)/.416625740514682E+00/,W2( 278)/.140185547143153E-02/
      DATA T2( 279)/.402499529292351E+00/,W2( 279)/.128616145939885E-02/
      DATA T2( 280)/.387995587520975E+00/,W2( 280)/.118260027519855E-02/
      DATA T2( 281)/.373155106886278E+00/,W2( 281)/.108994431510912E-02/
      DATA T2( 282)/.358027258767948E+00/,W2( 282)/.100702240838528E-02/
      DATA T2( 283)/.342668589545370E+00/,W2( 283)/.932718719449840E-03/
      DATA T2( 284)/.327141876182805E+00/,W2( 284)/.865972385468445E-03/
      DATA T2( 285)/.311514410770153E+00/,W2( 285)/.805778578103670E-03/
      DATA T2( 286)/.295855745762938E+00/,W2( 286)/.751191656385356E-03/
      DATA T2( 287)/.280235012727555E+00/,W2( 287)/.701330867620280E-03/
      DATA T2( 288)/.264718016434490E+00/,W2( 288)/.655388594676531E-03/
      DATA T2( 289)/.249364386135794E+00/,W2( 289)/.612640440053535E-03/
      DATA T2( 290)/.234225114576817E+00/,W2( 290)/.572455590324588E-03/
      DATA T2( 291)/.219340810013485E+00/,W2( 291)/.534305167868945E-03/
      DATA T2( 292)/.204740911564238E+00/,W2( 292)/.497765998343563E-03/
      DATA T2( 293)/.190443973726792E+00/,W2( 293)/.462517715505557E-03/
      DATA T2( 294)/.176458934589450E+00/,W2( 294)/.428332470353442E-03/
      DATA T2( 295)/.162787090325211E+00/,W2( 295)/.395058398820027E-03/
      DATA T2( 296)/.149424365955695E+00/,W2( 296)/.362599751581989E-03/
      DATA T2( 297)/.136363451364730E+00/,W2( 297)/.330897424376161E-03/
      DATA T2( 298)/.123595478268870E+00/,W2( 298)/.299913107564455E-03/
      DATA T2( 299)/.111111108367785E+00/,W2( 299)/.269618632790077E-03/
      DATA T2( 300)/.989010987059053E-01/,W2( 300)/.239990188657338E-03/
      DATA T2( 301)/.869565217005612E-01/,W2( 301)/.211005864987450E-03/
      DATA T2( 302)/.752688171746145E-01/,W2( 302)/.182644861590639E-03/
      DATA T2( 303)/.638297872089028E-01/,W2( 303)/.154887283840937E-03/
      DATA T2( 304)/.526315789266392E-01/,W2( 304)/.127714076149543E-03/
      DATA T2( 305)/.416666666502560E-01/,W2( 305)/.101106976951722E-03/
      DATA T2( 306)/.309278350393653E-01/,W2( 306)/.750484777373607E-04/
      DATA T2( 307)/.204081632572683E-01/,W2( 307)/.495217846294149E-04/
      DATA T2( 308)/.101010100970318E-01/,W2( 308)/.245107822913266E-04/
      DATA T2( 309)/.000000000000000E+00/,W2( 309)/.000000000000000E+00/
      DATA T2( 310)/.578441031735049E-01/,W2( 310)/.224793165593118E+00/
      DATA T2( 311)/.573935835058997E-01/,W2( 311)/.221866341550964E+00/
      DATA T2( 312)/.569391159670073E-01/,W2( 312)/.218943450167297E+00/
      DATA T2( 313)/.564806649702140E-01/,W2( 313)/.216024720479163E+00/
      DATA T2( 314)/.560181950751322E-01/,W2( 314)/.213110384909851E+00/
      DATA T2( 315)/.555516710233460E-01/,W2( 315)/.210200679262667E+00/
      DATA T2( 316)/.550810577764692E-01/,W2( 316)/.207295842711514E+00/
      DATA T2( 317)/.546063205566405E-01/,W2( 317)/.204396117788062E+00/
      DATA T2( 318)/.541274248895876E-01/,W2( 318)/.201501750365327E+00/
      DATA T2( 319)/.536443366503950E-01/,W2( 319)/.198612989637424E+00/
      DATA T2( 320)/.531570221121191E-01/,W2( 320)/.195730088095286E+00/
      DATA T2( 321)/.526654479973972E-01/,W2( 321)/.192853301498097E+00/
      DATA T2( 322)/.521695815332033E-01/,W2( 322)/.189982888840183E+00/
      DATA T2( 323)/.516693905089090E-01/,W2( 323)/.187119112313111E+00/
      DATA T2( 324)/.511648433378128E-01/,W2( 324)/.184262237262686E+00/
      DATA T2( 325)/.506559091223064E-01/,W2( 325)/.181412532140559E+00/
      DATA T2( 326)/.501425577228496E-01/,W2( 326)/.178570268450120E+00/
      DATA T2( 327)/.496247598309309E-01/,W2( 327)/.175735720686329E+00/
      DATA T2( 328)/.491024870461927E-01/,W2( 328)/.172909166269125E+00/
      DATA T2( 329)/.485757119579046E-01/,W2( 329)/.170090885470016E+00/
      DATA T2( 330)/.480444082309683E-01/,W2( 330)/.167281161331439E+00/
      DATA T2( 331)/.475085506966399E-01/,W2( 331)/.164480279578452E+00/
      DATA T2( 332)/.469681154481552E-01/,W2( 332)/.161688528522268E+00/
      DATA T2( 333)/.464230799414442E-01/,W2( 333)/.158906198955156E+00/
      DATA T2( 334)/.458734231011173E-01/,W2( 334)/.156133584036147E+00/
      DATA T2( 335)/.453191254319087E-01/,W2( 335)/.153370979167007E+00/
      DATA T2( 336)/.447601691357556E-01/,W2( 336)/.150618681857874E+00/
      DATA T2( 337)/.441965382346953E-01/,W2( 337)/.147876991581937E+00/
      DATA T2( 338)/.436282186997617E-01/,W2( 338)/.145146209618527E+00/
      DATA T2( 339)/.430551985860665E-01/,W2( 339)/.142426638883965E+00/
      DATA T2( 340)/.424774681742614E-01/,W2( 340)/.139718583749522E+00/
      DATA T2( 341)/.418950201185942E-01/,W2( 341)/.137022349845846E+00/
      DATA T2( 342)/.413078496018058E-01/,W2( 342)/.134338243853294E+00/
      DATA T2( 343)/.407159544971605E-01/,W2( 343)/.131666573277647E+00/
      DATA T2( 344)/.401193355379819E-01/,W2( 344)/.129007646210855E+00/
      DATA T2( 345)/.395179964951782E-01/,W2( 345)/.126361771076656E+00/
      DATA T2( 346)/.389119443634050E-01/,W2( 346)/.123729256361190E+00/
      DATA T2( 347)/.383011895567471E-01/,W2( 347)/.121110410329197E+00/
      DATA T2( 348)/.376857461151316E-01/,W2( 348)/.118505540726932E+00/
      DATA T2( 349)/.370656319231355E-01/,W2( 349)/.115914954473795E+00/
      DATA T2( 350)/.364408689434767E-01/,W2( 350)/.113338957345723E+00/
      DATA T2( 351)/.358114834683215E-01/,W2( 351)/.110777853654910E+00/
      DATA T2( 352)/.351775063926734E-01/,W2( 352)/.108231945932375E+00/
      DATA T2( 353)/.345389735156244E-01/,W2( 353)/.105701534622485E+00/
      DATA T2( 354)/.338959258772465E-01/,W2( 354)/.103186917801952E+00/
      DATA T2( 355)/.332484101415218E-01/,W2( 355)/.100688390940252E+00/
      DATA T2( 356)/.325964790391240E-01/,W2( 356)/.982062467241115E-01/
      DATA T2( 357)/.319401918882546E-01/,W2( 357)/.957407749760521E-01/
      DATA T2( 358)/.312796152173625E-01/,W2( 358)/.932922627062955E-01/
      DATA T2( 359)/.306148235206676E-01/,W2( 359)/.908609943490513E-01/
      DATA T2( 360)/.299459001862764E-01/,W2( 360)/.884472522488354E-01/
      DATA T2( 361)/.292729386475705E-01/,W2( 361)/.860513174804123E-01/
      DATA T2( 362)/.285960438217012E-01/,W2( 362)/.836734711076488E-01/
      DATA T2( 363)/.279153339145164E-01/,W2( 363)/.813139960122046E-01/
      DATA T2( 364)/.272309426889130E-01/,W2( 364)/.789731794524058E-01/
      DATA T2( 365)/.265430223128305E-01/,W2( 365)/.766513165449938E-01/
      DATA T2( 366)/.258517469225313E-01/,W2( 366)/.743487148957678E-01/
      DATA T2( 367)/.251573170539818E-01/,W2( 367)/.720657006357008E-01/
      DATA T2( 368)/.244599651059263E-01/,W2( 368)/.698026261405790E-01/
      DATA T2( 369)/.237599619962598E-01/,W2( 369)/.675598797145751E-01/
      DATA T2( 370)/.230576251491878E-01/,W2( 370)/.653378974864938E-01/
      DATA T2( 371)/.223533278916031E-01/,W2( 371)/.631371776808824E-01/
      DATA T2( 372)/.216475102267162E-01/,W2( 372)/.609582972575840E-01/
      DATA T2( 373)/.209406907723940E-01/,W2( 373)/.588019306304199E-01/
      DATA T2( 374)/.202334793825502E-01/,W2( 374)/.566688697457552E-01/
      DATA T2( 375)/.195265896006445E-01/,W2( 375)/.545600442011689E-01/
      DATA T2( 376)/.188208496302377E-01/,W2( 376)/.524765393159129E-01/
      DATA T2( 377)/.181172099855000E-01/,W2( 377)/.504196091820571E-01/
      DATA T2( 378)/.174167454896961E-01/,W2( 378)/.483906808630982E-01/
      DATA T2( 379)/.167206489678996E-01/,W2( 379)/.463913453065046E-01/
      DATA T2( 380)/.160302140352722E-01/,W2( 380)/.444233305458894E-01/
      DATA T2( 381)/.153468050419386E-01/,W2( 381)/.424884537892922E-01/
      DATA T2( 382)/.146718136744092E-01/,W2( 382)/.405885513488891E-01/
      DATA T2( 383)/.140066039365954E-01/,W2( 383)/.387253891099654E-01/
      DATA T2( 384)/.133524499556269E-01/,W2( 384)/.369005609059127E-01/
      DATA T2( 385)/.127104736514180E-01/,W2( 385)/.351153866904714E-01/
      DATA T2( 386)/.120815909035926E-01/,W2( 386)/.333708252506567E-01/
      DATA T2( 387)/.114664746185831E-01/,W2( 387)/.316674159008741E-01/
      DATA T2( 388)/.108655406619518E-01/,W2( 388)/.300052594241135E-01/
      DATA T2( 389)/.102789583574015E-01/,W2( 389)/.283840411171328E-01/
      DATA T2( 390)/.970668231903226E-02/,W2( 390)/.268030901819487E-01/
      DATA T2( 391)/.914849831634354E-02/,W2( 391)/.252614626153611E-01/
      DATA T2( 392)/.860407395515127E-02/,W2( 392)/.237580314578262E-01/
      DATA T2( 393)/.807300565421465E-02/,W2( 393)/.222915695801034E-01/
      DATA T2( 394)/.755485617005735E-02/,W2( 394)/.208608151367448E-01/
      DATA T2( 395)/.704918053463218E-02/,W2( 395)/.194645161940650E-01/
      DATA T2( 396)/.655554138813103E-02/,W2( 396)/.181014564923845E-01/
      DATA T2( 397)/.607351645884719E-02/,W2( 397)/.167704673461895E-01/
      DATA T2( 398)/.560270125365991E-02/,W2( 398)/.154704311599719E-01/
      DATA T2( 399)/.514270936336427E-02/,W2( 399)/.142002808226997E-01/
      DATA T2( 400)/.469317183176880E-02/,W2( 400)/.129589975342928E-01/
      DATA T2( 401)/.425373626700338E-02/,W2( 401)/.117456082520677E-01/
      DATA T2( 402)/.382406593700319E-02/,W2( 402)/.105591831761015E-01/
      DATA T2( 403)/.340383891095889E-02/,W2( 403)/.939883337652991E-02/
      DATA T2( 404)/.299274725504598E-02/,W2( 404)/.826370857260118E-02/
      DATA T2( 405)/.259049627990539E-02/,W2( 405)/.715299505477844E-02/
      DATA T2( 406)/.219680383615077E-02/,W2( 406)/.606591373946257E-02/
      DATA T2( 407)/.181139965436993E-02/,W2( 407)/.500171834657440E-02/
      DATA T2( 408)/.143402472637620E-02/,W2( 408)/.395969369103807E-02/
      DATA T2( 409)/.106443072473285E-02/,W2( 409)/.293915407994578E-02/
      DATA T2( 410)/.702379457816914E-03/,W2( 410)/.193944180785538E-02/
      DATA T2( 411)/.347642357909382E-03/,W2( 411)/.959925743281959E-03/
      DATA T2( 412)/.000000000000000E+00/,W2( 412)/.000000000000000E+00/
      DATA T2( 413)/.441305197528607E+00/,W2( 413)/.142441884637376E+00/
      DATA T2( 414)/.439270341637504E+00/,W2( 414)/.136193177705453E+00/
      DATA T2( 415)/.437197852751094E+00/,W2( 415)/.130148912588167E+00/
      DATA T2( 416)/.435086825811673E+00/,W2( 416)/.124305593075154E+00/
      DATA T2( 417)/.432936333077139E+00/,W2( 417)/.118659676130785E+00/
      DATA T2( 418)/.430745423799364E+00/,W2( 418)/.113207574334119E+00/
      DATA T2( 419)/.428513123931650E+00/,W2( 419)/.107945658425439E+00/
      DATA T2( 420)/.426238435869896E+00/,W2( 420)/.102870259957876E+00/
      DATA T2( 421)/.423920338232595E+00/,W2( 421)/.979776740522593E-01/
      DATA T2( 422)/.421557785685268E+00/,W2( 422)/.932641622529193E-01/
      DATA T2( 423)/.419149708815446E+00/,W2( 423)/.887259554817674E-01/
      DATA T2( 424)/.416695014064906E+00/,W2( 424)/.843592570875320E-01/
      DATA T2( 425)/.414192583726460E+00/,W2( 425)/.801602459866038E-01/
      DATA T2( 426)/.411641276013221E+00/,W2( 426)/.761250798914699E-01/
      DATA T2( 427)/.409039925208975E+00/,W2( 427)/.722498986222578E-01/
      DATA T2( 428)/.406387341908976E+00/,W2( 428)/.685308274964247E-01/
      DATA T2( 429)/.403682313361237E+00/,W2( 429)/.649639807911432E-01/
      DATA T2( 430)/.400923603919194E+00/,W2( 430)/.615454652724402E-01/
      DATA T2( 431)/.398109955617392E+00/,W2( 431)/.582713837846510E-01/
      DATA T2( 432)/.395240088882715E+00/,W2( 432)/.551378388932526E-01/
      DATA T2( 433)/.392312703394524E+00/,W2( 433)/.521409365736468E-01/
      DATA T2( 434)/.389326479107954E+00/,W2( 434)/.492767899379769E-01/
      DATA T2( 435)/.386280077455467E+00/,W2( 435)/.465415229915811E-01/
      DATA T2( 436)/.383172142742696E+00/,W2( 436)/.439312744102235E-01/
      DATA T2( 437)/.380001303755411E+00/,W2( 437)/.414422013287932E-01/
      DATA T2( 438)/.376766175595330E+00/,W2( 438)/.390704831317385E-01/
      DATA T2( 439)/.373465361763273E+00/,W2( 439)/.368123252351006E-01/
      DATA T2( 440)/.370097456508917E+00/,W2( 440)/.346639628496447E-01/
      DATA T2( 441)/.366661047467104E+00/,W2( 441)/.326216647142493E-01/
      DATA T2( 442)/.363154718601263E+00/,W2( 442)/.306817367884216E-01/
      DATA T2( 443)/.359577053475039E+00/,W2( 443)/.288405258925550E-01/
      DATA T2( 444)/.355926638873685E+00/,W2( 444)/.270944232843441E-01/
      DATA T2( 445)/.352202068797144E+00/,W2( 445)/.254398681596210E-01/
      DATA T2( 446)/.348401948847056E+00/,W2( 446)/.238733510657827E-01/
      DATA T2( 447)/.344524901030242E+00/,W2( 447)/.223914172159456E-01/
      DATA T2( 448)/.340569569001577E+00/,W2( 448)/.209906696919834E-01/
      DATA T2( 449)/.336534623769654E+00/,W2( 449)/.196677725246936E-01/
      DATA T2( 450)/.332418769889495E+00/,W2( 450)/.184194536394812E-01/
      DATA T2( 451)/.328220752167903E+00/,W2( 451)/.172425076561480E-01/
      DATA T2( 452)/.323939362909278E+00/,W2( 452)/.161337985316319E-01/
      DATA T2( 453)/.319573449733201E+00/,W2( 453)/.150902620348357E-01/
      DATA T2( 454)/.315121924000433E+00/,W2( 454)/.141089080430101E-01/
      DATA T2( 455)/.310583769891958E+00/,W2( 455)/.131868226494999E-01/
      DATA T2( 456)/.305958054197239E+00/,W2( 456)/.123211700729948E-01/
      DATA T2( 457)/.301243936884361E+00/,W2( 457)/.115091943587201E-01/
      DATA T2( 458)/.296440682547632E+00/,W2( 458)/.107482208622323E-01/
      DATA T2( 459)/.291547672859699E+00/,W2( 459)/.100356575065833E-01/
      DATA T2( 460)/.286564420197529E+00/,W2( 460)/.936899580355450E-02/
      DATA T2( 461)/.281490582667615E+00/,W2( 461)/.874581162935000E-02/
      DATA T2( 462)/.276325980828770E+00/,W2( 462)/.816376574451701E-02/
      DATA T2( 463)/.271070616504055E+00/,W2( 463)/.762060404683649E-02/
      DATA T2( 464)/.265724694190321E+00/,W2( 464)/.711415754441212E-02/
      DATA T2( 465)/.260288645716860E+00/,W2( 465)/.664234203409693E-02/
      DATA T2( 466)/.254763158974804E+00/,W2( 466)/.620315746766952E-02/
      DATA T2( 467)/.249149211733735E+00/,W2( 467)/.579468698479123E-02/
      DATA T2( 468)/.243448111773232E+00/,W2( 468)/.541509558781843E-02/
      DATA T2( 469)/.237661544767625E+00/,W2( 469)/.506262842924520E-02/
      DATA T2( 470)/.231791631540421E+00/,W2( 470)/.473560867840203E-02/
      DATA T2( 471)/.225840996399113E+00/,W2( 471)/.443243493091855E-02/
      DATA T2( 472)/.219812848191637E+00/,W2( 472)/.415157812382387E-02/
      DATA T2( 473)/.213711075377845E+00/,W2( 473)/.389157792323901E-02/
      DATA T2( 474)/.207540355627624E+00/,W2( 474)/.365103856363901E-02/
      DATA T2( 475)/.201306279048013E+00/,W2( 475)/.342862414198664E-02/
      DATA T2( 476)/.195015481889853E+00/,W2( 476)/.322305341208680E-02/
      DATA T2( 477)/.188675784296612E+00/,W2( 477)/.303309419021515E-02/
      DATA T2( 478)/.182296321244414E+00/,W2( 478)/.285755757754377E-02/
      DATA T2( 479)/.175887650427124E+00/,W2( 479)/.269529232982253E-02/
      DATA T2( 480)/.169461815015500E+00/,W2( 480)/.254517985440486E-02/
      DATA T2( 481)/.163032334104737E+00/,W2( 481)/.240613047040346E-02/
      DATA T2( 482)/.156614091086843E+00/,W2( 482)/.227708169268877E-02/
      DATA T2( 483)/.150223092530310E+00/,W2( 483)/.215699933726149E-02/
      DATA T2( 484)/.143876079848009E+00/,W2( 484)/.204488212215738E-02/
      DATA T2( 485)/.137589994554893E+00/,W2( 485)/.193977008692404E-02/
      DATA T2( 486)/.131381324438339E+00/,W2( 486)/.184075654676307E-02/
      DATA T2( 487)/.125265388235658E+00/,W2( 487)/.174700248942372E-02/
      DATA T2( 488)/.119255642661966E+00/,W2( 488)/.165775148222537E-02/
      DATA T2( 489)/.113363108281032E+00/,W2( 489)/.157234255222966E-02/
      DATA T2( 490)/.107596001932283E+00/,W2( 490)/.149021842490137E-02/
      DATA T2( 491)/.101959631270663E+00/,W2( 491)/.141092713311080E-02/
      DATA T2( 492)/.964565578668365E-01/,W2( 492)/.133411627579428E-02/
      DATA T2( 493)/.910869829362476E-01/,W2( 493)/.125952077424719E-02/
      DATA T2( 494)/.858492701484871E-01/,W2( 494)/.118694633619603E-02/
      DATA T2( 495)/.807405049057775E-01/,W2( 495)/.111625153580007E-02/
      DATA T2( 496)/.757570015942016E-01/,W2( 496)/.104733125586855E-02/
      DATA T2( 497)/.708947023366782E-01/,W2( 497)/.980103366665122E-03/
      DATA T2( 498)/.661494493097791E-01/,W2( 498)/.914499338143330E-03/
      DATA T2( 499)/.615171443650341E-01/,W2( 499)/.850458451188665E-03/
      DATA T2( 500)/.569938266401111E-01/,W2( 500)/.787924683698256E-03/
      DATA T2( 501)/.525757007828002E-01/,W2( 501)/.726845242759486E-03/
      DATA T2( 502)/.482591408083263E-01/,W2( 502)/.667169934651737E-03/
      DATA T2( 503)/.440406844455997E-01/,W2( 503)/.608850884364018E-03/
      DATA T2( 504)/.399170248533828E-01/,W2( 504)/.551842374589784E-03/
      DATA T2( 505)/.358850021409214E-01/,W2( 505)/.496100720590764E-03/
      DATA T2( 506)/.319415953122487E-01/,W2( 506)/.441584157888482E-03/
      DATA T2( 507)/.280839147189820E-01/,W2( 507)/.388252737853641E-03/
      DATA T2( 508)/.243091949986887E-01/,W2( 508)/.336068230077614E-03/
      DATA T2( 509)/.206147884639336E-01/,W2( 509)/.284994030977673E-03/
      DATA T2( 510)/.169981589088575E-01/,W2( 510)/.234995078174572E-03/
      DATA T2( 511)/.134568758028455E-01/,W2( 511)/.186037770221536E-03/
      DATA T2( 512)/.998860884334927E-02/,W2( 512)/.138089891298460E-03/
      DATA T2( 513)/.659112284221007E-02/,W2( 513)/.911205405166710E-04/
      DATA T2( 514)/.326227292190196E-02/,W2( 514)/.451000655082514E-04/
      DATA T2( 515)/.000000000000000E+00/,W2( 515)/.000000000000000E+00/
      DATA T2( 516)/.871373268080422E+00/,W2( 516)/.345141070016873E-01/
      DATA T2( 517)/.870449948023419E+00/,W2( 517)/.318508901779573E-01/
      DATA T2( 518)/.869499394918262E+00/,W2( 518)/.293520816889804E-01/
      DATA T2( 519)/.868520431467643E+00/,W2( 519)/.270105833454958E-01/
      DATA T2( 520)/.867511814079600E+00/,W2( 520)/.248194225593783E-01/
      DATA T2( 521)/.866472228320128E+00/,W2( 521)/.227717582282933E-01/
      DATA T2( 522)/.865400284002960E+00/,W2( 522)/.208608864155481E-01/
      DATA T2( 523)/.864294509884065E+00/,W2( 523)/.190802458044667E-01/
      DATA T2( 524)/.863153347925319E+00/,W2( 524)/.174234229066208E-01/
      DATA T2( 525)/.861975147088345E+00/,W2( 525)/.158841570033785E-01/
      DATA T2( 526)/.860758156615752E+00/,W2( 526)/.144563448004743E-01/
      DATA T2( 527)/.859500518752876E+00/,W2( 527)/.131340447756810E-01/
      DATA T2( 528)/.858200260858551E+00/,W2( 528)/.119114812001739E-01/
      DATA T2( 529)/.856855286848516E+00/,W2( 529)/.107830478148374E-01/
      DATA T2( 530)/.855463367909598E+00/,W2( 530)/.974331114356927E-02/
      DATA T2( 531)/.854022132416899E+00/,W2( 531)/.878701342660467E-02/
      DATA T2( 532)/.852529054979774E+00/,W2( 532)/.790907515801008E-02/
      DATA T2( 533)/.850981444535380E+00/,W2( 533)/.710459721278896E-02/
      DATA T2( 534)/.849376431401021E+00/,W2( 534)/.636886255050418E-02/
      DATA T2( 535)/.847710953188387E+00/,W2( 535)/.569733748395229E-02/
      DATA T2( 536)/.845981739474038E+00/,W2( 536)/.508567250322416E-02/
      DATA T2( 537)/.844185295111296E+00/,W2( 537)/.452970264745040E-02/
      DATA T2( 538)/.842317882058869E+00/,W2( 538)/.402544741865516E-02/
      DATA T2( 539)/.840375499591469E+00/,W2( 539)/.356911023441850E-02/
      DATA T2( 540)/.838353862747195E+00/,W2( 540)/.315707741846825E-02/
      DATA T2( 541)/.836248378856003E+00/,W2( 541)/.278591673087192E-02/
      DATA T2( 542)/.834054121983348E+00/,W2( 542)/.245237544216372E-02/
      DATA T2( 543)/.831765805113474E+00/,W2( 543)/.215337795850223E-02/
      DATA T2( 544)/.829377749888438E+00/,W2( 544)/.188602300778817E-02/
      DATA T2( 545)/.826883853712549E+00/,W2( 545)/.164758039955597E-02/
      DATA T2( 546)/.824277554028450E+00/,W2( 546)/.143548737435796E-02/
      DATA T2( 547)/.821551789571935E+00/,W2( 547)/.124734456125681E-02/
      DATA T2( 548)/.818698958419523E+00/,W2( 548)/.108091156489585E-02/
      DATA T2( 549)/.815710872658108E+00/,W2( 549)/.934102206393362E-03/
      DATA T2( 550)/.812578709532512E+00/,W2( 550)/.804979444966599E-03/
      DATA T2( 551)/.809292958968441E+00/,W2( 551)/.691750009696485E-03/
      DATA T2( 552)/.805843367429860E+00/,W2( 552)/.592758773152067E-03/
      DATA T2( 553)/.802218878157330E+00/,W2( 553)/.506482900665825E-03/
      DATA T2( 554)/.798407567955233E+00/,W2( 554)/.431525810845174E-03/
      DATA T2( 555)/.794396580860448E+00/,W2( 555)/.366610984383486E-03/
      DATA T2( 556)/.790172059245202E+00/,W2( 556)/.310575659358593E-03/
      DATA T2( 557)/.785719073196870E+00/,W2( 557)/.262364451944702E-03/
      DATA T2( 558)/.781021549395421E+00/,W2( 558)/.221022941785891E-03/
      DATA T2( 559)/.776062201196021E+00/,W2( 559)/.185691261162477E-03/
      DATA T2( 560)/.770822462244726E+00/,W2( 560)/.155597726508835E-03/
      DATA T2( 561)/.765282426737349E+00/,W2( 561)/.130052549803813E-03/
      DATA T2( 562)/.759420800406033E+00/,W2( 562)/.108441665852424E-03/
      DATA T2( 563)/.753214867516507E+00/,W2( 563)/.902207095195527E-04/
      DATA T2( 564)/.746640480610898E+00/,W2( 564)/.749091745822994E-04/
      DATA T2( 565)/.739672081458565E+00/,W2( 565)/.620847830675808E-04/
      DATA T2( 566)/.732282763687420E+00/,W2( 566)/.513780907761533E-04/
      DATA T2( 567)/.724444389839781E+00/,W2( 567)/.424673512143106E-04/
      DATA T2( 568)/.716127778063678E+00/,W2( 568)/.350736564204241E-04/
      DATA T2( 569)/.707302976177301E+00/,W2( 569)/.289563692540064E-04/
      DATA T2( 570)/.697939643194614E+00/,W2( 570)/.239088576855955E-04/
      DATA T2( 571)/.688007560199435E+00/,W2( 571)/.197545375668163E-04/
      DATA T2( 572)/.677477293148180E+00/,W2( 572)/.163432263543363E-04/
      DATA T2( 573)/.666321028994727E+00/,W2( 573)/.135478063919542E-04/
      DATA T2( 574)/.654513602452189E+00/,W2( 574)/.112611927020067E-04/
      DATA T2( 575)/.642033722505887E+00/,W2( 575)/.939359687589539E-05/
      DATA T2( 576)/.628865394117350E+00/,W2( 576)/.787007565198979E-05/
      DATA T2( 577)/.614999510152399E+00/,W2( 577)/.662835018722047E-05/
      DATA T2( 578)/.600435560642138E+00/,W2( 578)/.561687991722245E-05/
      DATA T2( 579)/.585183371305327E+00/,W2( 579)/.479317330147000E-05/
      DATA T2( 580)/.569264742871922E+00/,W2( 580)/.412231669960068E-05/
      DATA T2( 581)/.552714821769634E+00/,W2( 581)/.357570215102480E-05/
      DATA T2( 582)/.535582998912058E+00/,W2( 582)/.312993494953139E-05/
      DATA T2( 583)/.517933117413621E+00/,W2( 583)/.276590261461323E-05/
      DATA T2( 584)/.499842784506908E+00/,W2( 584)/.246798811524708E-05/
      DATA T2( 585)/.481401638982840E+00/,W2( 585)/.222341187510141E-05/
      DATA T2( 586)/.462708528665412E+00/,W2( 586)/.202168893656915E-05/
      DATA T2( 587)/.443867697609443E+00/,W2( 587)/.185418929919202E-05/
      DATA T2( 588)/.424984250376195E+00/,W2( 588)/.171379038852617E-05/
      DATA T2( 589)/.406159317435499E+00/,W2( 589)/.159461041139817E-05/
      DATA T2( 590)/.387485450332655E+00/,W2( 590)/.149180987279953E-05/
      DATA T2( 591)/.369042790874337E+00/,W2( 591)/.140144620952971E-05/
      DATA T2( 592)/.350896466685651E+00/,W2( 592)/.132036445511396E-05/
      DATA T2( 593)/.333095476148690E+00/,W2( 593)/.124610658877026E-05/
      DATA T2( 594)/.315673078631302E+00/,W2( 594)/.117682490723009E-05/
      DATA T2( 595)/.298648460073701E+00/,W2( 595)/.111119043458822E-05/
      DATA T2( 596)/.282029259532528E+00/,W2( 596)/.104829464104327E-05/
      DATA T2( 597)/.265814461152544E+00/,W2( 597)/.987549221170703E-06/
      DATA T2( 598)/.249997189134805E+00/,W2( 598)/.928592235105119E-06/
      DATA T2( 599)/.234567068284074E+00/,W2( 599)/.871208682916664E-06/
      DATA T2( 600)/.219511983241848E+00/,W2( 600)/.815270342591456E-06/
      DATA T2( 601)/.204819232072614E+00/,W2( 601)/.760695317554426E-06/
      DATA T2( 602)/.190476182725590E+00/,W2( 602)/.707424126422377E-06/
      DATA T2( 603)/.176470587178474E+00/,W2( 603)/.655407428301861E-06/
      DATA T2( 604)/.162790697542860E+00/,W2( 604)/.604600620733801E-06/
      DATA T2( 605)/.149425287319755E+00/,W2( 605)/.554961814693078E-06/
      DATA T2( 606)/.136363636335922E+00/,W2( 606)/.506451166351618E-06/
      DATA T2( 607)/.123595505593089E+00/,W2( 607)/.459030645149265E-06/
      DATA T2( 608)/.111111111088742E+00/,W2( 608)/.412663913315823E-06/
      DATA T2( 609)/.989010988811880E-01/,W2( 609)/.367316230533862E-06/
      DATA T2( 610)/.869565217216243E-01/,W2( 610)/.322954366942816E-06/
      DATA T2( 611)/.752688171891479E-01/,W2( 611)/.279546521923621E-06/
      DATA T2( 612)/.638297872211923E-01/,W2( 612)/.237062248075046E-06/
      DATA T2( 613)/.526315789367726E-01/,W2( 613)/.195472379991705E-06/
      DATA T2( 614)/.416666666582783E-01/,W2( 614)/.154748967493433E-06/
      DATA T2( 615)/.309278350453200E-01/,W2( 615)/.114865212984816E-06/
      DATA T2( 616)/.204081632611976E-01/,W2( 616)/.757954126498448E-07/
      DATA T2( 617)/.101010100989766E-01/,W2( 617)/.375149012105293E-07/
      DATA T2( 618)/.000000000000000E+00/,W2( 618)/.000000000000000E+00/
      DATA T2( 619)/.343015088985127E-01/,W2( 619)/.135466272897877E+00/
      DATA T2( 620)/.339758535528594E-01/,W2( 620)/.133498846052356E+00/
      DATA T2( 621)/.336482680675069E-01/,W2( 621)/.131539526725643E+00/
      DATA T2( 622)/.333187503260208E-01/,W2( 622)/.129588439028071E+00/
      DATA T2( 623)/.329872987857706E-01/,W2( 623)/.127645707282457E+00/
      DATA T2( 624)/.326539125076569E-01/,W2( 624)/.125711455987788E+00/
      DATA T2( 625)/.323185911871152E-01/,W2( 625)/.123785809781709E+00/
      DATA T2( 626)/.319813351864495E-01/,W2( 626)/.121868893401776E+00/
      DATA T2( 627)/.316421455685458E-01/,W2( 627)/.119960831645484E+00/
      DATA T2( 628)/.313010241320231E-01/,W2( 628)/.118061749329031E+00/
      DATA T2( 629)/.309579734478731E-01/,W2( 629)/.116171771244824E+00/
      DATA T2( 630)/.306129968976507E-01/,W2( 630)/.114291022117690E+00/
      DATA T2( 631)/.302660987132660E-01/,W2( 631)/.112419626559796E+00/
      DATA T2( 632)/.299172840184441E-01/,W2( 632)/.110557709024245E+00/
      DATA T2( 633)/.295665588719027E-01/,W2( 633)/.108705393757329E+00/
      DATA T2( 634)/.292139303123109E-01/,W2( 634)/.106862804749420E+00/
      DATA T2( 635)/.288594064050836E-01/,W2( 635)/.105030065684461E+00/
      DATA T2( 636)/.285029962910663E-01/,W2( 636)/.103207299888025E+00/
      DATA T2( 637)/.281447102371632E-01/,W2( 637)/.101394630273896E+00/
      DATA T2( 638)/.277845596889528E-01/,W2( 638)/.995921792891176E-01/
      DATA T2( 639)/.274225573253360E-01/,W2( 639)/.978000688574237E-01/
      DATA T2( 640)/.270587171152462E-01/,W2( 640)/.960184203209829E-01/
      DATA T2( 641)/.266930543764473E-01/,W2( 641)/.942473543803276E-01/
      DATA T2( 642)/.263255858364249E-01/,W2( 642)/.924869910323297E-01/
      DATA T2( 643)/.259563296953676E-01/,W2( 643)/.907374495060543E-01/
      DATA T2( 644)/.255853056912068E-01/,W2( 644)/.889988481962662E-01/
      DATA T2( 645)/.252125351666631E-01/,W2( 645)/.872713045943285E-01/
      DATA T2( 646)/.248380411382169E-01/,W2( 646)/.855549352161691E-01/
      DATA T2( 647)/.244618483668823E-01/,W2( 647)/.838498555269245E-01/
      DATA T2( 648)/.240839834306264E-01/,W2( 648)/.821561798617973E-01/
      DATA T2( 649)/.237044747982263E-01/,W2( 649)/.804740213425823E-01/
      DATA T2( 650)/.233233529043077E-01/,W2( 650)/.788034917892284E-01/
      DATA T2( 651)/.229406502252523E-01/,W2( 651)/.771447016257191E-01/
      DATA T2( 652)/.225564013556123E-01/,W2( 652)/.754977597794795E-01/
      DATA T2( 653)/.221706430846190E-01/,W2( 653)/.738627735734621E-01/
      DATA T2( 654)/.217834144723432E-01/,W2( 654)/.722398486100552E-01/
      DATA T2( 655)/.213947569250610E-01/,W2( 655)/.706290886460175E-01/
      DATA T2( 656)/.210047142694228E-01/,W2( 656)/.690305954578248E-01/
      DATA T2( 657)/.206133328251445E-01/,W2( 657)/.674444686971683E-01/
      DATA T2( 658)/.202206614761805E-01/,W2( 658)/.658708057369724E-01/
      DATA T2( 659)/.198267517407524E-01/,W2( 659)/.643097015093123E-01/
      DATA T2( 660)/.194316578412805E-01/,W2( 660)/.627612483381839E-01/
      DATA T2( 661)/.190354367763007E-01/,W2( 661)/.612255357724340E-01/
      DATA T2( 662)/.186381483979999E-01/,W2( 662)/.597026504276060E-01/
      DATA T2( 663)/.182398555012605E-01/,W2( 663)/.581926758503924E-01/
      DATA T2( 664)/.178406239333185E-01/,W2( 664)/.566956924263277E-01/
      DATA T2( 665)/.174405227376386E-01/,W2( 665)/.552117773609702E-01/
      DATA T2( 666)/.170396243517787E-01/,W2( 666)/.537410047778994E-01/
      DATA T2( 667)/.166380048873279E-01/,W2( 667)/.522834459943636E-01/
      DATA T2( 668)/.162357445309660E-01/,W2( 668)/.508391700584072E-01/
      DATA T2( 669)/.158329281198320E-01/,W2( 669)/.494082446608461E-01/
      DATA T2( 670)/.154296459621030E-01/,W2( 670)/.479907375724093E-01/
      DATA T2( 671)/.150259949950841E-01/,W2( 671)/.465867188009796E-01/
      DATA T2( 672)/.146220803976720E-01/,W2( 672)/.451962637151672E-01/
      DATA T2( 673)/.142180178001285E-01/,W2( 673)/.438194574351625E-01/
      DATA T2( 674)/.138139362581508E-01/,W2( 674)/.424564008428698E-01/
      DATA T2( 675)/.134099821738304E-01/,W2( 675)/.411072185977365E-01/
      DATA T2( 676)/.130063243427447E-01/,W2( 676)/.397720695410428E-01/
      DATA T2( 677)/.126031602683659E-01/,W2( 677)/.384511597973029E-01/
      DATA T2( 678)/.122007237907211E-01/,W2( 678)/.371447586922339E-01/
      DATA T2( 679)/.117992938999126E-01/,W2( 679)/.358532172478874E-01/
      DATA T2( 680)/.113992043213423E-01/,W2( 680)/.345769884322226E-01/
      DATA T2( 681)/.110008530542059E-01/,W2( 681)/.333166474994561E-01/
      DATA T2( 682)/.106047105335374E-01/,W2( 682)/.320729096855655E-01/
      DATA T2( 683)/.102113245384124E-01/,W2( 683)/.308466413592317E-01/
      DATA T2( 684)/.982131953185748E-02/,W2( 684)/.296388597752204E-01/
      DATA T2( 685)/.943538802028932E-02/,W2( 685)/.284507163162682E-01/
      DATA T2( 686)/.905427203234931E-02/,W2( 686)/.272834591225182E-01/
      DATA T2( 687)/.867873414500725E-02/,W2( 687)/.261383737550823E-01/
      DATA T2( 688)/.830951960891627E-02/,W2( 688)/.250167050133626E-01/
      DATA T2( 689)/.794731365011984E-02/,W2( 689)/.239195684122865E-01/
      DATA T2( 690)/.759270016830228E-02/,W2( 690)/.228478644614011E-01/
      DATA T2( 691)/.724612887349269E-02/,W2( 691)/.218022107380142E-01/
      DATA T2( 692)/.690789675755047E-02/,W2( 692)/.207829043777246E-01/
      DATA T2( 693)/.657814677302148E-02/,W2( 693)/.197899211634528E-01/
      DATA T2( 694)/.625688262756256E-02/,W2( 694)/.188229488783540E-01/
      DATA T2( 695)/.594399510666413E-02/,W2( 695)/.178814450515345E-01/
      DATA T2( 696)/.563929350817010E-02/,W2( 696)/.169647052801804E-01/
      DATA T2( 697)/.534253602666004E-02/,W2( 697)/.160719288772631E-01/
      DATA T2( 698)/.505345479432420E-02/,W2( 698)/.152022726534031E-01/
      DATA T2( 699)/.477177377262307E-02/,W2( 699)/.143548890313623E-01/
      DATA T2( 700)/.449721982365481E-02/,W2( 700)/.135289493011457E-01/
      DATA T2( 701)/.422952852417243E-02/,W2( 701)/.127236554705526E-01/
      DATA T2( 702)/.396844658715071E-02/,W2( 702)/.119382447915580E-01/
      DATA T2( 703)/.371373244015362E-02/,W2( 703)/.111719903364989E-01/
      DATA T2( 704)/.346515597303377E-02/,W2( 704)/.104241998217468E-01/
      DATA T2( 705)/.322249799186436E-02/,W2( 705)/.969421384012361E-02/
      DATA T2( 706)/.298554961011875E-02/,W2( 706)/.898140399895770E-02/
      DATA T2( 707)/.275411165584639E-02/,W2( 707)/.828517113082233E-02/
      DATA T2( 708)/.252799411431550E-02/,W2( 708)/.760494361597651E-02/
      DATA T2( 709)/.230701560781939E-02/,W2( 709)/.694017581737717E-02/
      DATA T2( 710)/.209100291045802E-02/,W2( 710)/.629034662099354E-02/
      DATA T2( 711)/.187979049526024E-02/,W2( 711)/.565495807341843E-02/
      DATA T2( 712)/.167322011116571E-02/,W2( 712)/.503353410930652E-02/
      DATA T2( 713)/.147114038759497E-02/,W2( 713)/.442561936180573E-02/
      DATA T2( 714)/.127340646453113E-02/,W2( 714)/.383077804973507E-02/
      DATA T2( 715)/.107987964621333E-02/,W2( 715)/.324859293579357E-02/
      DATA T2( 716)/.890427076702220E-03/,W2( 716)/.267866435056663E-02/
      DATA T2( 717)/.704921435722591E-03/,W2( 717)/.212060927753191E-02/
      DATA T2( 718)/.523240653319862E-03/,W2( 718)/.157406049466286E-02/
      DATA T2( 719)/.345267641986576E-03/,W2( 719)/.103866576858706E-02/
      DATA T2( 720)/.207576459290453E-03/,W2( 720)/.624450531735268E-03/
      DATA T2( 721)/.000000000000000E+00/,W2( 721)/.000000000000000E+00/
      DATA T2( 722)/.280171144482725E+00/,W2( 722)/.108498002427218E+00/
      DATA T2( 723)/.278190918498770E+00/,W2( 723)/.103352001288090E+00/
      DATA T2( 724)/.276184313872465E+00/,W2( 724)/.984118596679542E-01/
      DATA T2( 725)/.274150979361942E+00/,W2( 725)/.936715318120313E-01/
      DATA T2( 726)/.272090564728210E+00/,W2( 726)/.891250520082803E-01/
      DATA T2( 727)/.270002721248762E+00/,W2( 727)/.847665369607428E-01/
      DATA T2( 728)/.267887102268802E+00/,W2( 728)/.805901880783520E-01/
      DATA T2( 729)/.265743363791970E+00/,W2( 729)/.765902936750071E-01/
      DATA T2( 730)/.263571165112432E+00/,W2( 730)/.727612310768208E-01/
      DATA T2( 731)/.261370169490306E+00/,W2( 731)/.690974686325721E-01/
      DATA T2( 732)/.259140044872323E+00/,W2( 732)/.655935676235356E-01/
      DATA T2( 733)/.256880464659726E+00/,W2( 733)/.622441840690180E-01/
      DATA T2( 734)/.254591108525320E+00/,W2( 734)/.590440704241022E-01/
      DATA T2( 735)/.252271663281648E+00/,W2( 735)/.559880771662895E-01/
      DATA T2( 736)/.249921823802179E+00/,W2( 736)/.530711542679370E-01/
      DATA T2( 737)/.247541293997370E+00/,W2( 737)/.502883525516078E-01/
      DATA T2( 738)/.245129787847399E+00/,W2( 738)/.476348249256891E-01/
      DATA T2( 739)/.242687030493245E+00/,W2( 739)/.451058274978868E-01/
      DATA T2( 740)/.240212759387707E+00/,W2( 740)/.426967205644738E-01/
      DATA T2( 741)/.237706725507734E+00/,W2( 741)/.404029694734518E-01/
      DATA T2( 742)/.235168694629316E+00/,W2( 742)/.382201453600849E-01/
      DATA T2( 743)/.232598448665894E+00/,W2( 743)/.361439257535715E-01/
      DATA T2( 744)/.229995787070983E+00/,W2( 744)/.341700950539475E-01/
      DATA T2( 745)/.227360528305348E+00/,W2( 745)/.322945448786473E-01/
      DATA T2( 746)/.224692511368680E+00/,W2( 746)/.305132742784948E-01/
      DATA T2( 747)/.221991597395221E+00/,W2( 747)/.288223898232529E-01/
      DATA T2( 748)/.219257671312247E+00/,W2( 748)/.272181055572248E-01/
      DATA T2( 749)/.216490643559663E+00/,W2( 749)/.256967428257683E-01/
      DATA T2( 750)/.213690451868225E+00/,W2( 750)/.242547299739647E-01/
      DATA T2( 751)/.210857063093073E+00/,W2( 751)/.228886019190596E-01/
      DATA T2( 752)/.207990475098312E+00/,W2( 752)/.215949995986777E-01/
      DATA T2( 753)/.205090718687353E+00/,W2( 753)/.203706692971884E-01/
      DATA T2( 754)/.202157859572601E+00/,W2( 754)/.192124618529798E-01/
      DATA T2( 755)/.199192000376931E+00/,W2( 755)/.181173317497594E-01/
      DATA T2( 756)/.196193282658221E+00/,W2( 756)/.170823360953554E-01/
      DATA T2( 757)/.193161888947142E+00/,W2( 757)/.161046334918229E-01/
      DATA T2( 758)/.190098044787548E+00/,W2( 758)/.151814828009607E-01/
      DATA T2( 759)/.187002020768405E+00/,W2( 759)/.143102418096063E-01/
      DATA T2( 760)/.183874134536439E+00/,W2( 760)/.134883657992774E-01/
      DATA T2( 761)/.180714752780138E+00/,W2( 761)/.127134060248530E-01/
      DATA T2( 762)/.177524293178860E+00/,W2( 762)/.119830081070048E-01/
      DATA T2( 763)/.174303226316504E+00/,W2( 763)/.112949103429591E-01/
      DATA T2( 764)/.171052077568552E+00/,W2( 764)/.106469419398447E-01/
      DATA T2( 765)/.167771428985899E+00/,W2( 765)/.100370211742964E-01/
      DATA T2( 766)/.164461921220650E+00/,W2( 766)/.946315348104455E-02/
      DATA T2( 767)/.161124255570741E+00/,W2( 767)/.892342947182981E-02/
      DATA T2( 768)/.157759196265048E+00/,W2( 768)/.841602288398432E-02/
      DATA T2( 769)/.154367573172791E+00/,W2( 769)/.793918845526245E-02/
      DATA T2( 770)/.150950285205289E+00/,W2( 770)/.749125971777475E-02/
      DATA T2( 771)/.147508304789920E+00/,W2( 771)/.707064669896320E-02/
      DATA T2( 772)/.144042683940805E+00/,W2( 772)/.667583351123196E-02/
      DATA T2( 773)/.140554562632566E+00/,W2( 773)/.630537580393830E-02/
      DATA T2( 774)/.137045180403435E+00/,W2( 774)/.595789804190085E-02/
      DATA T2( 775)/.133515892366702E+00/,W2( 775)/.563209056360232E-02/
      DATA T2( 776)/.129968191077384E+00/,W2( 776)/.532670636052928E-02/
      DATA T2( 777)/.126403735947084E+00/,W2( 777)/.504055750807097E-02/
      DATA T2( 778)/.122824392056892E+00/,W2( 778)/.477251117078232E-02/
      DATA T2( 779)/.119232280175660E+00/,W2( 779)/.452148510505122E-02/
      DATA T2( 780)/.115629839384467E+00/,W2( 780)/.428644259703359E-02/
      DATA T2( 781)/.112019902713784E+00/,W2( 781)/.406638681245173E-02/
      DATA T2( 782)/.108405784350205E+00/,W2( 782)/.386035460896854E-02/
      DATA T2( 783)/.104791374007069E+00/,W2( 783)/.366740998306470E-02/
      DATA T2( 784)/.101181229846005E+00/,W2( 784)/.348663749917212E-02/
      DATA T2( 785)/.975806560730420E-01/,W2( 785)/.331713627475997E-02/
      DATA T2( 786)/.939957457786146E-01/,W2( 786)/.315801534364515E-02/
      DATA T2( 787)/.904333653197525E-01/,W2( 787)/.300839142932946E-02/
      DATA T2( 788)/.869010559556797E-01/,W2( 788)/.286739023062547E-02/
      DATA T2( 789)/.834068343052459E-01/,W2( 789)/.273415212937658E-02/
      DATA T2( 790)/.799588874625067E-01/,W2( 790)/.260784267128279E-02/
      DATA T2( 791)/.765651807702038E-01/,W2( 791)/.248766723555613E-02/
      DATA T2( 792)/.732330218717966E-01/,W2( 792)/.237288815453722E-02/
      DATA T2( 793)/.699686454815035E-01/,W2( 793)/.226284151463466E-02/
      DATA T2( 794)/.667768898951834E-01/,W2( 794)/.215695040497540E-02/
      DATA T2( 795)/.636610226940103E-01/,W2( 795)/.205473181300456E-02/
      DATA T2( 796)/.606227411910656E-01/,W2( 796)/.195579570327587E-02/
      DATA T2( 797)/.576623331000426E-01/,W2( 797)/.185983665433906E-02/
      DATA T2( 798)/.547789488942286E-01/,W2( 798)/.176662010994563E-02/
      DATA T2( 799)/.519709207577491E-01/,W2( 799)/.167596623085083E-02/
      DATA T2( 800)/.492360671965747E-01/,W2( 800)/.158773427403088E-02/
      DATA T2( 801)/.465719419377451E-01/,W2( 801)/.150180957210276E-02/
      DATA T2( 802)/.439760106416460E-01/,W2( 802)/.141809400523943E-02/
      DATA T2( 803)/.414457597728494E-01/,W2( 803)/.133649982582863E-02/
      DATA T2( 804)/.389787536734400E-01/,W2( 804)/.125694608946746E-02/
      DATA T2( 805)/.365726584416941E-01/,W2( 805)/.117935678993113E-02/
      DATA T2( 806)/.342252478667783E-01/,W2( 806)/.110365994287955E-02/
      DATA T2( 807)/.319344013029475E-01/,W2( 807)/.102978712136552E-02/
      DATA T2( 808)/.296980986919806E-01/,W2( 808)/.957673177225474E-03/
      DATA T2( 809)/.275144149647154E-01/,W2( 809)/.887256031836742E-03/
      DATA T2( 810)/.253815145798576E-01/,W2( 810)/.818476494484854E-03/
      DATA T2( 811)/.232976463877512E-01/,W2( 811)/.751278095922874E-03/
      DATA T2( 812)/.212611388363744E-01/,W2( 812)/.685606933691853E-03/
      DATA T2( 813)/.192703954996352E-01/,W2( 813)/.621411527915463E-03/
      DATA T2( 814)/.173238909037124E-01/,W2( 814)/.558642686711881E-03/
      DATA T2( 815)/.154201666285792E-01/,W2( 815)/.497253380479806E-03/
      DATA T2( 816)/.135578276637750E-01/,W2( 816)/.437198624383211E-03/
      DATA T2( 817)/.117355389992891E-01/,W2( 817)/.378435368417726E-03/
      DATA T2( 818)/.995202243404757E-02/,W2( 818)/.320922394494059E-03/
      DATA T2( 819)/.820605358596905E-02/,W2( 819)/.264620220021417E-03/
      DATA T2( 820)/.649645908889217E-02/,W2( 820)/.209491007516955E-03/
      DATA T2( 821)/.482211396288903E-02/,W2( 821)/.155498479806400E-03/
      DATA T2( 822)/.318193914557984E-02/,W2( 822)/.102607840416468E-03/
      DATA T2( 823)/.191299612589480E-02/,W2( 823)/.616882951629693E-04/
      DATA T2( 824)/.000000000000000E+00/,W2( 824)/.000000000000000E+00/
      DATA T2( 825)/.639252522759614E+00/,W2( 825)/.602331534419924E-01/
      DATA T2( 826)/.636992342566312E+00/,W2( 826)/.546127883842042E-01/
      DATA T2( 827)/.634677476234637E+00/,W2( 827)/.494533244845529E-01/
      DATA T2( 828)/.632306142544216E+00/,W2( 828)/.447231787648175E-01/
      DATA T2( 829)/.629876494194626E+00/,W2( 829)/.403924041316824E-01/
      DATA T2( 830)/.627386615565238E+00/,W2( 830)/.364326425537828E-01/
      DATA T2( 831)/.624834520463715E+00/,W2( 831)/.328170773386353E-01/
      DATA T2( 832)/.622218149874898E+00/,W2( 832)/.295203846321984E-01/
      DATA T2( 833)/.619535369723809E+00/,W2( 833)/.265186842661523E-01/
      DATA T2( 834)/.616783968668918E+00/,W2( 834)/.237894900797805E-01/
      DATA T2( 835)/.613961655944340E+00/,W2( 835)/.213116598446047E-01/
      DATA T2( 836)/.611066059272657E+00/,W2( 836)/.190653449205947E-01/
      DATA T2( 837)/.608094722873270E+00/,W2( 837)/.170319397728724E-01/
      DATA T2( 838)/.605045105594872E+00/,W2( 838)/.151940314772989E-01/
      DATA T2( 839)/.601914579204633E+00/,W2( 839)/.135353493421991E-01/
      DATA T2( 840)/.598700426871200E+00/,W2( 840)/.120407147716950E-01/
      DATA T2( 841)/.595399841883466E+00/,W2( 841)/.106959914937220E-01/
      DATA T2( 842)/.592009926652465E+00/,W2( 842)/.948803627276220E-02/
      DATA T2( 843)/.588527692049539E+00/,W2( 843)/.840465022367420E-02/
      DATA T2( 844)/.584950057140260E+00/,W2( 844)/.743453083873549E-02/
      DATA T2( 845)/.581273849380317E+00/,W2( 845)/.656722483515717E-02/
      DATA T2( 846)/.577495805346811E+00/,W2( 846)/.579308192491578E-02/
      DATA T2( 847)/.573612572085953E+00/,W2( 847)/.510320960279650E-02/
      DATA T2( 848)/.569620709166081E+00/,W2( 848)/.448942904209725E-02/
      DATA T2( 849)/.565516691533080E+00/,W2( 849)/.394423218054368E-02/
      DATA T2( 850)/.561296913273444E+00/,W2( 850)/.346074007166319E-02/
      DATA T2( 851)/.556957692398462E+00/,W2( 851)/.303266256920939E-02/
      DATA T2( 852)/.552495276770761E+00/,W2( 852)/.265425940427988E-02/
      DATA T2( 853)/.547905851301800E+00/,W2( 853)/.232030270658837E-02/
      DATA T2( 854)/.543185546555200E+00/,W2( 854)/.202604101300429E-02/
      DATA T2( 855)/.538330448895938E+00/,W2( 855)/.176716479802636E-02/
      DATA T2( 856)/.533336612328712E+00/,W2( 856)/.153977355238251E-02/
      DATA T2( 857)/.528200072169891E+00/,W2( 857)/.134034442751792E-02/
      DATA T2( 858)/.522916860695773E+00/,W2( 858)/.116570245541700E-02/
      DATA T2( 859)/.517483024904834E+00/,W2( 859)/.101299234507633E-02/
      DATA T2( 860)/.511894646522767E+00/,W2( 860)/.879651849071447E-03/
      DATA T2( 861)/.506147864366013E+00/,W2( 861)/.763386686107988E-03/
      DATA T2( 862)/.500238899161841E+00/,W2( 862)/.662146998279761E-03/
      DATA T2( 863)/.494164080901071E+00/,W2( 863)/.574105315029696E-03/
      DATA T2( 864)/.487919878773790E+00/,W2( 864)/.497635989576877E-03/
      DATA T2( 865)/.481502933710336E+00/,W2( 865)/.431296067878398E-03/
      DATA T2( 866)/.474910093521724E+00/,W2( 866)/.373807545076841E-03/
      DATA T2( 867)/.468138450609619E+00/,W2( 867)/.324040959871679E-03/
      DATA T2( 868)/.461185382201583E+00/,W2( 868)/.281000273366834E-03/
      DATA T2( 869)/.454048593070953E+00/,W2( 869)/.243808975698560E-03/
      DATA T2( 870)/.446726160733650E+00/,W2( 870)/.211697361139782E-03/
      DATA T2( 871)/.439216583191322E+00/,W2( 871)/.183990910401947E-03/
      DATA T2( 872)/.431518829430190E+00/,W2( 872)/.160099717496479E-03/
      DATA T2( 873)/.423632393110583E+00/,W2( 873)/.139508897749487E-03/
      DATA T2( 874)/.415557350218780E+00/,W2( 874)/.121769913350987E-03/
      DATA T2( 875)/.407294421926649E+00/,W2( 875)/.106492753121717E-03/
      DATA T2( 876)/.398845044537400E+00/,W2( 876)/.933389039480585E-04/
      DATA T2( 877)/.390211449195927E+00/,W2( 877)/.820150525159067E-04/
      DATA T2( 878)/.381396754990479E+00/,W2( 878)/.722674575131701E-04/
      DATA T2( 879)/.372405080098526E+00/,W2( 879)/.638769343171173E-04/
      DATA T2( 880)/.363241676579959E+00/,W2( 880)/.566543962966667E-04/
      DATA T2( 881)/.353913095013965E+00/,W2( 881)/.504368992219768E-04/
      DATA T2( 882)/.344427384953086E+00/,W2( 882)/.450841379019993E-04/
      DATA T2( 883)/.334794335448370E+00/,W2( 883)/.404753471388620E-04/
      DATA T2( 884)/.325025755773017E+00/,W2( 884)/.365065625476432E-04/
      DATA T2( 885)/.315135788882626E+00/,W2( 885)/.330882009855467E-04/
      DATA T2( 886)/.305141238151599E+00/,W2( 886)/.301429255932081E-04/
      DATA T2( 887)/.295061871201177E+00/,W2( 887)/.276037671177796E-04/
      DATA T2( 888)/.284920644327698E+00/,W2( 888)/.254124814591272E-04/
      DATA T2( 889)/.274743770771726E+00/,W2( 889)/.235181330014300E-04/
      DATA T2( 890)/.264560542707757E+00/,W2( 890)/.218759031295668E-04/
      DATA T2( 891)/.254402820153009E+00/,W2( 891)/.204461309748584E-04/
      DATA T2( 892)/.244304130161183E+00/,W2( 892)/.191935951946957E-04/
      DATA T2( 893)/.234298382082073E+00/,W2( 893)/.180870373806776E-04/
      DATA T2( 894)/.224418293422443E+00/,W2( 894)/.170989071738616E-04/
      DATA T2( 895)/.214693714600206E+00/,W2( 895)/.162052786734331E-04/
      DATA T2( 896)/.205150106143258E+00/,W2( 896)/.153858561830587E-04/
      DATA T2( 897)/.195807425883489E+00/,W2( 897)/.146239687158205E-04/
      DATA T2( 898)/.186679612333291E+00/,W2( 898)/.139064598077995E-04/
      DATA T2( 899)/.177774720293773E+00/,W2( 899)/.132234155008626E-04/
      DATA T2( 900)/.169095619286392E+00/,W2( 900)/.125677282946770E-04/
      DATA T2( 901)/.160641055229054E+00/,W2( 901)/.119345476980663E-04/
      DATA T2( 902)/.152406834542550E+00/,W2( 902)/.113206986398800E-04/
      DATA T2( 903)/.144386920420861E+00/,W2( 903)/.107241486401262E-04/
      DATA T2( 904)/.136574308687208E+00/,W2( 904)/.101435790981908E-04/
      DATA T2( 905)/.128961639228575E+00/,W2( 905)/.957808040025232E-05/
      DATA T2( 906)/.121541568188099E+00/,W2( 906)/.902695999077602E-05/
      DATA T2( 907)/.114306961925042E+00/,W2( 907)/.848963561775240E-05/
      DATA T2( 908)/.107250978761436E+00/,W2( 908)/.796558298683047E-05/
      DATA T2( 909)/.100367090864111E+00/,W2( 909)/.745431305082596E-05/
      DATA T2( 910)/.936490794701572E-01/,W2( 910)/.695536302636106E-05/
      DATA T2( 911)/.870910206877483E-01/,W2( 911)/.646829278443532E-05/
      DATA T2( 912)/.806872691668591E-01/,W2( 912)/.599268302074079E-05/
      DATA T2( 913)/.744324420996727E-01/,W2( 913)/.552813394935960E-05/
      DATA T2( 914)/.683214041604553E-01/,W2( 914)/.507426416698180E-05/
      DATA T2( 915)/.623492534471288E-01/,W2( 915)/.463070960693094E-05/
      DATA T2( 916)/.565113083678096E-01/,W2( 916)/.419712256508348E-05/
      DATA T2( 917)/.508030954013642E-01/,W2( 917)/.377317079083262E-05/
      DATA T2( 918)/.452203376649505E-01/,W2( 918)/.335853663799387E-05/
      DATA T2( 919)/.397589442271546E-01/,W2( 919)/.295291627108640E-05/
      DATA T2( 920)/.344150001106015E-01/,W2( 920)/.255601892282210E-05/
      DATA T2( 921)/.291847569326986E-01/,W2( 921)/.216756619898895E-05/
      DATA T2( 922)/.240646241374883E-01/,W2( 922)/.178729142723651E-05/
      DATA T2( 923)/.190511607755116E-01/,W2( 923)/.141493904656223E-05/
      DATA T2( 924)/.141410677921323E-01/,W2( 924)/.105026403456166E-05/
      DATA T2( 925)/.933118078800568E-02/,W2( 925)/.693031369744768E-06/
      DATA T2( 926)/.560994785908327E-02/,W2( 926)/.416653576573576E-06/
      DATA T2( 927)/.000000000000000E+00/,W2( 927)/.000000000000000E+00/
      DATA T2( 928)/.923561115881115E+00/,W2( 928)/.135062077721094E-01/
      DATA T2( 929)/.922870216950324E+00/,W2( 929)/.117788778570931E-01/
      DATA T2( 930)/.922156608492059E+00/,W2( 930)/.102472165594920E-01/
      DATA T2( 931)/.921419193135486E+00/,W2( 931)/.889226774100278E-02/
      DATA T2( 932)/.920656804071154E+00/,W2( 932)/.769655042323210E-02/
      DATA T2( 933)/.919868199657175E+00/,W2( 933)/.664397904843192E-02/
      DATA T2( 934)/.919052057532662E+00/,W2( 934)/.571978521229653E-02/
      DATA T2( 935)/.918206968187200E+00/,W2( 935)/.491044103728925E-02/
      DATA T2( 936)/.917331427929217E+00/,W2( 936)/.420358434581925E-02/
      DATA T2( 937)/.916423831189521E+00/,W2( 937)/.358794578254630E-02/
      DATA T2( 938)/.915482462088785E+00/,W2( 938)/.305327802422965E-02/
      DATA T2( 939)/.914505485189474E+00/,W2( 939)/.259028720389836E-02/
      DATA T2( 940)/.913490935343210E+00/,W2( 940)/.219056666379288E-02/
      DATA T2( 941)/.912436706534098E+00/,W2( 941)/.184653313857966E-02/
      DATA T2( 942)/.911340539606554E+00/,W2( 942)/.155136545687195E-02/
      DATA T2( 943)/.910200008752913E+00/,W2( 943)/.129894583519139E-02/
      DATA T2( 944)/.909012506621017E+00/,W2( 944)/.108380382428750E-02/
      DATA T2( 945)/.907775227885210E+00/,W2( 945)/.901062953304717E-03/
      DATA T2( 946)/.906485151105277E+00/,W2( 946)/.746390102768799E-03/
      DATA T2( 947)/.905139018676765E+00/,W2( 947)/.615947622876996E-03/
      DATA T2( 948)/.903733314652585E+00/,W2( 948)/.506348199245028E-03/
      DATA T2( 949)/.902264240189533E+00/,W2( 949)/.414612454214197E-03/
      DATA T2( 950)/.900727686344321E+00/,W2( 950)/.338129258179700E-03/
      DATA T2( 951)/.899119203911517E+00/,W2( 951)/.274618712289904E-03/
      DATA T2( 952)/.897433969960608E+00/,W2( 952)/.222097751405192E-03/
      DATA T2( 953)/.895666750690903E+00/,W2( 953)/.178848304507758E-03/
      DATA T2( 954)/.893811860181609E+00/,W2( 954)/.143387938925542E-03/
      DATA T2( 955)/.891863114570258E+00/,W2( 955)/.114442904870430E-03/
      DATA T2( 956)/.889813781146563E+00/,W2( 956)/.909234879769090E-04/
      DATA T2( 957)/.887656521801715E+00/,W2( 957)/.719015698334629E-04/
      DATA T2( 958)/.885383330226936E+00/,W2( 958)/.565902899813048E-04/
      DATA T2( 959)/.882985462212327E+00/,W2( 959)/.443256975535460E-04/
      DATA T2( 960)/.880453358361484E+00/,W2( 960)/.345502766656056E-04/
      DATA T2( 961)/.877776558514556E+00/,W2( 961)/.267982268497306E-04/
      DATA T2( 962)/.874943607169878E+00/,W2( 962)/.206823782399980E-04/
      DATA T2( 963)/.871941949222854E+00/,W2( 963)/.158826208280529E-04/
      DATA T2( 964)/.868757815414857E+00/,W2( 964)/.121357278754369E-04/
      DATA T2( 965)/.865376097024458E+00/,W2( 965)/.922645542022800E-05/
      DATA T2( 966)/.861780209564907E+00/,W2( 966)/.697980267292112E-05/
      DATA T2( 967)/.857951945610839E+00/,W2( 967)/.525432186430232E-05/
      DATA T2( 968)/.853871317410258E+00/,W2( 968)/.393637068006087E-05/
      DATA T2( 969)/.849516390705182E+00/,W2( 969)/.293520567725677E-05/
      DATA T2( 970)/.844863112262952E+00/,W2( 970)/.217882090404123E-05/
      DATA T2( 971)/.839885135106444E+00/,W2( 971)/.161044220990918E-05/
      DATA T2( 972)/.834553647442848E+00/,W2( 972)/.118559431204781E-05/
      DATA T2( 973)/.828837213965887E+00/,W2( 973)/.869664448908411E-06/
      DATA T2( 974)/.822701641700705E+00/,W2( 974)/.635893284781708E-06/
      DATA T2( 975)/.816109887034578E+00/,W2( 975)/.463730516323865E-06/
      DATA T2( 976)/.809022026172412E+00/,W2( 976)/.337499271079648E-06/
      DATA T2( 977)/.801395318054795E+00/,W2( 977)/.245319788505428E-06/
      DATA T2( 978)/.793184396729087E+00/,W2( 978)/.178248958791140E-06/
      DATA T2( 979)/.784341638982309E+00/,W2( 979)/.129598001514855E-06/
      DATA T2( 980)/.774817762046325E+00/,W2( 980)/.943958475636246E-07/
      DATA T2( 981)/.764562714088110E+00/,W2( 981)/.689706116511546E-07/
      DATA T2( 982)/.753526924871668E+00/,W2( 982)/.506258915451696E-07/
      DATA T2( 983)/.741662982209382E+00/,W2( 983)/.373924997076728E-07/
      DATA T2( 984)/.728927787176270E+00/,W2( 984)/.278396314798472E-07/
      DATA T2( 985)/.715285212044112E+00/,W2( 985)/.209324196058352E-07/
      DATA T2( 986)/.700709233658106E+00/,W2( 986)/.159253445950907E-07/
      DATA T2( 987)/.685187436943112E+00/,W2( 987)/.122830973420577E-07/
      DATA T2( 988)/.668724677838534E+00/,W2( 988)/.962226204507738E-08/
      DATA T2( 989)/.651346569554902E+00/,W2( 989)/.766864367111061E-08/
      DATA T2( 990)/.633102329938460E+00/,W2( 990)/.622624551575506E-08/
      DATA T2( 991)/.614066434559134E+00/,W2( 991)/.515484844537343E-08/
      DATA T2( 992)/.594338505284694E+00/,W2( 992)/.435389164657845E-08/
      DATA T2( 993)/.574040973976225E+00/,W2( 993)/.375093935804703E-08/
      DATA T2( 994)/.553314323271887E+00/,W2( 994)/.329346917657824E-08/
      DATA T2( 995)/.532310106415610E+00/,W2( 995)/.294306039768049E-08/
      DATA T2( 996)/.511182412244945E+00/,W2( 996)/.267131592562128E-08/
      DATA T2( 997)/.490078844281606E+00/,W2( 997)/.245703509241389E-08/
      DATA T2( 998)/.469132284595798E+00/,W2( 998)/.228428182322940E-08/
      DATA T2( 999)/.448454618715673E+00/,W2( 999)/.214107786391493E-08/
      DATA T2(1000)/.428133208523804E+00/,W2(1000)/.201851030079248E-08/
      DATA T2(1001)/.408230324713844E+00/,W2(1001)/.191009144315484E-08/
      DATA T2(1002)/.388785164796863E+00/,W2(1002)/.181125698593283E-08/
      DATA T2(1003)/.369817656606180E+00/,W2(1003)/.171893618687073E-08/
      DATA T2(1004)/.351333078724678E+00/,W2(1004)/.163116918034037E-08/
      DATA T2(1005)/.333326617828883E+00/,W2(1005)/.154677363408459E-08/
      DATA T2(1006)/.315787247955264E+00/,W2(1006)/.146507257557818E-08/
      DATA T2(1007)/.298700642484404E+00/,W2(1007)/.138569100757058E-08/
      DATA T2(1008)/.282051112774032E+00/,W2(1008)/.130841863126551E-08/
      DATA T2(1009)/.265822747429100E+00/,W2(1009)/.123312689011815E-08/
      DATA T2(1010)/.249999993201208E+00/,W2(1010)/.115972444427907E-08/
      DATA T2(1011)/.234567900358296E+00/,W2(1011)/.108813611917003E-08/
      DATA T2(1012)/.219512195169506E+00/,W2(1012)/.101829420028463E-08/
      DATA T2(1013)/.204819277260133E+00/,W2(1013)/.950135276820765E-09/
      DATA T2(1014)/.190476190627246E+00/,W2(1014)/.883599192284088E-09/
      DATA T2(1015)/.176470588375903E+00/,W2(1015)/.818628663391472E-09/
      DATA T2(1016)/.162790697804157E+00/,W2(1016)/.755169077079926E-09/
      DATA T2(1017)/.149425287475409E+00/,W2(1017)/.693168331835211E-09/
      DATA T2(1018)/.136363636472314E+00/,W2(1018)/.632576694437027E-09/
      DATA T2(1019)/.123595505716479E+00/,W2(1019)/.573346666868017E-09/
      DATA T2(1020)/.111111111199663E+00/,W2(1020)/.515432862133875E-09/
      DATA T2(1021)/.989010989799200E-01/,W2(1021)/.458791888273009E-09/
      DATA T2(1022)/.869565218084321E-01/,W2(1022)/.403382239930858E-09/
      DATA T2(1023)/.752688172642880E-01/,W2(1023)/.349164196929399E-09/
      DATA T2(1024)/.638297872849129E-01/,W2(1024)/.296099729310949E-09/
      DATA T2(1025)/.526315789893142E-01/,W2(1025)/.244152408379204E-09/
      DATA T2(1026)/.416666666998737E-01/,W2(1026)/.193287323300203E-09/
      DATA T2(1027)/.309278350761949E-01/,W2(1027)/.143471002862006E-09/
      DATA T2(1028)/.204081632815708E-01/,W2(1028)/.946713420245893E-10/
      DATA T2(1029)/.122694795557315E-01/,W2(1029)/.569168366333727E-10/
      DATA T2(1030)/.000000000000000E+00/,W2(1030)/.000000000000000E+00/
      END
